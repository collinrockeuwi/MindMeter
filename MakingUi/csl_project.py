# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'makingui4.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_PsycheEval_MainWindow(object):
    def setupUi(self, PsycheEval_MainWindow):
        PsycheEval_MainWindow.setObjectName("PsycheEval_MainWindow")
        PsycheEval_MainWindow.resize(2038, 1116)
        PsycheEval_MainWindow.setStyleSheet("background-color: rgb(245, 250, 254);")
        self.MainWindow_grid_lyt = QtWidgets.QWidget(PsycheEval_MainWindow)
        self.MainWindow_grid_lyt.setObjectName("MainWindow_grid_lyt")
        self.MainWindow_gridLayout = QtWidgets.QGridLayout(self.MainWindow_grid_lyt)
        self.MainWindow_gridLayout.setContentsMargins(0, -1, -1, -1)
        self.MainWindow_gridLayout.setHorizontalSpacing(0)
        self.MainWindow_gridLayout.setObjectName("MainWindow_gridLayout")
        self.expanded_icon_widget = QtWidgets.QWidget(self.MainWindow_grid_lyt)
        self.expanded_icon_widget.setMinimumSize(QtCore.QSize(281, 0))
        self.expanded_icon_widget.setMaximumSize(QtCore.QSize(281, 16777215))
        self.expanded_icon_widget.setStyleSheet("QWidget{\n"
"\n"
"background-color: rgb(31, 149, 239);\n"
"}\n"
"QPushButton {\n"
"    color: white;\n"
"    text-align: left;\n"
"    height:70px;\n"
"    border: 1px;\n"
"    padding-left: 10px;\n"
"    border-top-left-radius: 10px; /* Round top left corner */\n"
"    border-bottom-left-radius: 10px; /* Round bottom left corner */\n"
"    background-color: rgb(31, 149, 239); /* Normal background color */\n"
"    font-size: 30px; /* Set the font size here */\n"
"    /* Other styles */\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: rgb(45, 45, 45); /* Darker background color on hover */\n"
"    color: rgb(220, 220, 220); /* Slightly lighter text color on hover */\n"
"}\n"
"\n"
"QPushButton:checked {\n"
" \n"
"     background-color: rgb(45, 45, 45); /* Darker background color on checked */\n"
"}\n"
"\n"
"QLabel {\n"
"    color: white;\n"
"}\n"
"\n"
"")
        self.expanded_icon_widget.setObjectName("expanded_icon_widget")
        self.expanded_icon_widget_gridLayout = QtWidgets.QGridLayout(self.expanded_icon_widget)
        self.expanded_icon_widget_gridLayout.setContentsMargins(-1, -1, 0, -1)
        self.expanded_icon_widget_gridLayout.setObjectName("expanded_icon_widget_gridLayout")
        self.expanded_icon_verticalLayout = QtWidgets.QVBoxLayout()
        self.expanded_icon_verticalLayout.setObjectName("expanded_icon_verticalLayout")
        self.Logo = QtWidgets.QSplitter(self.expanded_icon_widget)
        self.Logo.setOrientation(QtCore.Qt.Horizontal)
        self.Logo.setObjectName("Logo")
        self.logo_label = QtWidgets.QLabel(self.Logo)
        self.logo_label.setMinimumSize(QtCore.QSize(40, 40))
        self.logo_label.setMaximumSize(QtCore.QSize(50, 50))
        self.logo_label.setText("")
        self.logo_label.setPixmap(QtGui.QPixmap(":/icon/icon/group-48.ico"))
        self.logo_label.setScaledContents(True)
        self.logo_label.setObjectName("logo_label")
        self.logo_mainlabel = QtWidgets.QLabel(self.Logo)
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(24)
        font.setBold(False)
        font.setWeight(50)
        self.logo_mainlabel.setFont(font)
        self.logo_mainlabel.setObjectName("logo_mainlabel")
        self.expanded_icon_verticalLayout.addWidget(self.Logo)
        spacerItem = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        self.expanded_icon_verticalLayout.addItem(spacerItem)
        self.expanded_icon_verticalLayout_2 = QtWidgets.QVBoxLayout()
        self.expanded_icon_verticalLayout_2.setSpacing(40)
        self.expanded_icon_verticalLayout_2.setObjectName("expanded_icon_verticalLayout_2")
        self.expanded_icon_General_pushButton = QtWidgets.QPushButton(self.expanded_icon_widget)
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(-1)
        font.setBold(True)
        font.setWeight(75)
        self.expanded_icon_General_pushButton.setFont(font)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/icon/icon/home-4-48.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.expanded_icon_General_pushButton.setIcon(icon)
        self.expanded_icon_General_pushButton.setIconSize(QtCore.QSize(50, 50))
        self.expanded_icon_General_pushButton.setCheckable(True)
        self.expanded_icon_General_pushButton.setAutoExclusive(True)
        self.expanded_icon_General_pushButton.setObjectName("expanded_icon_General_pushButton")
        self.expanded_icon_verticalLayout_2.addWidget(self.expanded_icon_General_pushButton)
        self.expanded_icon_Stress_pushButton = QtWidgets.QPushButton(self.expanded_icon_widget)
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(-1)
        font.setBold(True)
        font.setWeight(75)
        self.expanded_icon_Stress_pushButton.setFont(font)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/icon/icon/dashboard-5-48.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.expanded_icon_Stress_pushButton.setIcon(icon1)
        self.expanded_icon_Stress_pushButton.setIconSize(QtCore.QSize(50, 50))
        self.expanded_icon_Stress_pushButton.setCheckable(True)
        self.expanded_icon_Stress_pushButton.setAutoExclusive(True)
        self.expanded_icon_Stress_pushButton.setObjectName("expanded_icon_Stress_pushButton")
        self.expanded_icon_verticalLayout_2.addWidget(self.expanded_icon_Stress_pushButton)
        self.expanded_icon_Depression_pushButton = QtWidgets.QPushButton(self.expanded_icon_widget)
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(-1)
        font.setBold(True)
        font.setWeight(75)
        self.expanded_icon_Depression_pushButton.setFont(font)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/icon/icon/product-48.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.expanded_icon_Depression_pushButton.setIcon(icon2)
        self.expanded_icon_Depression_pushButton.setIconSize(QtCore.QSize(50, 50))
        self.expanded_icon_Depression_pushButton.setCheckable(True)
        self.expanded_icon_Depression_pushButton.setAutoExclusive(True)
        self.expanded_icon_Depression_pushButton.setObjectName("expanded_icon_Depression_pushButton")
        self.expanded_icon_verticalLayout_2.addWidget(self.expanded_icon_Depression_pushButton)
        self.expanded_icon_SelfEsteem_pushButton = QtWidgets.QPushButton(self.expanded_icon_widget)
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(-1)
        font.setBold(True)
        font.setWeight(75)
        self.expanded_icon_SelfEsteem_pushButton.setFont(font)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/icon/icon/user-48-white.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.expanded_icon_SelfEsteem_pushButton.setIcon(icon3)
        self.expanded_icon_SelfEsteem_pushButton.setIconSize(QtCore.QSize(50, 50))
        self.expanded_icon_SelfEsteem_pushButton.setCheckable(True)
        self.expanded_icon_SelfEsteem_pushButton.setAutoExclusive(True)
        self.expanded_icon_SelfEsteem_pushButton.setObjectName("expanded_icon_SelfEsteem_pushButton")
        self.expanded_icon_verticalLayout_2.addWidget(self.expanded_icon_SelfEsteem_pushButton)
        self.expanded_icon_Preview_pushButton = QtWidgets.QPushButton(self.expanded_icon_widget)
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(-1)
        font.setBold(True)
        font.setWeight(75)
        self.expanded_icon_Preview_pushButton.setFont(font)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(":/icon/icon/activity-feed-48.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.expanded_icon_Preview_pushButton.setIcon(icon4)
        self.expanded_icon_Preview_pushButton.setIconSize(QtCore.QSize(50, 50))
        self.expanded_icon_Preview_pushButton.setCheckable(True)
        self.expanded_icon_Preview_pushButton.setAutoExclusive(True)
        self.expanded_icon_Preview_pushButton.setObjectName("expanded_icon_Preview_pushButton")
        self.expanded_icon_verticalLayout_2.addWidget(self.expanded_icon_Preview_pushButton)
        self.expanded_icon_Database_pushButton = QtWidgets.QPushButton(self.expanded_icon_widget)
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(-1)
        font.setBold(True)
        font.setWeight(75)
        self.expanded_icon_Database_pushButton.setFont(font)
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap(":/icon/icon/search-13.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.expanded_icon_Database_pushButton.setIcon(icon5)
        self.expanded_icon_Database_pushButton.setIconSize(QtCore.QSize(50, 50))
        self.expanded_icon_Database_pushButton.setCheckable(True)
        self.expanded_icon_Database_pushButton.setAutoExclusive(True)
        self.expanded_icon_Database_pushButton.setObjectName("expanded_icon_Database_pushButton")
        self.expanded_icon_verticalLayout_2.addWidget(self.expanded_icon_Database_pushButton)
        spacerItem1 = QtWidgets.QSpacerItem(20, 188, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.expanded_icon_verticalLayout_2.addItem(spacerItem1)
        self.expanded_icon_Exit_pushButton = QtWidgets.QPushButton(self.expanded_icon_widget)
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(-1)
        font.setBold(True)
        font.setWeight(75)
        self.expanded_icon_Exit_pushButton.setFont(font)
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap(":/icon/icon/close-window-64-white.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.expanded_icon_Exit_pushButton.setIcon(icon6)
        self.expanded_icon_Exit_pushButton.setIconSize(QtCore.QSize(50, 50))
        self.expanded_icon_Exit_pushButton.setObjectName("expanded_icon_Exit_pushButton")
        self.expanded_icon_verticalLayout_2.addWidget(self.expanded_icon_Exit_pushButton)
        self.expanded_icon_verticalLayout.addLayout(self.expanded_icon_verticalLayout_2)
        self.expanded_icon_widget_gridLayout.addLayout(self.expanded_icon_verticalLayout, 0, 0, 1, 1)
        self.MainWindow_gridLayout.addWidget(self.expanded_icon_widget, 0, 1, 1, 1)
        self.MainWindow_2 = QtWidgets.QWidget(self.MainWindow_grid_lyt)
        self.MainWindow_2.setObjectName("MainWindow_2")
        self.MainWindow_2_verticalLayout = QtWidgets.QVBoxLayout(self.MainWindow_2)
        self.MainWindow_2_verticalLayout.setContentsMargins(0, 0, -1, -1)
        self.MainWindow_2_verticalLayout.setObjectName("MainWindow_2_verticalLayout")
        self.topbar_widget = QtWidgets.QWidget(self.MainWindow_2)
        self.topbar_widget.setMinimumSize(QtCore.QSize(0, 61))
        self.topbar_widget.setMaximumSize(QtCore.QSize(16777215, 61))
        self.topbar_widget.setStyleSheet("QWidget{\n"
"\n"
"background-color: rgb(31, 149, 239);\n"
"}\n"
"\n"
"QPushButton {\n"
"    color: white;\n"
"    text-align: centre;\n"
"    height: 30px;\n"
"    border: none;\n"
"    \n"
"    border-radius: 5px; \n"
"    \n"
"    background-color: rgb(31, 149, 239); /* Normal background color */\n"
"    font-size: 14px; /* Set the font size here */\n"
"    /* Other styles */\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: rgb(45, 45, 45); /* Darker background color on hover */\n"
"    color: rgb(220, 220, 220); /* Slightly lighter text color on hover */\n"
"}\n"
"\n"
"QPushButton:checked {\n"
" \n"
"     background-color: rgb(45, 45, 45); /* Darker background color on checked */\n"
"}\n"
"\n"
"QLabel {\n"
"    color: white;\n"
"    qproperty-alignment: AlignCenter; /* This will center the text */\n"
"}\n"
"\n"
"\n"
"")
        self.topbar_widget.setObjectName("topbar_widget")
        self.topbar_widget_gridLayout = QtWidgets.QGridLayout(self.topbar_widget)
        self.topbar_widget_gridLayout.setContentsMargins(3, 3, 3, 3)
        self.topbar_widget_gridLayout.setObjectName("topbar_widget_gridLayout")
        self.topbar_horizontalLayout = QtWidgets.QHBoxLayout()
        self.topbar_horizontalLayout.setObjectName("topbar_horizontalLayout")
        self.topbar_menu_button = QtWidgets.QPushButton(self.topbar_widget)
        self.topbar_menu_button.setMinimumSize(QtCore.QSize(50, 50))
        self.topbar_menu_button.setMaximumSize(QtCore.QSize(50, 50))
        self.topbar_menu_button.setText("")
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap(":/icon/icon/menu-4-32-white.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.topbar_menu_button.setIcon(icon7)
        self.topbar_menu_button.setIconSize(QtCore.QSize(30, 30))
        self.topbar_menu_button.setCheckable(True)
        self.topbar_menu_button.setAutoExclusive(True)
        self.topbar_menu_button.setObjectName("topbar_menu_button")
        self.topbar_horizontalLayout.addWidget(self.topbar_menu_button)
        spacerItem2 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.topbar_horizontalLayout.addItem(spacerItem2)
        self.topbar_widget_gridLayout.addLayout(self.topbar_horizontalLayout, 0, 0, 1, 1)
        self.MainWindow_2_verticalLayout.addWidget(self.topbar_widget)
        self.Active_widget = QtWidgets.QWidget(self.MainWindow_2)
        self.Active_widget.setObjectName("Active_widget")
        self.Active_widget_vertical_lyt = QtWidgets.QVBoxLayout(self.Active_widget)
        self.Active_widget_vertical_lyt.setObjectName("Active_widget_vertical_lyt")
        self.stackedWidget = QtWidgets.QStackedWidget(self.Active_widget)
        self.stackedWidget.setStyleSheet("QLabel {\n"
" \n"
"    qproperty-alignment: \'AlignVCenter | AlignLeft\'; /* Vertically centered and left-aligned */\n"
"  \n"
"}\n"
"")
        self.stackedWidget.setObjectName("stackedWidget")
        self.SelfEsteem_Page = QtWidgets.QWidget()
        self.SelfEsteem_Page.setStyleSheet("#selfEsteem_instructions {\n"
"    font-family: \'Roboto \';\n"
"    font-size: 20px;\n"
"    font-weight: bold;\n"
"    color: rgb(24, 45, 83 ); /* Set the font color to white */\n"
"    background-color: transparent; /* Make the background transparent */\n"
"}\n"
"\n"
"\n"
"\n"
"#selfEsteem_savebutton {\n"
"    /* General styling for the checkbox */\n"
"    font-family: \'Roboto\';\n"
"    color: rgb(24, 45, 83); /* Text color */\n"
"    font-size: 16px; /* Font size */\n"
"    spacing: 5px; /* Space between the indicator and the text */\n"
"    background-color: transparent; /* Make the background transparent */\n"
"}\n"
"\n"
"#selfEsteem_savebutton::indicator {\n"
"    /* Styling for the indicator (the square part) */\n"
"    width: 150px; /* Width of the indicator */\n"
"    height: 150px; /* Height of the indicator */\n"
"}\n"
"\n"
"#selfEsteem_savebutton::indicator::unchecked {\n"
"    /* Styling for the indicator when the checkbox is unchecked */\n"
"    background-color: transparent; /* Background color */\n"
"    border: transparent; /* Border color and width */\n"
"    border-radius: 4px; /* Optional: if you want rounded corners for the square */\n"
"     image: url(:/icon/icon/notsaved.png); /* Absolute path to the checkmark image */\n"
"}\n"
"\n"
"\n"
"\n"
"#selfEsteem_savebutton::indicator::checked {\n"
"    /* Styling for the indicator when the checkbox is checked */\n"
"    background-color: transparent; /* Background color */\n"
"    border: transparent; /* Border color and width */\n"
"    border-radius: 4px; /* Optional: if you want rounded corners for the square */\n"
"    image: url(:/icon/icon/saved.png); /* Absolute path to the checkmark image */\n"
"    \n"
"}")
        self.SelfEsteem_Page.setObjectName("SelfEsteem_Page")
        self._gridLayout = QtWidgets.QGridLayout(self.SelfEsteem_Page)
        self._gridLayout.setObjectName("_gridLayout")
        self.SelfEsteem_tabWidget = QtWidgets.QTabWidget(self.SelfEsteem_Page)
        font = QtGui.QFont()
        font.setFamily("Roboto Cn")
        font.setPointSize(11)
        self.SelfEsteem_tabWidget.setFont(font)
        self.SelfEsteem_tabWidget.setStyleSheet("QTabWidget::pane {\n"
"    /* The tab widget frame */\n"
"    border-top: 2px solid rgb(31, 149, 239);\n"
"    border-radius: 5px; /* Rounded corners for the pane */\n"
"}\n"
"\n"
"QTabWidget::tab-bar {\n"
"    /* The tab bar */\n"
"    left: 5px; /* Move the bar to the right */\n"
"}\n"
"\n"
"QTabBar::tab {\n"
"    /* The tab */\n"
"    background-color: rgb(31, 149, 239);\n"
"    color: white;\n"
"    padding: 5px;\n"
"    border: none;\n"
"    min-width: 80px; /* Set the minimum width of the tab */\n"
"    min-height: 30px; /* Set the minimum height of the tab */\n"
"    margin-right: 2px; /* Space between tabs */\n"
"    border-top-left-radius: 5px; /* Rounded top-left corner */\n"
"    border-top-right-radius: 5px; /* Rounded top-right corner */\n"
"}\n"
"\n"
"QTabBar::tab:selected {\n"
"    /* The selected tab */\n"
"    background-color: rgb(45, 45, 45);\n"
"    border-top-left-radius: 5px; /* Maintain rounded corner when selected */\n"
"    border-top-right-radius: 5px; /* Maintain rounded corner when selected */\n"
"}\n"
"\n"
"QTabBar::tab:hover {\n"
"    /* The tab when hovered over */\n"
"    background-color: rgb(51, 169, 259);\n"
"}\n"
"")
        self.SelfEsteem_tabWidget.setObjectName("SelfEsteem_tabWidget")
        self.SE_Tab_Page_1 = QtWidgets.QWidget()
        self.SE_Tab_Page_1.setStyleSheet("QLabel {\n"
"\n"
" \n"
"   \n"
"    \n"
"}\n"
"")
        self.SE_Tab_Page_1.setObjectName("SE_Tab_Page_1")
        self.SE_Tab_Page_verticalLayout = QtWidgets.QVBoxLayout(self.SE_Tab_Page_1)
        self.SE_Tab_Page_verticalLayout.setObjectName("SE_Tab_Page_verticalLayout")
        self.SE_Q1_horizontal_question_lyt_2 = QtWidgets.QHBoxLayout()
        self.SE_Q1_horizontal_question_lyt_2.setObjectName("SE_Q1_horizontal_question_lyt_2")
        self.selfEsteem_instructions = QtWidgets.QLabel(self.SE_Tab_Page_1)
        self.selfEsteem_instructions.setMinimumSize(QtCore.QSize(500, 50))
        self.selfEsteem_instructions.setMaximumSize(QtCore.QSize(500, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto ")
        font.setPointSize(-1)
        font.setBold(True)
        font.setWeight(75)
        self.selfEsteem_instructions.setFont(font)
        self.selfEsteem_instructions.setObjectName("selfEsteem_instructions")
        self.SE_Q1_horizontal_question_lyt_2.addWidget(self.selfEsteem_instructions)
        spacerItem3 = QtWidgets.QSpacerItem(1000, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.SE_Q1_horizontal_question_lyt_2.addItem(spacerItem3)
        self.SE_Tab_Page_verticalLayout.addLayout(self.SE_Q1_horizontal_question_lyt_2)
        self.SE_Q1_horizontal_question_lyt = QtWidgets.QHBoxLayout()
        self.SE_Q1_horizontal_question_lyt.setObjectName("SE_Q1_horizontal_question_lyt")
        self.SE_Q1_no_Label = QtWidgets.QLabel(self.SE_Tab_Page_1)
        self.SE_Q1_no_Label.setMinimumSize(QtCore.QSize(60, 60))
        self.SE_Q1_no_Label.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.SE_Q1_no_Label.setFont(font)
        self.SE_Q1_no_Label.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.SE_Q1_no_Label.setObjectName("SE_Q1_no_Label")
        self.SE_Q1_horizontal_question_lyt.addWidget(self.SE_Q1_no_Label)
        spacerItem4 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.SE_Q1_horizontal_question_lyt.addItem(spacerItem4)
        self.SE_Q1_question = QtWidgets.QLabel(self.SE_Tab_Page_1)
        self.SE_Q1_question.setMinimumSize(QtCore.QSize(800, 50))
        self.SE_Q1_question.setMaximumSize(QtCore.QSize(800, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.SE_Q1_question.setFont(font)
        self.SE_Q1_question.setObjectName("SE_Q1_question")
        self.SE_Q1_horizontal_question_lyt.addWidget(self.SE_Q1_question)
        self.SE_Q1_horizontalSlider = QtWidgets.QSlider(self.SE_Tab_Page_1)
        self.SE_Q1_horizontalSlider.setMinimumSize(QtCore.QSize(351, 71))
        self.SE_Q1_horizontalSlider.setMaximumSize(QtCore.QSize(351, 71))
        self.SE_Q1_horizontalSlider.setStyleSheet("QSlider::groove:horizontal {\n"
"    border: 1px solid #999999;\n"
"    height: 30px; /* Set the height of the groove */\n"
"    background: white;\n"
"    margin: 2px 0;\n"
"    border-radius: 4px; /* Setting border radius for groove */\n"
"}\n"
"\n"
"QSlider::handle:horizontal {\n"
"    background: rgb(31, 149, 239); /* Handle color */\n"
"    border: none; /* No border for handle */\n"
"    width: 60px; /* Width of the handle */\n"
"    margin: -2px 0; /* Expand outside the groove */\n"
"    border-radius: 5px; /* Rounded corners for handle */\n"
"    position: absolute; /* Necessary for proper handle positioning */\n"
"}\n"
"\n"
"QSlider::handle:horizontal:hover {\n"
"    background: rgb(45, 45, 45); /* Handle color when hovered */\n"
"}\n"
"\n"
"/* Style for when the handle is pressed */\n"
"QSlider::handle:horizontal:pressed {\n"
"    background: rgb(31, 149, 239); /* You might want to change this color */\n"
"}\n"
"\n"
"/* Ticks styling */\n"
"QSlider::sub-page:horizontal {\n"
"    background: rgb(31, 149, 239); /* Color of the part before the handle */\n"
"    border-radius: 4px;\n"
"}\n"
"\n"
"QSlider::add-page:horizontal {\n"
"    background: white; /* Color of the part after the handle */\n"
"    border-radius: 4px;\n"
"}\n"
"")
        self.SE_Q1_horizontalSlider.setMaximum(20)
        self.SE_Q1_horizontalSlider.setPageStep(5)
        self.SE_Q1_horizontalSlider.setOrientation(QtCore.Qt.Horizontal)
        self.SE_Q1_horizontalSlider.setObjectName("SE_Q1_horizontalSlider")
        self.SE_Q1_horizontal_question_lyt.addWidget(self.SE_Q1_horizontalSlider)
        self.SE_1_spinBox = QtWidgets.QSpinBox(self.SE_Tab_Page_1)
        self.SE_1_spinBox.setMinimumSize(QtCore.QSize(90, 60))
        self.SE_1_spinBox.setMaximumSize(QtCore.QSize(90, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(20)
        self.SE_1_spinBox.setFont(font)
        self.SE_1_spinBox.setStyleSheet("QSpinBox {\n"
"    background-color: white;\n"
"    color: black;\n"
"    border: 2px solid black;\n"
"    border-radius: 5px;\n"
"\n"
"    padding-left: 20px; /* Adjust left padding to center text */\n"
"  \n"
"    margin: 2px;\n"
"}\n"
"\n"
"QSpinBox::up-button {\n"
"    /* Styling for the up-button */\n"
"    subcontrol-origin: border; /* Position within the border */\n"
"    subcontrol-position: top right; /* Position at the top right */\n"
"    width: 15px; /* Width of the up-button */\n"
"    border-left: 1px solid black; /* Border between the up-button and the spin box */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    /* Styling for the down-button */\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"    border-left: 1px solid black;\n"
"}\n"
"\n"
"QSpinBox::up-arrow {\n"
"    /* Arrow styling within the up-button */\n"
"    width: 7px; /* Width of the arrow */\n"
"    height: 7px; /* Height of the arrow */\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"QSpinBox::down-arrow {\n"
"    /* Arrow styling within the down-button */\n"
"    width: 7px;\n"
"    height: 7px;\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: top right;\n"
"    width: 15px;\n"
"    border-bottom: 1px solid black; /* Add border between the up-button and down-button */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button:pressed {\n"
"    /* Styling for the up-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::down-button:pressed {\n"
"    /* Styling for the down-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::up-button:hover, QSpinBox::down-button:hover {\n"
"    /* Styling for the buttons when hovered */\n"
"    background-color: #e0e0e0;\n"
"}")
        self.SE_1_spinBox.setButtonSymbols(QtWidgets.QAbstractSpinBox.UpDownArrows)
        self.SE_1_spinBox.setMaximum(20)
        self.SE_1_spinBox.setObjectName("SE_1_spinBox")
        self.SE_Q1_horizontal_question_lyt.addWidget(self.SE_1_spinBox)
        self.SE_Tab_Page_verticalLayout.addLayout(self.SE_Q1_horizontal_question_lyt)
        self.SE_Q2_horizontal_question_lyt = QtWidgets.QHBoxLayout()
        self.SE_Q2_horizontal_question_lyt.setObjectName("SE_Q2_horizontal_question_lyt")
        self.SE_Q2_no_Label = QtWidgets.QLabel(self.SE_Tab_Page_1)
        self.SE_Q2_no_Label.setMinimumSize(QtCore.QSize(60, 60))
        self.SE_Q2_no_Label.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.SE_Q2_no_Label.setFont(font)
        self.SE_Q2_no_Label.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.SE_Q2_no_Label.setObjectName("SE_Q2_no_Label")
        self.SE_Q2_horizontal_question_lyt.addWidget(self.SE_Q2_no_Label)
        spacerItem5 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.SE_Q2_horizontal_question_lyt.addItem(spacerItem5)
        self.SE_Q2_question = QtWidgets.QLabel(self.SE_Tab_Page_1)
        self.SE_Q2_question.setMinimumSize(QtCore.QSize(800, 50))
        self.SE_Q2_question.setMaximumSize(QtCore.QSize(800, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.SE_Q2_question.setFont(font)
        self.SE_Q2_question.setObjectName("SE_Q2_question")
        self.SE_Q2_horizontal_question_lyt.addWidget(self.SE_Q2_question)
        self.SE_Q2_horizontalSlider = QtWidgets.QSlider(self.SE_Tab_Page_1)
        self.SE_Q2_horizontalSlider.setMinimumSize(QtCore.QSize(351, 71))
        self.SE_Q2_horizontalSlider.setMaximumSize(QtCore.QSize(351, 71))
        self.SE_Q2_horizontalSlider.setStyleSheet("QSlider::groove:horizontal {\n"
"    border: 1px solid #999999;\n"
"    height: 30px; /* Set the height of the groove */\n"
"    background: white;\n"
"    margin: 2px 0;\n"
"    border-radius: 4px; /* Setting border radius for groove */\n"
"}\n"
"\n"
"QSlider::handle:horizontal {\n"
"    background: rgb(31, 149, 239); /* Handle color */\n"
"    border: none; /* No border for handle */\n"
"    width: 60px; /* Width of the handle */\n"
"    margin: -2px 0; /* Expand outside the groove */\n"
"    border-radius: 5px; /* Rounded corners for handle */\n"
"    position: absolute; /* Necessary for proper handle positioning */\n"
"}\n"
"\n"
"QSlider::handle:horizontal:hover {\n"
"    background: rgb(45, 45, 45); /* Handle color when hovered */\n"
"}\n"
"\n"
"/* Style for when the handle is pressed */\n"
"QSlider::handle:horizontal:pressed {\n"
"    background: rgb(31, 149, 239); /* You might want to change this color */\n"
"}\n"
"\n"
"/* Ticks styling */\n"
"QSlider::sub-page:horizontal {\n"
"    background: rgb(31, 149, 239); /* Color of the part before the handle */\n"
"    border-radius: 4px;\n"
"}\n"
"\n"
"QSlider::add-page:horizontal {\n"
"    background: white; /* Color of the part after the handle */\n"
"    border-radius: 4px;\n"
"}\n"
"")
        self.SE_Q2_horizontalSlider.setMaximum(20)
        self.SE_Q2_horizontalSlider.setPageStep(5)
        self.SE_Q2_horizontalSlider.setOrientation(QtCore.Qt.Horizontal)
        self.SE_Q2_horizontalSlider.setObjectName("SE_Q2_horizontalSlider")
        self.SE_Q2_horizontal_question_lyt.addWidget(self.SE_Q2_horizontalSlider)
        self.SE_2_spinBox = QtWidgets.QSpinBox(self.SE_Tab_Page_1)
        self.SE_2_spinBox.setMinimumSize(QtCore.QSize(90, 60))
        self.SE_2_spinBox.setMaximumSize(QtCore.QSize(90, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(20)
        self.SE_2_spinBox.setFont(font)
        self.SE_2_spinBox.setStyleSheet("QSpinBox {\n"
"    background-color: white;\n"
"    color: black;\n"
"    border: 2px solid black;\n"
"    border-radius: 5px;\n"
"\n"
"    padding-left: 20px; /* Adjust left padding to center text */\n"
"  \n"
"    margin: 2px;\n"
"}\n"
"\n"
"QSpinBox::up-button {\n"
"    /* Styling for the up-button */\n"
"    subcontrol-origin: border; /* Position within the border */\n"
"    subcontrol-position: top right; /* Position at the top right */\n"
"    width: 15px; /* Width of the up-button */\n"
"    border-left: 1px solid black; /* Border between the up-button and the spin box */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    /* Styling for the down-button */\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"    border-left: 1px solid black;\n"
"}\n"
"\n"
"QSpinBox::up-arrow {\n"
"    /* Arrow styling within the up-button */\n"
"    width: 7px; /* Width of the arrow */\n"
"    height: 7px; /* Height of the arrow */\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"QSpinBox::down-arrow {\n"
"    /* Arrow styling within the down-button */\n"
"    width: 7px;\n"
"    height: 7px;\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: top right;\n"
"    width: 15px;\n"
"    border-bottom: 1px solid black; /* Add border between the up-button and down-button */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button:pressed {\n"
"    /* Styling for the up-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::down-button:pressed {\n"
"    /* Styling for the down-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::up-button:hover, QSpinBox::down-button:hover {\n"
"    /* Styling for the buttons when hovered */\n"
"    background-color: #e0e0e0;\n"
"}")
        self.SE_2_spinBox.setButtonSymbols(QtWidgets.QAbstractSpinBox.UpDownArrows)
        self.SE_2_spinBox.setMaximum(20)
        self.SE_2_spinBox.setObjectName("SE_2_spinBox")
        self.SE_Q2_horizontal_question_lyt.addWidget(self.SE_2_spinBox)
        self.SE_Tab_Page_verticalLayout.addLayout(self.SE_Q2_horizontal_question_lyt)
        self.SE_Q3_horizontal_question_lyt = QtWidgets.QHBoxLayout()
        self.SE_Q3_horizontal_question_lyt.setObjectName("SE_Q3_horizontal_question_lyt")
        self.SE_Q3_no_Label = QtWidgets.QLabel(self.SE_Tab_Page_1)
        self.SE_Q3_no_Label.setMinimumSize(QtCore.QSize(60, 60))
        self.SE_Q3_no_Label.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.SE_Q3_no_Label.setFont(font)
        self.SE_Q3_no_Label.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.SE_Q3_no_Label.setObjectName("SE_Q3_no_Label")
        self.SE_Q3_horizontal_question_lyt.addWidget(self.SE_Q3_no_Label)
        spacerItem6 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.SE_Q3_horizontal_question_lyt.addItem(spacerItem6)
        self.SE_Q3_question = QtWidgets.QLabel(self.SE_Tab_Page_1)
        self.SE_Q3_question.setMinimumSize(QtCore.QSize(800, 50))
        self.SE_Q3_question.setMaximumSize(QtCore.QSize(800, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.SE_Q3_question.setFont(font)
        self.SE_Q3_question.setObjectName("SE_Q3_question")
        self.SE_Q3_horizontal_question_lyt.addWidget(self.SE_Q3_question)
        self.SE_Q3_horizontalSlider = QtWidgets.QSlider(self.SE_Tab_Page_1)
        self.SE_Q3_horizontalSlider.setMinimumSize(QtCore.QSize(351, 71))
        self.SE_Q3_horizontalSlider.setMaximumSize(QtCore.QSize(351, 71))
        self.SE_Q3_horizontalSlider.setStyleSheet("QSlider::groove:horizontal {\n"
"    border: 1px solid #999999;\n"
"    height: 30px; /* Set the height of the groove */\n"
"    background: white;\n"
"    margin: 2px 0;\n"
"    border-radius: 4px; /* Setting border radius for groove */\n"
"}\n"
"\n"
"QSlider::handle:horizontal {\n"
"    background: rgb(31, 149, 239); /* Handle color */\n"
"    border: none; /* No border for handle */\n"
"    width: 60px; /* Width of the handle */\n"
"    margin: -2px 0; /* Expand outside the groove */\n"
"    border-radius: 5px; /* Rounded corners for handle */\n"
"    position: absolute; /* Necessary for proper handle positioning */\n"
"}\n"
"\n"
"QSlider::handle:horizontal:hover {\n"
"    background: rgb(45, 45, 45); /* Handle color when hovered */\n"
"}\n"
"\n"
"/* Style for when the handle is pressed */\n"
"QSlider::handle:horizontal:pressed {\n"
"    background: rgb(31, 149, 239); /* You might want to change this color */\n"
"}\n"
"\n"
"/* Ticks styling */\n"
"QSlider::sub-page:horizontal {\n"
"    background: rgb(31, 149, 239); /* Color of the part before the handle */\n"
"    border-radius: 4px;\n"
"}\n"
"\n"
"QSlider::add-page:horizontal {\n"
"    background: white; /* Color of the part after the handle */\n"
"    border-radius: 4px;\n"
"}\n"
"")
        self.SE_Q3_horizontalSlider.setMaximum(20)
        self.SE_Q3_horizontalSlider.setPageStep(5)
        self.SE_Q3_horizontalSlider.setOrientation(QtCore.Qt.Horizontal)
        self.SE_Q3_horizontalSlider.setObjectName("SE_Q3_horizontalSlider")
        self.SE_Q3_horizontal_question_lyt.addWidget(self.SE_Q3_horizontalSlider)
        self.SE_3_spinBox = QtWidgets.QSpinBox(self.SE_Tab_Page_1)
        self.SE_3_spinBox.setMinimumSize(QtCore.QSize(90, 60))
        self.SE_3_spinBox.setMaximumSize(QtCore.QSize(90, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(20)
        self.SE_3_spinBox.setFont(font)
        self.SE_3_spinBox.setStyleSheet("QSpinBox {\n"
"    background-color: white;\n"
"    color: black;\n"
"    border: 2px solid black;\n"
"    border-radius: 5px;\n"
"\n"
"    padding-left: 20px; /* Adjust left padding to center text */\n"
"  \n"
"    margin: 2px;\n"
"}\n"
"\n"
"QSpinBox::up-button {\n"
"    /* Styling for the up-button */\n"
"    subcontrol-origin: border; /* Position within the border */\n"
"    subcontrol-position: top right; /* Position at the top right */\n"
"    width: 15px; /* Width of the up-button */\n"
"    border-left: 1px solid black; /* Border between the up-button and the spin box */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    /* Styling for the down-button */\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"    border-left: 1px solid black;\n"
"}\n"
"\n"
"QSpinBox::up-arrow {\n"
"    /* Arrow styling within the up-button */\n"
"    width: 7px; /* Width of the arrow */\n"
"    height: 7px; /* Height of the arrow */\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"QSpinBox::down-arrow {\n"
"    /* Arrow styling within the down-button */\n"
"    width: 7px;\n"
"    height: 7px;\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: top right;\n"
"    width: 15px;\n"
"    border-bottom: 1px solid black; /* Add border between the up-button and down-button */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button:pressed {\n"
"    /* Styling for the up-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::down-button:pressed {\n"
"    /* Styling for the down-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::up-button:hover, QSpinBox::down-button:hover {\n"
"    /* Styling for the buttons when hovered */\n"
"    background-color: #e0e0e0;\n"
"}")
        self.SE_3_spinBox.setButtonSymbols(QtWidgets.QAbstractSpinBox.UpDownArrows)
        self.SE_3_spinBox.setMaximum(20)
        self.SE_3_spinBox.setObjectName("SE_3_spinBox")
        self.SE_Q3_horizontal_question_lyt.addWidget(self.SE_3_spinBox)
        self.SE_Tab_Page_verticalLayout.addLayout(self.SE_Q3_horizontal_question_lyt)
        self.SE_Q4_horizontal_question_ly = QtWidgets.QHBoxLayout()
        self.SE_Q4_horizontal_question_ly.setObjectName("SE_Q4_horizontal_question_ly")
        self.SE_Q4_no_Label = QtWidgets.QLabel(self.SE_Tab_Page_1)
        self.SE_Q4_no_Label.setMinimumSize(QtCore.QSize(60, 60))
        self.SE_Q4_no_Label.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.SE_Q4_no_Label.setFont(font)
        self.SE_Q4_no_Label.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.SE_Q4_no_Label.setObjectName("SE_Q4_no_Label")
        self.SE_Q4_horizontal_question_ly.addWidget(self.SE_Q4_no_Label)
        spacerItem7 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.SE_Q4_horizontal_question_ly.addItem(spacerItem7)
        self.SE_Q4_question = QtWidgets.QLabel(self.SE_Tab_Page_1)
        self.SE_Q4_question.setMinimumSize(QtCore.QSize(800, 50))
        self.SE_Q4_question.setMaximumSize(QtCore.QSize(800, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.SE_Q4_question.setFont(font)
        self.SE_Q4_question.setObjectName("SE_Q4_question")
        self.SE_Q4_horizontal_question_ly.addWidget(self.SE_Q4_question)
        self.SE_Q4_horizontalSlider = QtWidgets.QSlider(self.SE_Tab_Page_1)
        self.SE_Q4_horizontalSlider.setMinimumSize(QtCore.QSize(351, 71))
        self.SE_Q4_horizontalSlider.setMaximumSize(QtCore.QSize(351, 71))
        self.SE_Q4_horizontalSlider.setStyleSheet("QSlider::groove:horizontal {\n"
"    border: 1px solid #999999;\n"
"    height: 30px; /* Set the height of the groove */\n"
"    background: white;\n"
"    margin: 2px 0;\n"
"    border-radius: 4px; /* Setting border radius for groove */\n"
"}\n"
"\n"
"QSlider::handle:horizontal {\n"
"    background: rgb(31, 149, 239); /* Handle color */\n"
"    border: none; /* No border for handle */\n"
"    width: 60px; /* Width of the handle */\n"
"    margin: -2px 0; /* Expand outside the groove */\n"
"    border-radius: 5px; /* Rounded corners for handle */\n"
"    position: absolute; /* Necessary for proper handle positioning */\n"
"}\n"
"\n"
"QSlider::handle:horizontal:hover {\n"
"    background: rgb(45, 45, 45); /* Handle color when hovered */\n"
"}\n"
"\n"
"/* Style for when the handle is pressed */\n"
"QSlider::handle:horizontal:pressed {\n"
"    background: rgb(31, 149, 239); /* You might want to change this color */\n"
"}\n"
"\n"
"/* Ticks styling */\n"
"QSlider::sub-page:horizontal {\n"
"    background: rgb(31, 149, 239); /* Color of the part before the handle */\n"
"    border-radius: 4px;\n"
"}\n"
"\n"
"QSlider::add-page:horizontal {\n"
"    background: white; /* Color of the part after the handle */\n"
"    border-radius: 4px;\n"
"}\n"
"")
        self.SE_Q4_horizontalSlider.setMaximum(20)
        self.SE_Q4_horizontalSlider.setPageStep(5)
        self.SE_Q4_horizontalSlider.setOrientation(QtCore.Qt.Horizontal)
        self.SE_Q4_horizontalSlider.setObjectName("SE_Q4_horizontalSlider")
        self.SE_Q4_horizontal_question_ly.addWidget(self.SE_Q4_horizontalSlider)
        self.SE_4_spinBox = QtWidgets.QSpinBox(self.SE_Tab_Page_1)
        self.SE_4_spinBox.setMinimumSize(QtCore.QSize(90, 60))
        self.SE_4_spinBox.setMaximumSize(QtCore.QSize(90, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(20)
        self.SE_4_spinBox.setFont(font)
        self.SE_4_spinBox.setStyleSheet("QSpinBox {\n"
"    background-color: white;\n"
"    color: black;\n"
"    border: 2px solid black;\n"
"    border-radius: 5px;\n"
"\n"
"    padding-left: 20px; /* Adjust left padding to center text */\n"
"  \n"
"    margin: 2px;\n"
"}\n"
"\n"
"QSpinBox::up-button {\n"
"    /* Styling for the up-button */\n"
"    subcontrol-origin: border; /* Position within the border */\n"
"    subcontrol-position: top right; /* Position at the top right */\n"
"    width: 15px; /* Width of the up-button */\n"
"    border-left: 1px solid black; /* Border between the up-button and the spin box */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    /* Styling for the down-button */\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"    border-left: 1px solid black;\n"
"}\n"
"\n"
"QSpinBox::up-arrow {\n"
"    /* Arrow styling within the up-button */\n"
"    width: 7px; /* Width of the arrow */\n"
"    height: 7px; /* Height of the arrow */\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"QSpinBox::down-arrow {\n"
"    /* Arrow styling within the down-button */\n"
"    width: 7px;\n"
"    height: 7px;\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: top right;\n"
"    width: 15px;\n"
"    border-bottom: 1px solid black; /* Add border between the up-button and down-button */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button:pressed {\n"
"    /* Styling for the up-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::down-button:pressed {\n"
"    /* Styling for the down-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::up-button:hover, QSpinBox::down-button:hover {\n"
"    /* Styling for the buttons when hovered */\n"
"    background-color: #e0e0e0;\n"
"}")
        self.SE_4_spinBox.setButtonSymbols(QtWidgets.QAbstractSpinBox.UpDownArrows)
        self.SE_4_spinBox.setMaximum(20)
        self.SE_4_spinBox.setObjectName("SE_4_spinBox")
        self.SE_Q4_horizontal_question_ly.addWidget(self.SE_4_spinBox)
        self.SE_Tab_Page_verticalLayout.addLayout(self.SE_Q4_horizontal_question_ly)
        self.SE_Q5_horizontal_question_lyt = QtWidgets.QHBoxLayout()
        self.SE_Q5_horizontal_question_lyt.setObjectName("SE_Q5_horizontal_question_lyt")
        self.SE_Q5_no_Label = QtWidgets.QLabel(self.SE_Tab_Page_1)
        self.SE_Q5_no_Label.setMinimumSize(QtCore.QSize(60, 60))
        self.SE_Q5_no_Label.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.SE_Q5_no_Label.setFont(font)
        self.SE_Q5_no_Label.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.SE_Q5_no_Label.setObjectName("SE_Q5_no_Label")
        self.SE_Q5_horizontal_question_lyt.addWidget(self.SE_Q5_no_Label)
        spacerItem8 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.SE_Q5_horizontal_question_lyt.addItem(spacerItem8)
        self.SE_Q5_question = QtWidgets.QLabel(self.SE_Tab_Page_1)
        self.SE_Q5_question.setMinimumSize(QtCore.QSize(800, 50))
        self.SE_Q5_question.setMaximumSize(QtCore.QSize(800, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.SE_Q5_question.setFont(font)
        self.SE_Q5_question.setObjectName("SE_Q5_question")
        self.SE_Q5_horizontal_question_lyt.addWidget(self.SE_Q5_question)
        self.SE_Q5_horizontalSlider = QtWidgets.QSlider(self.SE_Tab_Page_1)
        self.SE_Q5_horizontalSlider.setMinimumSize(QtCore.QSize(351, 71))
        self.SE_Q5_horizontalSlider.setMaximumSize(QtCore.QSize(351, 71))
        self.SE_Q5_horizontalSlider.setStyleSheet("QSlider::groove:horizontal {\n"
"    border: 1px solid #999999;\n"
"    height: 30px; /* Set the height of the groove */\n"
"    background: white;\n"
"    margin: 2px 0;\n"
"    border-radius: 4px; /* Setting border radius for groove */\n"
"}\n"
"\n"
"QSlider::handle:horizontal {\n"
"    background: rgb(31, 149, 239); /* Handle color */\n"
"    border: none; /* No border for handle */\n"
"    width: 60px; /* Width of the handle */\n"
"    margin: -2px 0; /* Expand outside the groove */\n"
"    border-radius: 5px; /* Rounded corners for handle */\n"
"    position: absolute; /* Necessary for proper handle positioning */\n"
"}\n"
"\n"
"QSlider::handle:horizontal:hover {\n"
"    background: rgb(45, 45, 45); /* Handle color when hovered */\n"
"}\n"
"\n"
"/* Style for when the handle is pressed */\n"
"QSlider::handle:horizontal:pressed {\n"
"    background: rgb(31, 149, 239); /* You might want to change this color */\n"
"}\n"
"\n"
"/* Ticks styling */\n"
"QSlider::sub-page:horizontal {\n"
"    background: rgb(31, 149, 239); /* Color of the part before the handle */\n"
"    border-radius: 4px;\n"
"}\n"
"\n"
"QSlider::add-page:horizontal {\n"
"    background: white; /* Color of the part after the handle */\n"
"    border-radius: 4px;\n"
"}\n"
"")
        self.SE_Q5_horizontalSlider.setMaximum(20)
        self.SE_Q5_horizontalSlider.setPageStep(5)
        self.SE_Q5_horizontalSlider.setOrientation(QtCore.Qt.Horizontal)
        self.SE_Q5_horizontalSlider.setObjectName("SE_Q5_horizontalSlider")
        self.SE_Q5_horizontal_question_lyt.addWidget(self.SE_Q5_horizontalSlider)
        self.SE_5_spinBox = QtWidgets.QSpinBox(self.SE_Tab_Page_1)
        self.SE_5_spinBox.setMinimumSize(QtCore.QSize(90, 60))
        self.SE_5_spinBox.setMaximumSize(QtCore.QSize(90, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(20)
        self.SE_5_spinBox.setFont(font)
        self.SE_5_spinBox.setStyleSheet("QSpinBox {\n"
"    background-color: white;\n"
"    color: black;\n"
"    border: 2px solid black;\n"
"    border-radius: 5px;\n"
"\n"
"    padding-left: 20px; /* Adjust left padding to center text */\n"
"  \n"
"    margin: 2px;\n"
"}\n"
"\n"
"QSpinBox::up-button {\n"
"    /* Styling for the up-button */\n"
"    subcontrol-origin: border; /* Position within the border */\n"
"    subcontrol-position: top right; /* Position at the top right */\n"
"    width: 15px; /* Width of the up-button */\n"
"    border-left: 1px solid black; /* Border between the up-button and the spin box */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    /* Styling for the down-button */\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"    border-left: 1px solid black;\n"
"}\n"
"\n"
"QSpinBox::up-arrow {\n"
"    /* Arrow styling within the up-button */\n"
"    width: 7px; /* Width of the arrow */\n"
"    height: 7px; /* Height of the arrow */\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"QSpinBox::down-arrow {\n"
"    /* Arrow styling within the down-button */\n"
"    width: 7px;\n"
"    height: 7px;\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: top right;\n"
"    width: 15px;\n"
"    border-bottom: 1px solid black; /* Add border between the up-button and down-button */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button:pressed {\n"
"    /* Styling for the up-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::down-button:pressed {\n"
"    /* Styling for the down-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::up-button:hover, QSpinBox::down-button:hover {\n"
"    /* Styling for the buttons when hovered */\n"
"    background-color: #e0e0e0;\n"
"}")
        self.SE_5_spinBox.setButtonSymbols(QtWidgets.QAbstractSpinBox.UpDownArrows)
        self.SE_5_spinBox.setMaximum(20)
        self.SE_5_spinBox.setObjectName("SE_5_spinBox")
        self.SE_Q5_horizontal_question_lyt.addWidget(self.SE_5_spinBox)
        self.SE_Tab_Page_verticalLayout.addLayout(self.SE_Q5_horizontal_question_lyt)
        self.SE_Q6_horizontal_question_lyt = QtWidgets.QHBoxLayout()
        self.SE_Q6_horizontal_question_lyt.setObjectName("SE_Q6_horizontal_question_lyt")
        self.SE_Q6_no_Label = QtWidgets.QLabel(self.SE_Tab_Page_1)
        self.SE_Q6_no_Label.setMinimumSize(QtCore.QSize(60, 60))
        self.SE_Q6_no_Label.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.SE_Q6_no_Label.setFont(font)
        self.SE_Q6_no_Label.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.SE_Q6_no_Label.setObjectName("SE_Q6_no_Label")
        self.SE_Q6_horizontal_question_lyt.addWidget(self.SE_Q6_no_Label)
        spacerItem9 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.SE_Q6_horizontal_question_lyt.addItem(spacerItem9)
        self.SE_Q6_question = QtWidgets.QLabel(self.SE_Tab_Page_1)
        self.SE_Q6_question.setMinimumSize(QtCore.QSize(800, 50))
        self.SE_Q6_question.setMaximumSize(QtCore.QSize(800, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.SE_Q6_question.setFont(font)
        self.SE_Q6_question.setObjectName("SE_Q6_question")
        self.SE_Q6_horizontal_question_lyt.addWidget(self.SE_Q6_question)
        self.SE_Q6_horizontalSlider = QtWidgets.QSlider(self.SE_Tab_Page_1)
        self.SE_Q6_horizontalSlider.setMinimumSize(QtCore.QSize(351, 71))
        self.SE_Q6_horizontalSlider.setMaximumSize(QtCore.QSize(351, 71))
        self.SE_Q6_horizontalSlider.setStyleSheet("QSlider::groove:horizontal {\n"
"    border: 1px solid #999999;\n"
"    height: 30px; /* Set the height of the groove */\n"
"    background: white;\n"
"    margin: 2px 0;\n"
"    border-radius: 4px; /* Setting border radius for groove */\n"
"}\n"
"\n"
"QSlider::handle:horizontal {\n"
"    background: rgb(31, 149, 239); /* Handle color */\n"
"    border: none; /* No border for handle */\n"
"    width: 60px; /* Width of the handle */\n"
"    margin: -2px 0; /* Expand outside the groove */\n"
"    border-radius: 5px; /* Rounded corners for handle */\n"
"    position: absolute; /* Necessary for proper handle positioning */\n"
"}\n"
"\n"
"QSlider::handle:horizontal:hover {\n"
"    background: rgb(45, 45, 45); /* Handle color when hovered */\n"
"}\n"
"\n"
"/* Style for when the handle is pressed */\n"
"QSlider::handle:horizontal:pressed {\n"
"    background: rgb(31, 149, 239); /* You might want to change this color */\n"
"}\n"
"\n"
"/* Ticks styling */\n"
"QSlider::sub-page:horizontal {\n"
"    background: rgb(31, 149, 239); /* Color of the part before the handle */\n"
"    border-radius: 4px;\n"
"}\n"
"\n"
"QSlider::add-page:horizontal {\n"
"    background: white; /* Color of the part after the handle */\n"
"    border-radius: 4px;\n"
"}\n"
"")
        self.SE_Q6_horizontalSlider.setMaximum(20)
        self.SE_Q6_horizontalSlider.setPageStep(5)
        self.SE_Q6_horizontalSlider.setOrientation(QtCore.Qt.Horizontal)
        self.SE_Q6_horizontalSlider.setObjectName("SE_Q6_horizontalSlider")
        self.SE_Q6_horizontal_question_lyt.addWidget(self.SE_Q6_horizontalSlider)
        self.SE_6_spinBox = QtWidgets.QSpinBox(self.SE_Tab_Page_1)
        self.SE_6_spinBox.setMinimumSize(QtCore.QSize(90, 60))
        self.SE_6_spinBox.setMaximumSize(QtCore.QSize(90, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(20)
        self.SE_6_spinBox.setFont(font)
        self.SE_6_spinBox.setStyleSheet("QSpinBox {\n"
"    background-color: white;\n"
"    color: black;\n"
"    border: 2px solid black;\n"
"    border-radius: 5px;\n"
"\n"
"    padding-left: 20px; /* Adjust left padding to center text */\n"
"  \n"
"    margin: 2px;\n"
"}\n"
"\n"
"QSpinBox::up-button {\n"
"    /* Styling for the up-button */\n"
"    subcontrol-origin: border; /* Position within the border */\n"
"    subcontrol-position: top right; /* Position at the top right */\n"
"    width: 15px; /* Width of the up-button */\n"
"    border-left: 1px solid black; /* Border between the up-button and the spin box */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    /* Styling for the down-button */\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"    border-left: 1px solid black;\n"
"}\n"
"\n"
"QSpinBox::up-arrow {\n"
"    /* Arrow styling within the up-button */\n"
"    width: 7px; /* Width of the arrow */\n"
"    height: 7px; /* Height of the arrow */\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"QSpinBox::down-arrow {\n"
"    /* Arrow styling within the down-button */\n"
"    width: 7px;\n"
"    height: 7px;\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: top right;\n"
"    width: 15px;\n"
"    border-bottom: 1px solid black; /* Add border between the up-button and down-button */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button:pressed {\n"
"    /* Styling for the up-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::down-button:pressed {\n"
"    /* Styling for the down-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::up-button:hover, QSpinBox::down-button:hover {\n"
"    /* Styling for the buttons when hovered */\n"
"    background-color: #e0e0e0;\n"
"}")
        self.SE_6_spinBox.setButtonSymbols(QtWidgets.QAbstractSpinBox.UpDownArrows)
        self.SE_6_spinBox.setMaximum(20)
        self.SE_6_spinBox.setObjectName("SE_6_spinBox")
        self.SE_Q6_horizontal_question_lyt.addWidget(self.SE_6_spinBox)
        self.SE_Tab_Page_verticalLayout.addLayout(self.SE_Q6_horizontal_question_lyt)
        self.SE_Q7_horizontal_question_lyt = QtWidgets.QHBoxLayout()
        self.SE_Q7_horizontal_question_lyt.setObjectName("SE_Q7_horizontal_question_lyt")
        self.SE_Q7_no_Label = QtWidgets.QLabel(self.SE_Tab_Page_1)
        self.SE_Q7_no_Label.setMinimumSize(QtCore.QSize(60, 60))
        self.SE_Q7_no_Label.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.SE_Q7_no_Label.setFont(font)
        self.SE_Q7_no_Label.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.SE_Q7_no_Label.setObjectName("SE_Q7_no_Label")
        self.SE_Q7_horizontal_question_lyt.addWidget(self.SE_Q7_no_Label)
        spacerItem10 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.SE_Q7_horizontal_question_lyt.addItem(spacerItem10)
        self.SE_Q7_question = QtWidgets.QLabel(self.SE_Tab_Page_1)
        self.SE_Q7_question.setMinimumSize(QtCore.QSize(800, 50))
        self.SE_Q7_question.setMaximumSize(QtCore.QSize(800, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.SE_Q7_question.setFont(font)
        self.SE_Q7_question.setObjectName("SE_Q7_question")
        self.SE_Q7_horizontal_question_lyt.addWidget(self.SE_Q7_question)
        self.SE_Q7_horizontalSlider = QtWidgets.QSlider(self.SE_Tab_Page_1)
        self.SE_Q7_horizontalSlider.setMinimumSize(QtCore.QSize(351, 71))
        self.SE_Q7_horizontalSlider.setMaximumSize(QtCore.QSize(351, 71))
        self.SE_Q7_horizontalSlider.setStyleSheet("QSlider::groove:horizontal {\n"
"    border: 1px solid #999999;\n"
"    height: 30px; /* Set the height of the groove */\n"
"    background: white;\n"
"    margin: 2px 0;\n"
"    border-radius: 4px; /* Setting border radius for groove */\n"
"}\n"
"\n"
"QSlider::handle:horizontal {\n"
"    background: rgb(31, 149, 239); /* Handle color */\n"
"    border: none; /* No border for handle */\n"
"    width: 60px; /* Width of the handle */\n"
"    margin: -2px 0; /* Expand outside the groove */\n"
"    border-radius: 5px; /* Rounded corners for handle */\n"
"    position: absolute; /* Necessary for proper handle positioning */\n"
"}\n"
"\n"
"QSlider::handle:horizontal:hover {\n"
"    background: rgb(45, 45, 45); /* Handle color when hovered */\n"
"}\n"
"\n"
"/* Style for when the handle is pressed */\n"
"QSlider::handle:horizontal:pressed {\n"
"    background: rgb(31, 149, 239); /* You might want to change this color */\n"
"}\n"
"\n"
"/* Ticks styling */\n"
"QSlider::sub-page:horizontal {\n"
"    background: rgb(31, 149, 239); /* Color of the part before the handle */\n"
"    border-radius: 4px;\n"
"}\n"
"\n"
"QSlider::add-page:horizontal {\n"
"    background: white; /* Color of the part after the handle */\n"
"    border-radius: 4px;\n"
"}\n"
"")
        self.SE_Q7_horizontalSlider.setMaximum(20)
        self.SE_Q7_horizontalSlider.setPageStep(5)
        self.SE_Q7_horizontalSlider.setOrientation(QtCore.Qt.Horizontal)
        self.SE_Q7_horizontalSlider.setObjectName("SE_Q7_horizontalSlider")
        self.SE_Q7_horizontal_question_lyt.addWidget(self.SE_Q7_horizontalSlider)
        self.SE_7_spinBox = QtWidgets.QSpinBox(self.SE_Tab_Page_1)
        self.SE_7_spinBox.setMinimumSize(QtCore.QSize(90, 60))
        self.SE_7_spinBox.setMaximumSize(QtCore.QSize(90, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(20)
        self.SE_7_spinBox.setFont(font)
        self.SE_7_spinBox.setStyleSheet("QSpinBox {\n"
"    background-color: white;\n"
"    color: black;\n"
"    border: 2px solid black;\n"
"    border-radius: 5px;\n"
"\n"
"    padding-left: 20px; /* Adjust left padding to center text */\n"
"  \n"
"    margin: 2px;\n"
"}\n"
"\n"
"QSpinBox::up-button {\n"
"    /* Styling for the up-button */\n"
"    subcontrol-origin: border; /* Position within the border */\n"
"    subcontrol-position: top right; /* Position at the top right */\n"
"    width: 15px; /* Width of the up-button */\n"
"    border-left: 1px solid black; /* Border between the up-button and the spin box */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    /* Styling for the down-button */\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"    border-left: 1px solid black;\n"
"}\n"
"\n"
"QSpinBox::up-arrow {\n"
"    /* Arrow styling within the up-button */\n"
"    width: 7px; /* Width of the arrow */\n"
"    height: 7px; /* Height of the arrow */\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"QSpinBox::down-arrow {\n"
"    /* Arrow styling within the down-button */\n"
"    width: 7px;\n"
"    height: 7px;\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: top right;\n"
"    width: 15px;\n"
"    border-bottom: 1px solid black; /* Add border between the up-button and down-button */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button:pressed {\n"
"    /* Styling for the up-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::down-button:pressed {\n"
"    /* Styling for the down-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::up-button:hover, QSpinBox::down-button:hover {\n"
"    /* Styling for the buttons when hovered */\n"
"    background-color: #e0e0e0;\n"
"}")
        self.SE_7_spinBox.setButtonSymbols(QtWidgets.QAbstractSpinBox.UpDownArrows)
        self.SE_7_spinBox.setMaximum(20)
        self.SE_7_spinBox.setObjectName("SE_7_spinBox")
        self.SE_Q7_horizontal_question_lyt.addWidget(self.SE_7_spinBox)
        self.SE_Tab_Page_verticalLayout.addLayout(self.SE_Q7_horizontal_question_lyt)
        self.SE_Q8_horizontal_question_lyt = QtWidgets.QHBoxLayout()
        self.SE_Q8_horizontal_question_lyt.setObjectName("SE_Q8_horizontal_question_lyt")
        self.SE_Q8_no_Label = QtWidgets.QLabel(self.SE_Tab_Page_1)
        self.SE_Q8_no_Label.setMinimumSize(QtCore.QSize(60, 60))
        self.SE_Q8_no_Label.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.SE_Q8_no_Label.setFont(font)
        self.SE_Q8_no_Label.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.SE_Q8_no_Label.setObjectName("SE_Q8_no_Label")
        self.SE_Q8_horizontal_question_lyt.addWidget(self.SE_Q8_no_Label)
        spacerItem11 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.SE_Q8_horizontal_question_lyt.addItem(spacerItem11)
        self.SE_Q8_question = QtWidgets.QLabel(self.SE_Tab_Page_1)
        self.SE_Q8_question.setMinimumSize(QtCore.QSize(800, 50))
        self.SE_Q8_question.setMaximumSize(QtCore.QSize(800, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.SE_Q8_question.setFont(font)
        self.SE_Q8_question.setObjectName("SE_Q8_question")
        self.SE_Q8_horizontal_question_lyt.addWidget(self.SE_Q8_question)
        self.SE_Q8_horizontalSlider = QtWidgets.QSlider(self.SE_Tab_Page_1)
        self.SE_Q8_horizontalSlider.setMinimumSize(QtCore.QSize(351, 71))
        self.SE_Q8_horizontalSlider.setMaximumSize(QtCore.QSize(351, 71))
        self.SE_Q8_horizontalSlider.setStyleSheet("QSlider::groove:horizontal {\n"
"    border: 1px solid #999999;\n"
"    height: 30px; /* Set the height of the groove */\n"
"    background: white;\n"
"    margin: 2px 0;\n"
"    border-radius: 4px; /* Setting border radius for groove */\n"
"}\n"
"\n"
"QSlider::handle:horizontal {\n"
"    background: rgb(31, 149, 239); /* Handle color */\n"
"    border: none; /* No border for handle */\n"
"    width: 60px; /* Width of the handle */\n"
"    margin: -2px 0; /* Expand outside the groove */\n"
"    border-radius: 5px; /* Rounded corners for handle */\n"
"    position: absolute; /* Necessary for proper handle positioning */\n"
"}\n"
"\n"
"QSlider::handle:horizontal:hover {\n"
"    background: rgb(45, 45, 45); /* Handle color when hovered */\n"
"}\n"
"\n"
"/* Style for when the handle is pressed */\n"
"QSlider::handle:horizontal:pressed {\n"
"    background: rgb(31, 149, 239); /* You might want to change this color */\n"
"}\n"
"\n"
"/* Ticks styling */\n"
"QSlider::sub-page:horizontal {\n"
"    background: rgb(31, 149, 239); /* Color of the part before the handle */\n"
"    border-radius: 4px;\n"
"}\n"
"\n"
"QSlider::add-page:horizontal {\n"
"    background: white; /* Color of the part after the handle */\n"
"    border-radius: 4px;\n"
"}\n"
"")
        self.SE_Q8_horizontalSlider.setMaximum(20)
        self.SE_Q8_horizontalSlider.setPageStep(5)
        self.SE_Q8_horizontalSlider.setOrientation(QtCore.Qt.Horizontal)
        self.SE_Q8_horizontalSlider.setObjectName("SE_Q8_horizontalSlider")
        self.SE_Q8_horizontal_question_lyt.addWidget(self.SE_Q8_horizontalSlider)
        self.SE_8_spinBox = QtWidgets.QSpinBox(self.SE_Tab_Page_1)
        self.SE_8_spinBox.setMinimumSize(QtCore.QSize(90, 60))
        self.SE_8_spinBox.setMaximumSize(QtCore.QSize(90, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(20)
        self.SE_8_spinBox.setFont(font)
        self.SE_8_spinBox.setStyleSheet("QSpinBox {\n"
"    background-color: white;\n"
"    color: black;\n"
"    border: 2px solid black;\n"
"    border-radius: 5px;\n"
"\n"
"    padding-left: 20px; /* Adjust left padding to center text */\n"
"  \n"
"    margin: 2px;\n"
"}\n"
"\n"
"QSpinBox::up-button {\n"
"    /* Styling for the up-button */\n"
"    subcontrol-origin: border; /* Position within the border */\n"
"    subcontrol-position: top right; /* Position at the top right */\n"
"    width: 15px; /* Width of the up-button */\n"
"    border-left: 1px solid black; /* Border between the up-button and the spin box */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    /* Styling for the down-button */\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"    border-left: 1px solid black;\n"
"}\n"
"\n"
"QSpinBox::up-arrow {\n"
"    /* Arrow styling within the up-button */\n"
"    width: 7px; /* Width of the arrow */\n"
"    height: 7px; /* Height of the arrow */\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"QSpinBox::down-arrow {\n"
"    /* Arrow styling within the down-button */\n"
"    width: 7px;\n"
"    height: 7px;\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: top right;\n"
"    width: 15px;\n"
"    border-bottom: 1px solid black; /* Add border between the up-button and down-button */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button:pressed {\n"
"    /* Styling for the up-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::down-button:pressed {\n"
"    /* Styling for the down-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::up-button:hover, QSpinBox::down-button:hover {\n"
"    /* Styling for the buttons when hovered */\n"
"    background-color: #e0e0e0;\n"
"}")
        self.SE_8_spinBox.setButtonSymbols(QtWidgets.QAbstractSpinBox.UpDownArrows)
        self.SE_8_spinBox.setMaximum(20)
        self.SE_8_spinBox.setObjectName("SE_8_spinBox")
        self.SE_Q8_horizontal_question_lyt.addWidget(self.SE_8_spinBox)
        self.SE_Tab_Page_verticalLayout.addLayout(self.SE_Q8_horizontal_question_lyt)
        self.SE_Q9_horizontal_question_lyt = QtWidgets.QHBoxLayout()
        self.SE_Q9_horizontal_question_lyt.setObjectName("SE_Q9_horizontal_question_lyt")
        self.SE_Q9_no_Label = QtWidgets.QLabel(self.SE_Tab_Page_1)
        self.SE_Q9_no_Label.setMinimumSize(QtCore.QSize(60, 60))
        self.SE_Q9_no_Label.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.SE_Q9_no_Label.setFont(font)
        self.SE_Q9_no_Label.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.SE_Q9_no_Label.setObjectName("SE_Q9_no_Label")
        self.SE_Q9_horizontal_question_lyt.addWidget(self.SE_Q9_no_Label)
        spacerItem12 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.SE_Q9_horizontal_question_lyt.addItem(spacerItem12)
        self.SE_Q9_question = QtWidgets.QLabel(self.SE_Tab_Page_1)
        self.SE_Q9_question.setMinimumSize(QtCore.QSize(800, 50))
        self.SE_Q9_question.setMaximumSize(QtCore.QSize(800, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.SE_Q9_question.setFont(font)
        self.SE_Q9_question.setObjectName("SE_Q9_question")
        self.SE_Q9_horizontal_question_lyt.addWidget(self.SE_Q9_question)
        self.SE_Q9_horizontalSlider = QtWidgets.QSlider(self.SE_Tab_Page_1)
        self.SE_Q9_horizontalSlider.setMinimumSize(QtCore.QSize(351, 71))
        self.SE_Q9_horizontalSlider.setMaximumSize(QtCore.QSize(351, 71))
        self.SE_Q9_horizontalSlider.setStyleSheet("QSlider::groove:horizontal {\n"
"    border: 1px solid #999999;\n"
"    height: 30px; /* Set the height of the groove */\n"
"    background: white;\n"
"    margin: 2px 0;\n"
"    border-radius: 4px; /* Setting border radius for groove */\n"
"}\n"
"\n"
"QSlider::handle:horizontal {\n"
"    background: rgb(31, 149, 239); /* Handle color */\n"
"    border: none; /* No border for handle */\n"
"    width: 60px; /* Width of the handle */\n"
"    margin: -2px 0; /* Expand outside the groove */\n"
"    border-radius: 5px; /* Rounded corners for handle */\n"
"    position: absolute; /* Necessary for proper handle positioning */\n"
"}\n"
"\n"
"QSlider::handle:horizontal:hover {\n"
"    background: rgb(45, 45, 45); /* Handle color when hovered */\n"
"}\n"
"\n"
"/* Style for when the handle is pressed */\n"
"QSlider::handle:horizontal:pressed {\n"
"    background: rgb(31, 149, 239); /* You might want to change this color */\n"
"}\n"
"\n"
"/* Ticks styling */\n"
"QSlider::sub-page:horizontal {\n"
"    background: rgb(31, 149, 239); /* Color of the part before the handle */\n"
"    border-radius: 4px;\n"
"}\n"
"\n"
"QSlider::add-page:horizontal {\n"
"    background: white; /* Color of the part after the handle */\n"
"    border-radius: 4px;\n"
"}\n"
"")
        self.SE_Q9_horizontalSlider.setMaximum(20)
        self.SE_Q9_horizontalSlider.setPageStep(5)
        self.SE_Q9_horizontalSlider.setOrientation(QtCore.Qt.Horizontal)
        self.SE_Q9_horizontalSlider.setObjectName("SE_Q9_horizontalSlider")
        self.SE_Q9_horizontal_question_lyt.addWidget(self.SE_Q9_horizontalSlider)
        self.SE_9_spinBox = QtWidgets.QSpinBox(self.SE_Tab_Page_1)
        self.SE_9_spinBox.setMinimumSize(QtCore.QSize(90, 60))
        self.SE_9_spinBox.setMaximumSize(QtCore.QSize(90, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(20)
        self.SE_9_spinBox.setFont(font)
        self.SE_9_spinBox.setStyleSheet("QSpinBox {\n"
"    background-color: white;\n"
"    color: black;\n"
"    border: 2px solid black;\n"
"    border-radius: 5px;\n"
"\n"
"    padding-left: 20px; /* Adjust left padding to center text */\n"
"  \n"
"    margin: 2px;\n"
"}\n"
"\n"
"QSpinBox::up-button {\n"
"    /* Styling for the up-button */\n"
"    subcontrol-origin: border; /* Position within the border */\n"
"    subcontrol-position: top right; /* Position at the top right */\n"
"    width: 15px; /* Width of the up-button */\n"
"    border-left: 1px solid black; /* Border between the up-button and the spin box */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    /* Styling for the down-button */\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"    border-left: 1px solid black;\n"
"}\n"
"\n"
"QSpinBox::up-arrow {\n"
"    /* Arrow styling within the up-button */\n"
"    width: 7px; /* Width of the arrow */\n"
"    height: 7px; /* Height of the arrow */\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"QSpinBox::down-arrow {\n"
"    /* Arrow styling within the down-button */\n"
"    width: 7px;\n"
"    height: 7px;\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: top right;\n"
"    width: 15px;\n"
"    border-bottom: 1px solid black; /* Add border between the up-button and down-button */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button:pressed {\n"
"    /* Styling for the up-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::down-button:pressed {\n"
"    /* Styling for the down-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::up-button:hover, QSpinBox::down-button:hover {\n"
"    /* Styling for the buttons when hovered */\n"
"    background-color: #e0e0e0;\n"
"}")
        self.SE_9_spinBox.setButtonSymbols(QtWidgets.QAbstractSpinBox.UpDownArrows)
        self.SE_9_spinBox.setMaximum(20)
        self.SE_9_spinBox.setObjectName("SE_9_spinBox")
        self.SE_Q9_horizontal_question_lyt.addWidget(self.SE_9_spinBox)
        self.SE_Tab_Page_verticalLayout.addLayout(self.SE_Q9_horizontal_question_lyt)
        self.SE_Q10_horizontal_question_lyt = QtWidgets.QHBoxLayout()
        self.SE_Q10_horizontal_question_lyt.setObjectName("SE_Q10_horizontal_question_lyt")
        self.SE_Q10_no_Label = QtWidgets.QLabel(self.SE_Tab_Page_1)
        self.SE_Q10_no_Label.setMinimumSize(QtCore.QSize(60, 60))
        self.SE_Q10_no_Label.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.SE_Q10_no_Label.setFont(font)
        self.SE_Q10_no_Label.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.SE_Q10_no_Label.setObjectName("SE_Q10_no_Label")
        self.SE_Q10_horizontal_question_lyt.addWidget(self.SE_Q10_no_Label)
        spacerItem13 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.SE_Q10_horizontal_question_lyt.addItem(spacerItem13)
        self.SE_Q10_question = QtWidgets.QLabel(self.SE_Tab_Page_1)
        self.SE_Q10_question.setMinimumSize(QtCore.QSize(800, 50))
        self.SE_Q10_question.setMaximumSize(QtCore.QSize(800, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.SE_Q10_question.setFont(font)
        self.SE_Q10_question.setObjectName("SE_Q10_question")
        self.SE_Q10_horizontal_question_lyt.addWidget(self.SE_Q10_question)
        self.SE_Q10_horizontalSlider = QtWidgets.QSlider(self.SE_Tab_Page_1)
        self.SE_Q10_horizontalSlider.setMinimumSize(QtCore.QSize(351, 71))
        self.SE_Q10_horizontalSlider.setMaximumSize(QtCore.QSize(351, 71))
        self.SE_Q10_horizontalSlider.setStyleSheet("QSlider::groove:horizontal {\n"
"    border: 1px solid #999999;\n"
"    height: 30px; /* Set the height of the groove */\n"
"    background: white;\n"
"    margin: 2px 0;\n"
"    border-radius: 4px; /* Setting border radius for groove */\n"
"}\n"
"\n"
"QSlider::handle:horizontal {\n"
"    background: rgb(31, 149, 239); /* Handle color */\n"
"    border: none; /* No border for handle */\n"
"    width: 60px; /* Width of the handle */\n"
"    margin: -2px 0; /* Expand outside the groove */\n"
"    border-radius: 5px; /* Rounded corners for handle */\n"
"    position: absolute; /* Necessary for proper handle positioning */\n"
"}\n"
"\n"
"QSlider::handle:horizontal:hover {\n"
"    background: rgb(45, 45, 45); /* Handle color when hovered */\n"
"}\n"
"\n"
"/* Style for when the handle is pressed */\n"
"QSlider::handle:horizontal:pressed {\n"
"    background: rgb(31, 149, 239); /* You might want to change this color */\n"
"}\n"
"\n"
"/* Ticks styling */\n"
"QSlider::sub-page:horizontal {\n"
"    background: rgb(31, 149, 239); /* Color of the part before the handle */\n"
"    border-radius: 4px;\n"
"}\n"
"\n"
"QSlider::add-page:horizontal {\n"
"    background: white; /* Color of the part after the handle */\n"
"    border-radius: 4px;\n"
"}\n"
"")
        self.SE_Q10_horizontalSlider.setMaximum(20)
        self.SE_Q10_horizontalSlider.setPageStep(5)
        self.SE_Q10_horizontalSlider.setOrientation(QtCore.Qt.Horizontal)
        self.SE_Q10_horizontalSlider.setObjectName("SE_Q10_horizontalSlider")
        self.SE_Q10_horizontal_question_lyt.addWidget(self.SE_Q10_horizontalSlider)
        self.SE_10_spinBox = QtWidgets.QSpinBox(self.SE_Tab_Page_1)
        self.SE_10_spinBox.setMinimumSize(QtCore.QSize(90, 60))
        self.SE_10_spinBox.setMaximumSize(QtCore.QSize(90, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(20)
        self.SE_10_spinBox.setFont(font)
        self.SE_10_spinBox.setStyleSheet("QSpinBox {\n"
"    background-color: white;\n"
"    color: black;\n"
"    border: 2px solid black;\n"
"    border-radius: 5px;\n"
"\n"
"    padding-left: 20px; /* Adjust left padding to center text */\n"
"  \n"
"    margin: 2px;\n"
"}\n"
"\n"
"QSpinBox::up-button {\n"
"    /* Styling for the up-button */\n"
"    subcontrol-origin: border; /* Position within the border */\n"
"    subcontrol-position: top right; /* Position at the top right */\n"
"    width: 15px; /* Width of the up-button */\n"
"    border-left: 1px solid black; /* Border between the up-button and the spin box */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    /* Styling for the down-button */\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"    border-left: 1px solid black;\n"
"}\n"
"\n"
"QSpinBox::up-arrow {\n"
"    /* Arrow styling within the up-button */\n"
"    width: 7px; /* Width of the arrow */\n"
"    height: 7px; /* Height of the arrow */\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"QSpinBox::down-arrow {\n"
"    /* Arrow styling within the down-button */\n"
"    width: 7px;\n"
"    height: 7px;\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: top right;\n"
"    width: 15px;\n"
"    border-bottom: 1px solid black; /* Add border between the up-button and down-button */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button:pressed {\n"
"    /* Styling for the up-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::down-button:pressed {\n"
"    /* Styling for the down-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::up-button:hover, QSpinBox::down-button:hover {\n"
"    /* Styling for the buttons when hovered */\n"
"    background-color: #e0e0e0;\n"
"}")
        self.SE_10_spinBox.setButtonSymbols(QtWidgets.QAbstractSpinBox.UpDownArrows)
        self.SE_10_spinBox.setMaximum(20)
        self.SE_10_spinBox.setObjectName("SE_10_spinBox")
        self.SE_Q10_horizontal_question_lyt.addWidget(self.SE_10_spinBox)
        self.SE_Tab_Page_verticalLayout.addLayout(self.SE_Q10_horizontal_question_lyt)
        self.SelfEsteem_tabWidget.addTab(self.SE_Tab_Page_1, "")
        self.SE_Tab_Page_2 = QtWidgets.QWidget()
        self.SE_Tab_Page_2.setObjectName("SE_Tab_Page_2")
        self.verticalLayout_8 = QtWidgets.QVBoxLayout(self.SE_Tab_Page_2)
        self.verticalLayout_8.setContentsMargins(-1, 11, -1, -1)
        self.verticalLayout_8.setObjectName("verticalLayout_8")
        self.SE_widget = QtWidgets.QWidget(self.SE_Tab_Page_2)
        self.SE_widget.setObjectName("SE_widget")
        self.verticalLayout_13 = QtWidgets.QVBoxLayout(self.SE_widget)
        self.verticalLayout_13.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_13.setObjectName("verticalLayout_13")
        self.SE_Q11_horizontal_question_lyt = QtWidgets.QHBoxLayout()
        self.SE_Q11_horizontal_question_lyt.setObjectName("SE_Q11_horizontal_question_lyt")
        self.SE_Q11_no_Label = QtWidgets.QLabel(self.SE_widget)
        self.SE_Q11_no_Label.setMinimumSize(QtCore.QSize(60, 60))
        self.SE_Q11_no_Label.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.SE_Q11_no_Label.setFont(font)
        self.SE_Q11_no_Label.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.SE_Q11_no_Label.setObjectName("SE_Q11_no_Label")
        self.SE_Q11_horizontal_question_lyt.addWidget(self.SE_Q11_no_Label)
        spacerItem14 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.SE_Q11_horizontal_question_lyt.addItem(spacerItem14)
        self.SE_Q11_question = QtWidgets.QLabel(self.SE_widget)
        self.SE_Q11_question.setMinimumSize(QtCore.QSize(800, 50))
        self.SE_Q11_question.setMaximumSize(QtCore.QSize(800, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.SE_Q11_question.setFont(font)
        self.SE_Q11_question.setObjectName("SE_Q11_question")
        self.SE_Q11_horizontal_question_lyt.addWidget(self.SE_Q11_question)
        self.SE_Q11_horizontalSlider = QtWidgets.QSlider(self.SE_widget)
        self.SE_Q11_horizontalSlider.setMinimumSize(QtCore.QSize(351, 71))
        self.SE_Q11_horizontalSlider.setMaximumSize(QtCore.QSize(351, 71))
        self.SE_Q11_horizontalSlider.setStyleSheet("QSlider::groove:horizontal {\n"
"    border: 1px solid #999999;\n"
"    height: 30px; /* Set the height of the groove */\n"
"    background: white;\n"
"    margin: 2px 0;\n"
"    border-radius: 4px; /* Setting border radius for groove */\n"
"}\n"
"\n"
"QSlider::handle:horizontal {\n"
"    background: rgb(31, 149, 239); /* Handle color */\n"
"    border: none; /* No border for handle */\n"
"    width: 60px; /* Width of the handle */\n"
"    margin: -2px 0; /* Expand outside the groove */\n"
"    border-radius: 5px; /* Rounded corners for handle */\n"
"    position: absolute; /* Necessary for proper handle positioning */\n"
"}\n"
"\n"
"QSlider::handle:horizontal:hover {\n"
"    background: rgb(45, 45, 45); /* Handle color when hovered */\n"
"}\n"
"\n"
"/* Style for when the handle is pressed */\n"
"QSlider::handle:horizontal:pressed {\n"
"    background: rgb(31, 149, 239); /* You might want to change this color */\n"
"}\n"
"\n"
"/* Ticks styling */\n"
"QSlider::sub-page:horizontal {\n"
"    background: rgb(31, 149, 239); /* Color of the part before the handle */\n"
"    border-radius: 4px;\n"
"}\n"
"\n"
"QSlider::add-page:horizontal {\n"
"    background: white; /* Color of the part after the handle */\n"
"    border-radius: 4px;\n"
"}\n"
"")
        self.SE_Q11_horizontalSlider.setMaximum(20)
        self.SE_Q11_horizontalSlider.setPageStep(5)
        self.SE_Q11_horizontalSlider.setOrientation(QtCore.Qt.Horizontal)
        self.SE_Q11_horizontalSlider.setObjectName("SE_Q11_horizontalSlider")
        self.SE_Q11_horizontal_question_lyt.addWidget(self.SE_Q11_horizontalSlider)
        self.SE_11_spinBox = QtWidgets.QSpinBox(self.SE_widget)
        self.SE_11_spinBox.setMinimumSize(QtCore.QSize(90, 60))
        self.SE_11_spinBox.setMaximumSize(QtCore.QSize(90, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(20)
        self.SE_11_spinBox.setFont(font)
        self.SE_11_spinBox.setStyleSheet("QSpinBox {\n"
"    background-color: white;\n"
"    color: black;\n"
"    border: 2px solid black;\n"
"    border-radius: 5px;\n"
"\n"
"    padding-left: 20px; /* Adjust left padding to center text */\n"
"  \n"
"    margin: 2px;\n"
"}\n"
"\n"
"QSpinBox::up-button {\n"
"    /* Styling for the up-button */\n"
"    subcontrol-origin: border; /* Position within the border */\n"
"    subcontrol-position: top right; /* Position at the top right */\n"
"    width: 15px; /* Width of the up-button */\n"
"    border-left: 1px solid black; /* Border between the up-button and the spin box */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    /* Styling for the down-button */\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"    border-left: 1px solid black;\n"
"}\n"
"\n"
"QSpinBox::up-arrow {\n"
"    /* Arrow styling within the up-button */\n"
"    width: 7px; /* Width of the arrow */\n"
"    height: 7px; /* Height of the arrow */\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"QSpinBox::down-arrow {\n"
"    /* Arrow styling within the down-button */\n"
"    width: 7px;\n"
"    height: 7px;\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: top right;\n"
"    width: 15px;\n"
"    border-bottom: 1px solid black; /* Add border between the up-button and down-button */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button:pressed {\n"
"    /* Styling for the up-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::down-button:pressed {\n"
"    /* Styling for the down-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::up-button:hover, QSpinBox::down-button:hover {\n"
"    /* Styling for the buttons when hovered */\n"
"    background-color: #e0e0e0;\n"
"}")
        self.SE_11_spinBox.setButtonSymbols(QtWidgets.QAbstractSpinBox.UpDownArrows)
        self.SE_11_spinBox.setMaximum(20)
        self.SE_11_spinBox.setObjectName("SE_11_spinBox")
        self.SE_Q11_horizontal_question_lyt.addWidget(self.SE_11_spinBox)
        self.verticalLayout_13.addLayout(self.SE_Q11_horizontal_question_lyt)
        self.SE_Q12_horizontal_question_lyt = QtWidgets.QHBoxLayout()
        self.SE_Q12_horizontal_question_lyt.setObjectName("SE_Q12_horizontal_question_lyt")
        self.SE_Q12_no_Label = QtWidgets.QLabel(self.SE_widget)
        self.SE_Q12_no_Label.setMinimumSize(QtCore.QSize(60, 60))
        self.SE_Q12_no_Label.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.SE_Q12_no_Label.setFont(font)
        self.SE_Q12_no_Label.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.SE_Q12_no_Label.setObjectName("SE_Q12_no_Label")
        self.SE_Q12_horizontal_question_lyt.addWidget(self.SE_Q12_no_Label)
        spacerItem15 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.SE_Q12_horizontal_question_lyt.addItem(spacerItem15)
        self.SE_Q12_question = QtWidgets.QLabel(self.SE_widget)
        self.SE_Q12_question.setMinimumSize(QtCore.QSize(800, 50))
        self.SE_Q12_question.setMaximumSize(QtCore.QSize(800, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.SE_Q12_question.setFont(font)
        self.SE_Q12_question.setObjectName("SE_Q12_question")
        self.SE_Q12_horizontal_question_lyt.addWidget(self.SE_Q12_question)
        self.SE_Q12_horizontalSlider = QtWidgets.QSlider(self.SE_widget)
        self.SE_Q12_horizontalSlider.setMinimumSize(QtCore.QSize(351, 71))
        self.SE_Q12_horizontalSlider.setMaximumSize(QtCore.QSize(351, 71))
        self.SE_Q12_horizontalSlider.setStyleSheet("QSlider::groove:horizontal {\n"
"    border: 1px solid #999999;\n"
"    height: 30px; /* Set the height of the groove */\n"
"    background: white;\n"
"    margin: 2px 0;\n"
"    border-radius: 4px; /* Setting border radius for groove */\n"
"}\n"
"\n"
"QSlider::handle:horizontal {\n"
"    background: rgb(31, 149, 239); /* Handle color */\n"
"    border: none; /* No border for handle */\n"
"    width: 60px; /* Width of the handle */\n"
"    margin: -2px 0; /* Expand outside the groove */\n"
"    border-radius: 5px; /* Rounded corners for handle */\n"
"    position: absolute; /* Necessary for proper handle positioning */\n"
"}\n"
"\n"
"QSlider::handle:horizontal:hover {\n"
"    background: rgb(45, 45, 45); /* Handle color when hovered */\n"
"}\n"
"\n"
"/* Style for when the handle is pressed */\n"
"QSlider::handle:horizontal:pressed {\n"
"    background: rgb(31, 149, 239); /* You might want to change this color */\n"
"}\n"
"\n"
"/* Ticks styling */\n"
"QSlider::sub-page:horizontal {\n"
"    background: rgb(31, 149, 239); /* Color of the part before the handle */\n"
"    border-radius: 4px;\n"
"}\n"
"\n"
"QSlider::add-page:horizontal {\n"
"    background: white; /* Color of the part after the handle */\n"
"    border-radius: 4px;\n"
"}\n"
"")
        self.SE_Q12_horizontalSlider.setMaximum(20)
        self.SE_Q12_horizontalSlider.setPageStep(5)
        self.SE_Q12_horizontalSlider.setOrientation(QtCore.Qt.Horizontal)
        self.SE_Q12_horizontalSlider.setObjectName("SE_Q12_horizontalSlider")
        self.SE_Q12_horizontal_question_lyt.addWidget(self.SE_Q12_horizontalSlider)
        self.SE_12_spinBox = QtWidgets.QSpinBox(self.SE_widget)
        self.SE_12_spinBox.setMinimumSize(QtCore.QSize(90, 60))
        self.SE_12_spinBox.setMaximumSize(QtCore.QSize(90, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(20)
        self.SE_12_spinBox.setFont(font)
        self.SE_12_spinBox.setStyleSheet("QSpinBox {\n"
"    background-color: white;\n"
"    color: black;\n"
"    border: 2px solid black;\n"
"    border-radius: 5px;\n"
"\n"
"    padding-left: 20px; /* Adjust left padding to center text */\n"
"  \n"
"    margin: 2px;\n"
"}\n"
"\n"
"QSpinBox::up-button {\n"
"    /* Styling for the up-button */\n"
"    subcontrol-origin: border; /* Position within the border */\n"
"    subcontrol-position: top right; /* Position at the top right */\n"
"    width: 15px; /* Width of the up-button */\n"
"    border-left: 1px solid black; /* Border between the up-button and the spin box */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    /* Styling for the down-button */\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"    border-left: 1px solid black;\n"
"}\n"
"\n"
"QSpinBox::up-arrow {\n"
"    /* Arrow styling within the up-button */\n"
"    width: 7px; /* Width of the arrow */\n"
"    height: 7px; /* Height of the arrow */\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"QSpinBox::down-arrow {\n"
"    /* Arrow styling within the down-button */\n"
"    width: 7px;\n"
"    height: 7px;\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: top right;\n"
"    width: 15px;\n"
"    border-bottom: 1px solid black; /* Add border between the up-button and down-button */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button:pressed {\n"
"    /* Styling for the up-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::down-button:pressed {\n"
"    /* Styling for the down-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::up-button:hover, QSpinBox::down-button:hover {\n"
"    /* Styling for the buttons when hovered */\n"
"    background-color: #e0e0e0;\n"
"}")
        self.SE_12_spinBox.setButtonSymbols(QtWidgets.QAbstractSpinBox.UpDownArrows)
        self.SE_12_spinBox.setMaximum(20)
        self.SE_12_spinBox.setObjectName("SE_12_spinBox")
        self.SE_Q12_horizontal_question_lyt.addWidget(self.SE_12_spinBox)
        self.verticalLayout_13.addLayout(self.SE_Q12_horizontal_question_lyt)
        self.SE_Q13_horizontal_question_lyt = QtWidgets.QHBoxLayout()
        self.SE_Q13_horizontal_question_lyt.setObjectName("SE_Q13_horizontal_question_lyt")
        self.SE_Q13_no_Label = QtWidgets.QLabel(self.SE_widget)
        self.SE_Q13_no_Label.setMinimumSize(QtCore.QSize(60, 60))
        self.SE_Q13_no_Label.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.SE_Q13_no_Label.setFont(font)
        self.SE_Q13_no_Label.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.SE_Q13_no_Label.setObjectName("SE_Q13_no_Label")
        self.SE_Q13_horizontal_question_lyt.addWidget(self.SE_Q13_no_Label)
        spacerItem16 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.SE_Q13_horizontal_question_lyt.addItem(spacerItem16)
        self.SE_Q13_question = QtWidgets.QLabel(self.SE_widget)
        self.SE_Q13_question.setMinimumSize(QtCore.QSize(800, 50))
        self.SE_Q13_question.setMaximumSize(QtCore.QSize(800, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.SE_Q13_question.setFont(font)
        self.SE_Q13_question.setObjectName("SE_Q13_question")
        self.SE_Q13_horizontal_question_lyt.addWidget(self.SE_Q13_question)
        self.SE_Q13_horizontalSlider = QtWidgets.QSlider(self.SE_widget)
        self.SE_Q13_horizontalSlider.setMinimumSize(QtCore.QSize(351, 71))
        self.SE_Q13_horizontalSlider.setMaximumSize(QtCore.QSize(351, 71))
        self.SE_Q13_horizontalSlider.setStyleSheet("QSlider::groove:horizontal {\n"
"    border: 1px solid #999999;\n"
"    height: 30px; /* Set the height of the groove */\n"
"    background: white;\n"
"    margin: 2px 0;\n"
"    border-radius: 4px; /* Setting border radius for groove */\n"
"}\n"
"\n"
"QSlider::handle:horizontal {\n"
"    background: rgb(31, 149, 239); /* Handle color */\n"
"    border: none; /* No border for handle */\n"
"    width: 60px; /* Width of the handle */\n"
"    margin: -2px 0; /* Expand outside the groove */\n"
"    border-radius: 5px; /* Rounded corners for handle */\n"
"    position: absolute; /* Necessary for proper handle positioning */\n"
"}\n"
"\n"
"QSlider::handle:horizontal:hover {\n"
"    background: rgb(45, 45, 45); /* Handle color when hovered */\n"
"}\n"
"\n"
"/* Style for when the handle is pressed */\n"
"QSlider::handle:horizontal:pressed {\n"
"    background: rgb(31, 149, 239); /* You might want to change this color */\n"
"}\n"
"\n"
"/* Ticks styling */\n"
"QSlider::sub-page:horizontal {\n"
"    background: rgb(31, 149, 239); /* Color of the part before the handle */\n"
"    border-radius: 4px;\n"
"}\n"
"\n"
"QSlider::add-page:horizontal {\n"
"    background: white; /* Color of the part after the handle */\n"
"    border-radius: 4px;\n"
"}\n"
"")
        self.SE_Q13_horizontalSlider.setMaximum(20)
        self.SE_Q13_horizontalSlider.setPageStep(5)
        self.SE_Q13_horizontalSlider.setOrientation(QtCore.Qt.Horizontal)
        self.SE_Q13_horizontalSlider.setObjectName("SE_Q13_horizontalSlider")
        self.SE_Q13_horizontal_question_lyt.addWidget(self.SE_Q13_horizontalSlider)
        self.SE_13_spinBox = QtWidgets.QSpinBox(self.SE_widget)
        self.SE_13_spinBox.setMinimumSize(QtCore.QSize(90, 60))
        self.SE_13_spinBox.setMaximumSize(QtCore.QSize(90, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(20)
        self.SE_13_spinBox.setFont(font)
        self.SE_13_spinBox.setStyleSheet("QSpinBox {\n"
"    background-color: white;\n"
"    color: black;\n"
"    border: 2px solid black;\n"
"    border-radius: 5px;\n"
"\n"
"    padding-left: 20px; /* Adjust left padding to center text */\n"
"  \n"
"    margin: 2px;\n"
"}\n"
"\n"
"QSpinBox::up-button {\n"
"    /* Styling for the up-button */\n"
"    subcontrol-origin: border; /* Position within the border */\n"
"    subcontrol-position: top right; /* Position at the top right */\n"
"    width: 15px; /* Width of the up-button */\n"
"    border-left: 1px solid black; /* Border between the up-button and the spin box */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    /* Styling for the down-button */\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"    border-left: 1px solid black;\n"
"}\n"
"\n"
"QSpinBox::up-arrow {\n"
"    /* Arrow styling within the up-button */\n"
"    width: 7px; /* Width of the arrow */\n"
"    height: 7px; /* Height of the arrow */\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"QSpinBox::down-arrow {\n"
"    /* Arrow styling within the down-button */\n"
"    width: 7px;\n"
"    height: 7px;\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: top right;\n"
"    width: 15px;\n"
"    border-bottom: 1px solid black; /* Add border between the up-button and down-button */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button:pressed {\n"
"    /* Styling for the up-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::down-button:pressed {\n"
"    /* Styling for the down-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::up-button:hover, QSpinBox::down-button:hover {\n"
"    /* Styling for the buttons when hovered */\n"
"    background-color: #e0e0e0;\n"
"}")
        self.SE_13_spinBox.setButtonSymbols(QtWidgets.QAbstractSpinBox.UpDownArrows)
        self.SE_13_spinBox.setMaximum(20)
        self.SE_13_spinBox.setObjectName("SE_13_spinBox")
        self.SE_Q13_horizontal_question_lyt.addWidget(self.SE_13_spinBox)
        self.verticalLayout_13.addLayout(self.SE_Q13_horizontal_question_lyt)
        self.SE_Q14_horizontal_question_lyt = QtWidgets.QHBoxLayout()
        self.SE_Q14_horizontal_question_lyt.setObjectName("SE_Q14_horizontal_question_lyt")
        self.SE_Q14_no_Label = QtWidgets.QLabel(self.SE_widget)
        self.SE_Q14_no_Label.setMinimumSize(QtCore.QSize(60, 60))
        self.SE_Q14_no_Label.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.SE_Q14_no_Label.setFont(font)
        self.SE_Q14_no_Label.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.SE_Q14_no_Label.setObjectName("SE_Q14_no_Label")
        self.SE_Q14_horizontal_question_lyt.addWidget(self.SE_Q14_no_Label)
        spacerItem17 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.SE_Q14_horizontal_question_lyt.addItem(spacerItem17)
        self.SE_Q14_question = QtWidgets.QLabel(self.SE_widget)
        self.SE_Q14_question.setMinimumSize(QtCore.QSize(800, 50))
        self.SE_Q14_question.setMaximumSize(QtCore.QSize(800, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.SE_Q14_question.setFont(font)
        self.SE_Q14_question.setObjectName("SE_Q14_question")
        self.SE_Q14_horizontal_question_lyt.addWidget(self.SE_Q14_question)
        self.SE_Q14_horizontalSlider = QtWidgets.QSlider(self.SE_widget)
        self.SE_Q14_horizontalSlider.setMinimumSize(QtCore.QSize(351, 71))
        self.SE_Q14_horizontalSlider.setMaximumSize(QtCore.QSize(351, 71))
        self.SE_Q14_horizontalSlider.setStyleSheet("QSlider::groove:horizontal {\n"
"    border: 1px solid #999999;\n"
"    height: 30px; /* Set the height of the groove */\n"
"    background: white;\n"
"    margin: 2px 0;\n"
"    border-radius: 4px; /* Setting border radius for groove */\n"
"}\n"
"\n"
"QSlider::handle:horizontal {\n"
"    background: rgb(31, 149, 239); /* Handle color */\n"
"    border: none; /* No border for handle */\n"
"    width: 60px; /* Width of the handle */\n"
"    margin: -2px 0; /* Expand outside the groove */\n"
"    border-radius: 5px; /* Rounded corners for handle */\n"
"    position: absolute; /* Necessary for proper handle positioning */\n"
"}\n"
"\n"
"QSlider::handle:horizontal:hover {\n"
"    background: rgb(45, 45, 45); /* Handle color when hovered */\n"
"}\n"
"\n"
"/* Style for when the handle is pressed */\n"
"QSlider::handle:horizontal:pressed {\n"
"    background: rgb(31, 149, 239); /* You might want to change this color */\n"
"}\n"
"\n"
"/* Ticks styling */\n"
"QSlider::sub-page:horizontal {\n"
"    background: rgb(31, 149, 239); /* Color of the part before the handle */\n"
"    border-radius: 4px;\n"
"}\n"
"\n"
"QSlider::add-page:horizontal {\n"
"    background: white; /* Color of the part after the handle */\n"
"    border-radius: 4px;\n"
"}\n"
"")
        self.SE_Q14_horizontalSlider.setMaximum(20)
        self.SE_Q14_horizontalSlider.setPageStep(5)
        self.SE_Q14_horizontalSlider.setOrientation(QtCore.Qt.Horizontal)
        self.SE_Q14_horizontalSlider.setObjectName("SE_Q14_horizontalSlider")
        self.SE_Q14_horizontal_question_lyt.addWidget(self.SE_Q14_horizontalSlider)
        self.SE_14_spinBox = QtWidgets.QSpinBox(self.SE_widget)
        self.SE_14_spinBox.setMinimumSize(QtCore.QSize(90, 60))
        self.SE_14_spinBox.setMaximumSize(QtCore.QSize(90, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(20)
        self.SE_14_spinBox.setFont(font)
        self.SE_14_spinBox.setStyleSheet("QSpinBox {\n"
"    background-color: white;\n"
"    color: black;\n"
"    border: 2px solid black;\n"
"    border-radius: 5px;\n"
"\n"
"    padding-left: 20px; /* Adjust left padding to center text */\n"
"  \n"
"    margin: 2px;\n"
"}\n"
"\n"
"QSpinBox::up-button {\n"
"    /* Styling for the up-button */\n"
"    subcontrol-origin: border; /* Position within the border */\n"
"    subcontrol-position: top right; /* Position at the top right */\n"
"    width: 15px; /* Width of the up-button */\n"
"    border-left: 1px solid black; /* Border between the up-button and the spin box */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    /* Styling for the down-button */\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"    border-left: 1px solid black;\n"
"}\n"
"\n"
"QSpinBox::up-arrow {\n"
"    /* Arrow styling within the up-button */\n"
"    width: 7px; /* Width of the arrow */\n"
"    height: 7px; /* Height of the arrow */\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"QSpinBox::down-arrow {\n"
"    /* Arrow styling within the down-button */\n"
"    width: 7px;\n"
"    height: 7px;\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: top right;\n"
"    width: 15px;\n"
"    border-bottom: 1px solid black; /* Add border between the up-button and down-button */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button:pressed {\n"
"    /* Styling for the up-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::down-button:pressed {\n"
"    /* Styling for the down-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::up-button:hover, QSpinBox::down-button:hover {\n"
"    /* Styling for the buttons when hovered */\n"
"    background-color: #e0e0e0;\n"
"}")
        self.SE_14_spinBox.setButtonSymbols(QtWidgets.QAbstractSpinBox.UpDownArrows)
        self.SE_14_spinBox.setMaximum(20)
        self.SE_14_spinBox.setObjectName("SE_14_spinBox")
        self.SE_Q14_horizontal_question_lyt.addWidget(self.SE_14_spinBox)
        self.verticalLayout_13.addLayout(self.SE_Q14_horizontal_question_lyt)
        self.SE_Q15_horizontal_question_lyt = QtWidgets.QHBoxLayout()
        self.SE_Q15_horizontal_question_lyt.setObjectName("SE_Q15_horizontal_question_lyt")
        self.SE_Q15_question = QtWidgets.QLabel(self.SE_widget)
        self.SE_Q15_question.setMinimumSize(QtCore.QSize(60, 60))
        self.SE_Q15_question.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.SE_Q15_question.setFont(font)
        self.SE_Q15_question.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.SE_Q15_question.setObjectName("SE_Q15_question")
        self.SE_Q15_horizontal_question_lyt.addWidget(self.SE_Q15_question)
        spacerItem18 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.SE_Q15_horizontal_question_lyt.addItem(spacerItem18)
        self.SE_Q15_no_Label = QtWidgets.QLabel(self.SE_widget)
        self.SE_Q15_no_Label.setMinimumSize(QtCore.QSize(800, 50))
        self.SE_Q15_no_Label.setMaximumSize(QtCore.QSize(800, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.SE_Q15_no_Label.setFont(font)
        self.SE_Q15_no_Label.setObjectName("SE_Q15_no_Label")
        self.SE_Q15_horizontal_question_lyt.addWidget(self.SE_Q15_no_Label)
        self.SE_Q15_horizontalSlider = QtWidgets.QSlider(self.SE_widget)
        self.SE_Q15_horizontalSlider.setMinimumSize(QtCore.QSize(351, 71))
        self.SE_Q15_horizontalSlider.setMaximumSize(QtCore.QSize(351, 71))
        self.SE_Q15_horizontalSlider.setStyleSheet("QSlider::groove:horizontal {\n"
"    border: 1px solid #999999;\n"
"    height: 30px; /* Set the height of the groove */\n"
"    background: white;\n"
"    margin: 2px 0;\n"
"    border-radius: 4px; /* Setting border radius for groove */\n"
"}\n"
"\n"
"QSlider::handle:horizontal {\n"
"    background: rgb(31, 149, 239); /* Handle color */\n"
"    border: none; /* No border for handle */\n"
"    width: 60px; /* Width of the handle */\n"
"    margin: -2px 0; /* Expand outside the groove */\n"
"    border-radius: 5px; /* Rounded corners for handle */\n"
"    position: absolute; /* Necessary for proper handle positioning */\n"
"}\n"
"\n"
"QSlider::handle:horizontal:hover {\n"
"    background: rgb(45, 45, 45); /* Handle color when hovered */\n"
"}\n"
"\n"
"/* Style for when the handle is pressed */\n"
"QSlider::handle:horizontal:pressed {\n"
"    background: rgb(31, 149, 239); /* You might want to change this color */\n"
"}\n"
"\n"
"/* Ticks styling */\n"
"QSlider::sub-page:horizontal {\n"
"    background: rgb(31, 149, 239); /* Color of the part before the handle */\n"
"    border-radius: 4px;\n"
"}\n"
"\n"
"QSlider::add-page:horizontal {\n"
"    background: white; /* Color of the part after the handle */\n"
"    border-radius: 4px;\n"
"}\n"
"")
        self.SE_Q15_horizontalSlider.setMaximum(20)
        self.SE_Q15_horizontalSlider.setPageStep(5)
        self.SE_Q15_horizontalSlider.setOrientation(QtCore.Qt.Horizontal)
        self.SE_Q15_horizontalSlider.setObjectName("SE_Q15_horizontalSlider")
        self.SE_Q15_horizontal_question_lyt.addWidget(self.SE_Q15_horizontalSlider)
        self.SE_15_spinBox = QtWidgets.QSpinBox(self.SE_widget)
        self.SE_15_spinBox.setMinimumSize(QtCore.QSize(90, 60))
        self.SE_15_spinBox.setMaximumSize(QtCore.QSize(90, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(20)
        self.SE_15_spinBox.setFont(font)
        self.SE_15_spinBox.setStyleSheet("QSpinBox {\n"
"    background-color: white;\n"
"    color: black;\n"
"    border: 2px solid black;\n"
"    border-radius: 5px;\n"
"\n"
"    padding-left: 20px; /* Adjust left padding to center text */\n"
"  \n"
"    margin: 2px;\n"
"}\n"
"\n"
"QSpinBox::up-button {\n"
"    /* Styling for the up-button */\n"
"    subcontrol-origin: border; /* Position within the border */\n"
"    subcontrol-position: top right; /* Position at the top right */\n"
"    width: 15px; /* Width of the up-button */\n"
"    border-left: 1px solid black; /* Border between the up-button and the spin box */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    /* Styling for the down-button */\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"    border-left: 1px solid black;\n"
"}\n"
"\n"
"QSpinBox::up-arrow {\n"
"    /* Arrow styling within the up-button */\n"
"    width: 7px; /* Width of the arrow */\n"
"    height: 7px; /* Height of the arrow */\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"QSpinBox::down-arrow {\n"
"    /* Arrow styling within the down-button */\n"
"    width: 7px;\n"
"    height: 7px;\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: top right;\n"
"    width: 15px;\n"
"    border-bottom: 1px solid black; /* Add border between the up-button and down-button */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button:pressed {\n"
"    /* Styling for the up-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::down-button:pressed {\n"
"    /* Styling for the down-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::up-button:hover, QSpinBox::down-button:hover {\n"
"    /* Styling for the buttons when hovered */\n"
"    background-color: #e0e0e0;\n"
"}")
        self.SE_15_spinBox.setButtonSymbols(QtWidgets.QAbstractSpinBox.UpDownArrows)
        self.SE_15_spinBox.setMaximum(20)
        self.SE_15_spinBox.setObjectName("SE_15_spinBox")
        self.SE_Q15_horizontal_question_lyt.addWidget(self.SE_15_spinBox)
        self.verticalLayout_13.addLayout(self.SE_Q15_horizontal_question_lyt)
        self.SE_Q16_horizontal_question_lyt = QtWidgets.QHBoxLayout()
        self.SE_Q16_horizontal_question_lyt.setObjectName("SE_Q16_horizontal_question_lyt")
        self.SE_Q16_no_Label = QtWidgets.QLabel(self.SE_widget)
        self.SE_Q16_no_Label.setMinimumSize(QtCore.QSize(60, 60))
        self.SE_Q16_no_Label.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.SE_Q16_no_Label.setFont(font)
        self.SE_Q16_no_Label.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.SE_Q16_no_Label.setObjectName("SE_Q16_no_Label")
        self.SE_Q16_horizontal_question_lyt.addWidget(self.SE_Q16_no_Label)
        spacerItem19 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.SE_Q16_horizontal_question_lyt.addItem(spacerItem19)
        self.SE_Q16_question = QtWidgets.QLabel(self.SE_widget)
        self.SE_Q16_question.setMinimumSize(QtCore.QSize(800, 50))
        self.SE_Q16_question.setMaximumSize(QtCore.QSize(800, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.SE_Q16_question.setFont(font)
        self.SE_Q16_question.setObjectName("SE_Q16_question")
        self.SE_Q16_horizontal_question_lyt.addWidget(self.SE_Q16_question)
        self.SE_Q16_horizontalSlider = QtWidgets.QSlider(self.SE_widget)
        self.SE_Q16_horizontalSlider.setMinimumSize(QtCore.QSize(351, 71))
        self.SE_Q16_horizontalSlider.setMaximumSize(QtCore.QSize(351, 71))
        self.SE_Q16_horizontalSlider.setStyleSheet("QSlider::groove:horizontal {\n"
"    border: 1px solid #999999;\n"
"    height: 30px; /* Set the height of the groove */\n"
"    background: white;\n"
"    margin: 2px 0;\n"
"    border-radius: 4px; /* Setting border radius for groove */\n"
"}\n"
"\n"
"QSlider::handle:horizontal {\n"
"    background: rgb(31, 149, 239); /* Handle color */\n"
"    border: none; /* No border for handle */\n"
"    width: 60px; /* Width of the handle */\n"
"    margin: -2px 0; /* Expand outside the groove */\n"
"    border-radius: 5px; /* Rounded corners for handle */\n"
"    position: absolute; /* Necessary for proper handle positioning */\n"
"}\n"
"\n"
"QSlider::handle:horizontal:hover {\n"
"    background: rgb(45, 45, 45); /* Handle color when hovered */\n"
"}\n"
"\n"
"/* Style for when the handle is pressed */\n"
"QSlider::handle:horizontal:pressed {\n"
"    background: rgb(31, 149, 239); /* You might want to change this color */\n"
"}\n"
"\n"
"/* Ticks styling */\n"
"QSlider::sub-page:horizontal {\n"
"    background: rgb(31, 149, 239); /* Color of the part before the handle */\n"
"    border-radius: 4px;\n"
"}\n"
"\n"
"QSlider::add-page:horizontal {\n"
"    background: white; /* Color of the part after the handle */\n"
"    border-radius: 4px;\n"
"}\n"
"")
        self.SE_Q16_horizontalSlider.setMaximum(20)
        self.SE_Q16_horizontalSlider.setPageStep(5)
        self.SE_Q16_horizontalSlider.setOrientation(QtCore.Qt.Horizontal)
        self.SE_Q16_horizontalSlider.setObjectName("SE_Q16_horizontalSlider")
        self.SE_Q16_horizontal_question_lyt.addWidget(self.SE_Q16_horizontalSlider)
        self.SE_16_spinBox = QtWidgets.QSpinBox(self.SE_widget)
        self.SE_16_spinBox.setMinimumSize(QtCore.QSize(90, 60))
        self.SE_16_spinBox.setMaximumSize(QtCore.QSize(90, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(20)
        self.SE_16_spinBox.setFont(font)
        self.SE_16_spinBox.setStyleSheet("QSpinBox {\n"
"    background-color: white;\n"
"    color: black;\n"
"    border: 2px solid black;\n"
"    border-radius: 5px;\n"
"\n"
"    padding-left: 20px; /* Adjust left padding to center text */\n"
"  \n"
"    margin: 2px;\n"
"}\n"
"\n"
"QSpinBox::up-button {\n"
"    /* Styling for the up-button */\n"
"    subcontrol-origin: border; /* Position within the border */\n"
"    subcontrol-position: top right; /* Position at the top right */\n"
"    width: 15px; /* Width of the up-button */\n"
"    border-left: 1px solid black; /* Border between the up-button and the spin box */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    /* Styling for the down-button */\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"    border-left: 1px solid black;\n"
"}\n"
"\n"
"QSpinBox::up-arrow {\n"
"    /* Arrow styling within the up-button */\n"
"    width: 7px; /* Width of the arrow */\n"
"    height: 7px; /* Height of the arrow */\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"QSpinBox::down-arrow {\n"
"    /* Arrow styling within the down-button */\n"
"    width: 7px;\n"
"    height: 7px;\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: top right;\n"
"    width: 15px;\n"
"    border-bottom: 1px solid black; /* Add border between the up-button and down-button */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button:pressed {\n"
"    /* Styling for the up-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::down-button:pressed {\n"
"    /* Styling for the down-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::up-button:hover, QSpinBox::down-button:hover {\n"
"    /* Styling for the buttons when hovered */\n"
"    background-color: #e0e0e0;\n"
"}")
        self.SE_16_spinBox.setButtonSymbols(QtWidgets.QAbstractSpinBox.UpDownArrows)
        self.SE_16_spinBox.setMaximum(20)
        self.SE_16_spinBox.setObjectName("SE_16_spinBox")
        self.SE_Q16_horizontal_question_lyt.addWidget(self.SE_16_spinBox)
        self.verticalLayout_13.addLayout(self.SE_Q16_horizontal_question_lyt)
        self.SE_Q17_horizontal_question_lyt = QtWidgets.QHBoxLayout()
        self.SE_Q17_horizontal_question_lyt.setObjectName("SE_Q17_horizontal_question_lyt")
        self.SE_Q17_no_Label = QtWidgets.QLabel(self.SE_widget)
        self.SE_Q17_no_Label.setMinimumSize(QtCore.QSize(60, 60))
        self.SE_Q17_no_Label.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.SE_Q17_no_Label.setFont(font)
        self.SE_Q17_no_Label.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.SE_Q17_no_Label.setObjectName("SE_Q17_no_Label")
        self.SE_Q17_horizontal_question_lyt.addWidget(self.SE_Q17_no_Label)
        spacerItem20 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.SE_Q17_horizontal_question_lyt.addItem(spacerItem20)
        self.SE_Q17_question = QtWidgets.QLabel(self.SE_widget)
        self.SE_Q17_question.setMinimumSize(QtCore.QSize(800, 50))
        self.SE_Q17_question.setMaximumSize(QtCore.QSize(800, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.SE_Q17_question.setFont(font)
        self.SE_Q17_question.setObjectName("SE_Q17_question")
        self.SE_Q17_horizontal_question_lyt.addWidget(self.SE_Q17_question)
        self.SE_Q17_horizontalSlider = QtWidgets.QSlider(self.SE_widget)
        self.SE_Q17_horizontalSlider.setMinimumSize(QtCore.QSize(351, 71))
        self.SE_Q17_horizontalSlider.setMaximumSize(QtCore.QSize(351, 71))
        self.SE_Q17_horizontalSlider.setStyleSheet("QSlider::groove:horizontal {\n"
"    border: 1px solid #999999;\n"
"    height: 30px; /* Set the height of the groove */\n"
"    background: white;\n"
"    margin: 2px 0;\n"
"    border-radius: 4px; /* Setting border radius for groove */\n"
"}\n"
"\n"
"QSlider::handle:horizontal {\n"
"    background: rgb(31, 149, 239); /* Handle color */\n"
"    border: none; /* No border for handle */\n"
"    width: 60px; /* Width of the handle */\n"
"    margin: -2px 0; /* Expand outside the groove */\n"
"    border-radius: 5px; /* Rounded corners for handle */\n"
"    position: absolute; /* Necessary for proper handle positioning */\n"
"}\n"
"\n"
"QSlider::handle:horizontal:hover {\n"
"    background: rgb(45, 45, 45); /* Handle color when hovered */\n"
"}\n"
"\n"
"/* Style for when the handle is pressed */\n"
"QSlider::handle:horizontal:pressed {\n"
"    background: rgb(31, 149, 239); /* You might want to change this color */\n"
"}\n"
"\n"
"/* Ticks styling */\n"
"QSlider::sub-page:horizontal {\n"
"    background: rgb(31, 149, 239); /* Color of the part before the handle */\n"
"    border-radius: 4px;\n"
"}\n"
"\n"
"QSlider::add-page:horizontal {\n"
"    background: white; /* Color of the part after the handle */\n"
"    border-radius: 4px;\n"
"}\n"
"")
        self.SE_Q17_horizontalSlider.setMaximum(20)
        self.SE_Q17_horizontalSlider.setPageStep(5)
        self.SE_Q17_horizontalSlider.setOrientation(QtCore.Qt.Horizontal)
        self.SE_Q17_horizontalSlider.setObjectName("SE_Q17_horizontalSlider")
        self.SE_Q17_horizontal_question_lyt.addWidget(self.SE_Q17_horizontalSlider)
        self.SE_17_spinBox = QtWidgets.QSpinBox(self.SE_widget)
        self.SE_17_spinBox.setMinimumSize(QtCore.QSize(90, 60))
        self.SE_17_spinBox.setMaximumSize(QtCore.QSize(90, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(20)
        self.SE_17_spinBox.setFont(font)
        self.SE_17_spinBox.setStyleSheet("QSpinBox {\n"
"    background-color: white;\n"
"    color: black;\n"
"    border: 2px solid black;\n"
"    border-radius: 5px;\n"
"\n"
"    padding-left: 20px; /* Adjust left padding to center text */\n"
"  \n"
"    margin: 2px;\n"
"}\n"
"\n"
"QSpinBox::up-button {\n"
"    /* Styling for the up-button */\n"
"    subcontrol-origin: border; /* Position within the border */\n"
"    subcontrol-position: top right; /* Position at the top right */\n"
"    width: 15px; /* Width of the up-button */\n"
"    border-left: 1px solid black; /* Border between the up-button and the spin box */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    /* Styling for the down-button */\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"    border-left: 1px solid black;\n"
"}\n"
"\n"
"QSpinBox::up-arrow {\n"
"    /* Arrow styling within the up-button */\n"
"    width: 7px; /* Width of the arrow */\n"
"    height: 7px; /* Height of the arrow */\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"QSpinBox::down-arrow {\n"
"    /* Arrow styling within the down-button */\n"
"    width: 7px;\n"
"    height: 7px;\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: top right;\n"
"    width: 15px;\n"
"    border-bottom: 1px solid black; /* Add border between the up-button and down-button */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button:pressed {\n"
"    /* Styling for the up-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::down-button:pressed {\n"
"    /* Styling for the down-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::up-button:hover, QSpinBox::down-button:hover {\n"
"    /* Styling for the buttons when hovered */\n"
"    background-color: #e0e0e0;\n"
"}")
        self.SE_17_spinBox.setButtonSymbols(QtWidgets.QAbstractSpinBox.UpDownArrows)
        self.SE_17_spinBox.setMaximum(20)
        self.SE_17_spinBox.setObjectName("SE_17_spinBox")
        self.SE_Q17_horizontal_question_lyt.addWidget(self.SE_17_spinBox)
        self.verticalLayout_13.addLayout(self.SE_Q17_horizontal_question_lyt)
        self.SE_Q18_horizontal_question_lyt = QtWidgets.QHBoxLayout()
        self.SE_Q18_horizontal_question_lyt.setObjectName("SE_Q18_horizontal_question_lyt")
        self.SE_Q18_no_Label = QtWidgets.QLabel(self.SE_widget)
        self.SE_Q18_no_Label.setMinimumSize(QtCore.QSize(60, 60))
        self.SE_Q18_no_Label.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.SE_Q18_no_Label.setFont(font)
        self.SE_Q18_no_Label.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.SE_Q18_no_Label.setObjectName("SE_Q18_no_Label")
        self.SE_Q18_horizontal_question_lyt.addWidget(self.SE_Q18_no_Label)
        spacerItem21 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.SE_Q18_horizontal_question_lyt.addItem(spacerItem21)
        self.SE_Q18_question = QtWidgets.QLabel(self.SE_widget)
        self.SE_Q18_question.setMinimumSize(QtCore.QSize(800, 50))
        self.SE_Q18_question.setMaximumSize(QtCore.QSize(800, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.SE_Q18_question.setFont(font)
        self.SE_Q18_question.setObjectName("SE_Q18_question")
        self.SE_Q18_horizontal_question_lyt.addWidget(self.SE_Q18_question)
        self.SE_Q18_horizontalSlider = QtWidgets.QSlider(self.SE_widget)
        self.SE_Q18_horizontalSlider.setMinimumSize(QtCore.QSize(351, 71))
        self.SE_Q18_horizontalSlider.setMaximumSize(QtCore.QSize(351, 71))
        self.SE_Q18_horizontalSlider.setStyleSheet("QSlider::groove:horizontal {\n"
"    border: 1px solid #999999;\n"
"    height: 30px; /* Set the height of the groove */\n"
"    background: white;\n"
"    margin: 2px 0;\n"
"    border-radius: 4px; /* Setting border radius for groove */\n"
"}\n"
"\n"
"QSlider::handle:horizontal {\n"
"    background: rgb(31, 149, 239); /* Handle color */\n"
"    border: none; /* No border for handle */\n"
"    width: 60px; /* Width of the handle */\n"
"    margin: -2px 0; /* Expand outside the groove */\n"
"    border-radius: 5px; /* Rounded corners for handle */\n"
"    position: absolute; /* Necessary for proper handle positioning */\n"
"}\n"
"\n"
"QSlider::handle:horizontal:hover {\n"
"    background: rgb(45, 45, 45); /* Handle color when hovered */\n"
"}\n"
"\n"
"/* Style for when the handle is pressed */\n"
"QSlider::handle:horizontal:pressed {\n"
"    background: rgb(31, 149, 239); /* You might want to change this color */\n"
"}\n"
"\n"
"/* Ticks styling */\n"
"QSlider::sub-page:horizontal {\n"
"    background: rgb(31, 149, 239); /* Color of the part before the handle */\n"
"    border-radius: 4px;\n"
"}\n"
"\n"
"QSlider::add-page:horizontal {\n"
"    background: white; /* Color of the part after the handle */\n"
"    border-radius: 4px;\n"
"}\n"
"")
        self.SE_Q18_horizontalSlider.setMaximum(20)
        self.SE_Q18_horizontalSlider.setPageStep(5)
        self.SE_Q18_horizontalSlider.setOrientation(QtCore.Qt.Horizontal)
        self.SE_Q18_horizontalSlider.setObjectName("SE_Q18_horizontalSlider")
        self.SE_Q18_horizontal_question_lyt.addWidget(self.SE_Q18_horizontalSlider)
        self.SE_18_spinBox = QtWidgets.QSpinBox(self.SE_widget)
        self.SE_18_spinBox.setMinimumSize(QtCore.QSize(90, 60))
        self.SE_18_spinBox.setMaximumSize(QtCore.QSize(90, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(20)
        self.SE_18_spinBox.setFont(font)
        self.SE_18_spinBox.setStyleSheet("QSpinBox {\n"
"    background-color: white;\n"
"    color: black;\n"
"    border: 2px solid black;\n"
"    border-radius: 5px;\n"
"\n"
"    padding-left: 20px; /* Adjust left padding to center text */\n"
"  \n"
"    margin: 2px;\n"
"}\n"
"\n"
"QSpinBox::up-button {\n"
"    /* Styling for the up-button */\n"
"    subcontrol-origin: border; /* Position within the border */\n"
"    subcontrol-position: top right; /* Position at the top right */\n"
"    width: 15px; /* Width of the up-button */\n"
"    border-left: 1px solid black; /* Border between the up-button and the spin box */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    /* Styling for the down-button */\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"    border-left: 1px solid black;\n"
"}\n"
"\n"
"QSpinBox::up-arrow {\n"
"    /* Arrow styling within the up-button */\n"
"    width: 7px; /* Width of the arrow */\n"
"    height: 7px; /* Height of the arrow */\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"QSpinBox::down-arrow {\n"
"    /* Arrow styling within the down-button */\n"
"    width: 7px;\n"
"    height: 7px;\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: top right;\n"
"    width: 15px;\n"
"    border-bottom: 1px solid black; /* Add border between the up-button and down-button */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button:pressed {\n"
"    /* Styling for the up-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::down-button:pressed {\n"
"    /* Styling for the down-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::up-button:hover, QSpinBox::down-button:hover {\n"
"    /* Styling for the buttons when hovered */\n"
"    background-color: #e0e0e0;\n"
"}")
        self.SE_18_spinBox.setButtonSymbols(QtWidgets.QAbstractSpinBox.UpDownArrows)
        self.SE_18_spinBox.setMaximum(20)
        self.SE_18_spinBox.setObjectName("SE_18_spinBox")
        self.SE_Q18_horizontal_question_lyt.addWidget(self.SE_18_spinBox)
        self.verticalLayout_13.addLayout(self.SE_Q18_horizontal_question_lyt)
        self.SE_Q19_horizontal_question_lyt = QtWidgets.QHBoxLayout()
        self.SE_Q19_horizontal_question_lyt.setObjectName("SE_Q19_horizontal_question_lyt")
        self.SE_Q19_no_Label = QtWidgets.QLabel(self.SE_widget)
        self.SE_Q19_no_Label.setMinimumSize(QtCore.QSize(60, 60))
        self.SE_Q19_no_Label.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.SE_Q19_no_Label.setFont(font)
        self.SE_Q19_no_Label.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.SE_Q19_no_Label.setObjectName("SE_Q19_no_Label")
        self.SE_Q19_horizontal_question_lyt.addWidget(self.SE_Q19_no_Label)
        spacerItem22 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.SE_Q19_horizontal_question_lyt.addItem(spacerItem22)
        self.SE_Q19_question = QtWidgets.QLabel(self.SE_widget)
        self.SE_Q19_question.setMinimumSize(QtCore.QSize(800, 50))
        self.SE_Q19_question.setMaximumSize(QtCore.QSize(800, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.SE_Q19_question.setFont(font)
        self.SE_Q19_question.setObjectName("SE_Q19_question")
        self.SE_Q19_horizontal_question_lyt.addWidget(self.SE_Q19_question)
        self.SE_Q19_horizontalSlider = QtWidgets.QSlider(self.SE_widget)
        self.SE_Q19_horizontalSlider.setMinimumSize(QtCore.QSize(351, 71))
        self.SE_Q19_horizontalSlider.setMaximumSize(QtCore.QSize(351, 71))
        self.SE_Q19_horizontalSlider.setStyleSheet("QSlider::groove:horizontal {\n"
"    border: 1px solid #999999;\n"
"    height: 30px; /* Set the height of the groove */\n"
"    background: white;\n"
"    margin: 2px 0;\n"
"    border-radius: 4px; /* Setting border radius for groove */\n"
"}\n"
"\n"
"QSlider::handle:horizontal {\n"
"    background: rgb(31, 149, 239); /* Handle color */\n"
"    border: none; /* No border for handle */\n"
"    width: 60px; /* Width of the handle */\n"
"    margin: -2px 0; /* Expand outside the groove */\n"
"    border-radius: 5px; /* Rounded corners for handle */\n"
"    position: absolute; /* Necessary for proper handle positioning */\n"
"}\n"
"\n"
"QSlider::handle:horizontal:hover {\n"
"    background: rgb(45, 45, 45); /* Handle color when hovered */\n"
"}\n"
"\n"
"/* Style for when the handle is pressed */\n"
"QSlider::handle:horizontal:pressed {\n"
"    background: rgb(31, 149, 239); /* You might want to change this color */\n"
"}\n"
"\n"
"/* Ticks styling */\n"
"QSlider::sub-page:horizontal {\n"
"    background: rgb(31, 149, 239); /* Color of the part before the handle */\n"
"    border-radius: 4px;\n"
"}\n"
"\n"
"QSlider::add-page:horizontal {\n"
"    background: white; /* Color of the part after the handle */\n"
"    border-radius: 4px;\n"
"}\n"
"")
        self.SE_Q19_horizontalSlider.setMaximum(20)
        self.SE_Q19_horizontalSlider.setPageStep(5)
        self.SE_Q19_horizontalSlider.setOrientation(QtCore.Qt.Horizontal)
        self.SE_Q19_horizontalSlider.setObjectName("SE_Q19_horizontalSlider")
        self.SE_Q19_horizontal_question_lyt.addWidget(self.SE_Q19_horizontalSlider)
        self.SE_19_spinBox = QtWidgets.QSpinBox(self.SE_widget)
        self.SE_19_spinBox.setMinimumSize(QtCore.QSize(90, 60))
        self.SE_19_spinBox.setMaximumSize(QtCore.QSize(90, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(20)
        self.SE_19_spinBox.setFont(font)
        self.SE_19_spinBox.setStyleSheet("QSpinBox {\n"
"    background-color: white;\n"
"    color: black;\n"
"    border: 2px solid black;\n"
"    border-radius: 5px;\n"
"\n"
"    padding-left: 20px; /* Adjust left padding to center text */\n"
"  \n"
"    margin: 2px;\n"
"}\n"
"\n"
"QSpinBox::up-button {\n"
"    /* Styling for the up-button */\n"
"    subcontrol-origin: border; /* Position within the border */\n"
"    subcontrol-position: top right; /* Position at the top right */\n"
"    width: 15px; /* Width of the up-button */\n"
"    border-left: 1px solid black; /* Border between the up-button and the spin box */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    /* Styling for the down-button */\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"    border-left: 1px solid black;\n"
"}\n"
"\n"
"QSpinBox::up-arrow {\n"
"    /* Arrow styling within the up-button */\n"
"    width: 7px; /* Width of the arrow */\n"
"    height: 7px; /* Height of the arrow */\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"QSpinBox::down-arrow {\n"
"    /* Arrow styling within the down-button */\n"
"    width: 7px;\n"
"    height: 7px;\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: top right;\n"
"    width: 15px;\n"
"    border-bottom: 1px solid black; /* Add border between the up-button and down-button */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button:pressed {\n"
"    /* Styling for the up-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::down-button:pressed {\n"
"    /* Styling for the down-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::up-button:hover, QSpinBox::down-button:hover {\n"
"    /* Styling for the buttons when hovered */\n"
"    background-color: #e0e0e0;\n"
"}")
        self.SE_19_spinBox.setButtonSymbols(QtWidgets.QAbstractSpinBox.UpDownArrows)
        self.SE_19_spinBox.setMaximum(20)
        self.SE_19_spinBox.setObjectName("SE_19_spinBox")
        self.SE_Q19_horizontal_question_lyt.addWidget(self.SE_19_spinBox)
        self.verticalLayout_13.addLayout(self.SE_Q19_horizontal_question_lyt)
        self.SE_Q20_horizontal_question_lyt = QtWidgets.QHBoxLayout()
        self.SE_Q20_horizontal_question_lyt.setObjectName("SE_Q20_horizontal_question_lyt")
        self.SE_Q20_no_Label = QtWidgets.QLabel(self.SE_widget)
        self.SE_Q20_no_Label.setMinimumSize(QtCore.QSize(60, 60))
        self.SE_Q20_no_Label.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.SE_Q20_no_Label.setFont(font)
        self.SE_Q20_no_Label.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.SE_Q20_no_Label.setObjectName("SE_Q20_no_Label")
        self.SE_Q20_horizontal_question_lyt.addWidget(self.SE_Q20_no_Label)
        spacerItem23 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.SE_Q20_horizontal_question_lyt.addItem(spacerItem23)
        self.SE_Q20_question = QtWidgets.QLabel(self.SE_widget)
        self.SE_Q20_question.setMinimumSize(QtCore.QSize(800, 50))
        self.SE_Q20_question.setMaximumSize(QtCore.QSize(800, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.SE_Q20_question.setFont(font)
        self.SE_Q20_question.setObjectName("SE_Q20_question")
        self.SE_Q20_horizontal_question_lyt.addWidget(self.SE_Q20_question)
        self.SE_Q20_horizontalSlider = QtWidgets.QSlider(self.SE_widget)
        self.SE_Q20_horizontalSlider.setMinimumSize(QtCore.QSize(351, 71))
        self.SE_Q20_horizontalSlider.setMaximumSize(QtCore.QSize(351, 71))
        self.SE_Q20_horizontalSlider.setStyleSheet("QSlider::groove:horizontal {\n"
"    border: 1px solid #999999;\n"
"    height: 30px; /* Set the height of the groove */\n"
"    background: white;\n"
"    margin: 2px 0;\n"
"    border-radius: 4px; /* Setting border radius for groove */\n"
"}\n"
"\n"
"QSlider::handle:horizontal {\n"
"    background: rgb(31, 149, 239); /* Handle color */\n"
"    border: none; /* No border for handle */\n"
"    width: 60px; /* Width of the handle */\n"
"    margin: -2px 0; /* Expand outside the groove */\n"
"    border-radius: 5px; /* Rounded corners for handle */\n"
"    position: absolute; /* Necessary for proper handle positioning */\n"
"}\n"
"\n"
"QSlider::handle:horizontal:hover {\n"
"    background: rgb(45, 45, 45); /* Handle color when hovered */\n"
"}\n"
"\n"
"/* Style for when the handle is pressed */\n"
"QSlider::handle:horizontal:pressed {\n"
"    background: rgb(31, 149, 239); /* You might want to change this color */\n"
"}\n"
"\n"
"/* Ticks styling */\n"
"QSlider::sub-page:horizontal {\n"
"    background: rgb(31, 149, 239); /* Color of the part before the handle */\n"
"    border-radius: 4px;\n"
"}\n"
"\n"
"QSlider::add-page:horizontal {\n"
"    background: white; /* Color of the part after the handle */\n"
"    border-radius: 4px;\n"
"}\n"
"")
        self.SE_Q20_horizontalSlider.setMaximum(20)
        self.SE_Q20_horizontalSlider.setPageStep(5)
        self.SE_Q20_horizontalSlider.setOrientation(QtCore.Qt.Horizontal)
        self.SE_Q20_horizontalSlider.setObjectName("SE_Q20_horizontalSlider")
        self.SE_Q20_horizontal_question_lyt.addWidget(self.SE_Q20_horizontalSlider)
        self.SE_20_spinBox = QtWidgets.QSpinBox(self.SE_widget)
        self.SE_20_spinBox.setMinimumSize(QtCore.QSize(90, 60))
        self.SE_20_spinBox.setMaximumSize(QtCore.QSize(90, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(20)
        self.SE_20_spinBox.setFont(font)
        self.SE_20_spinBox.setStyleSheet("QSpinBox {\n"
"    background-color: white;\n"
"    color: black;\n"
"    border: 2px solid black;\n"
"    border-radius: 5px;\n"
"\n"
"    padding-left: 20px; /* Adjust left padding to center text */\n"
"  \n"
"    margin: 2px;\n"
"}\n"
"\n"
"QSpinBox::up-button {\n"
"    /* Styling for the up-button */\n"
"    subcontrol-origin: border; /* Position within the border */\n"
"    subcontrol-position: top right; /* Position at the top right */\n"
"    width: 15px; /* Width of the up-button */\n"
"    border-left: 1px solid black; /* Border between the up-button and the spin box */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    /* Styling for the down-button */\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"    border-left: 1px solid black;\n"
"}\n"
"\n"
"QSpinBox::up-arrow {\n"
"    /* Arrow styling within the up-button */\n"
"    width: 7px; /* Width of the arrow */\n"
"    height: 7px; /* Height of the arrow */\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"QSpinBox::down-arrow {\n"
"    /* Arrow styling within the down-button */\n"
"    width: 7px;\n"
"    height: 7px;\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: top right;\n"
"    width: 15px;\n"
"    border-bottom: 1px solid black; /* Add border between the up-button and down-button */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button:pressed {\n"
"    /* Styling for the up-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::down-button:pressed {\n"
"    /* Styling for the down-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::up-button:hover, QSpinBox::down-button:hover {\n"
"    /* Styling for the buttons when hovered */\n"
"    background-color: #e0e0e0;\n"
"}")
        self.SE_20_spinBox.setButtonSymbols(QtWidgets.QAbstractSpinBox.UpDownArrows)
        self.SE_20_spinBox.setMaximum(20)
        self.SE_20_spinBox.setObjectName("SE_20_spinBox")
        self.SE_Q20_horizontal_question_lyt.addWidget(self.SE_20_spinBox)
        self.verticalLayout_13.addLayout(self.SE_Q20_horizontal_question_lyt)
        self.verticalLayout_8.addWidget(self.SE_widget)
        self.selfEsteem_savebutton = QtWidgets.QCheckBox(self.SE_Tab_Page_2)
        self.selfEsteem_savebutton.setMinimumSize(QtCore.QSize(1168, 50))
        self.selfEsteem_savebutton.setMaximumSize(QtCore.QSize(1168, 50))
        self.selfEsteem_savebutton.setText("")
        self.selfEsteem_savebutton.setObjectName("selfEsteem_savebutton")
        self.verticalLayout_8.addWidget(self.selfEsteem_savebutton)
        self.SelfEsteem_tabWidget.addTab(self.SE_Tab_Page_2, "")
        self._gridLayout.addWidget(self.SelfEsteem_tabWidget, 1, 0, 1, 1)
        self.stackedWidget.addWidget(self.SelfEsteem_Page)
        self.Depression_Page = QtWidgets.QWidget()
        self.Depression_Page.setStyleSheet("#depression_instructions {\n"
"    font-family: \'Roboto \';\n"
"    font-size: 20px;\n"
"    font-weight: bold;\n"
"    color: rgb(24, 45, 83 ); /* Set the font color to white */\n"
"    background-color: transparent; /* Make the background transparent */\n"
"}\n"
"\n"
"\n"
"\n"
"#depression_savebutton {\n"
"    /* General styling for the checkbox */\n"
"    font-family: \'Roboto\';\n"
"    color: rgb(24, 45, 83); /* Text color */\n"
"    font-size: 16px; /* Font size */\n"
"    spacing: 5px; /* Space between the indicator and the text */\n"
"    background-color: transparent; /* Make the background transparent */\n"
"}\n"
"\n"
"#depression_savebutton::indicator {\n"
"    /* Styling for the indicator (the square part) */\n"
"    width: 150px; /* Width of the indicator */\n"
"    height: 150px; /* Height of the indicator */\n"
"}\n"
"\n"
"#depression_savebutton::indicator::unchecked {\n"
"    /* Styling for the indicator when the checkbox is unchecked */\n"
"    background-color: transparent; /* Background color */\n"
"    border: transparent; /* Border color and width */\n"
"    border-radius: 4px; /* Optional: if you want rounded corners for the square */\n"
"     image: url(:/icon/icon/notsaved.png); /* Absolute path to the checkmark image */\n"
"}\n"
"\n"
"\n"
"\n"
"#depression_savebutton::indicator::checked {\n"
"    /* Styling for the indicator when the checkbox is checked */\n"
"    background-color: transparent; /* Background color */\n"
"    border: transparent; /* Border color and width */\n"
"    border-radius: 4px; /* Optional: if you want rounded corners for the square */\n"
"    image: url(:/icon/icon/saved.png); /* Absolute path to the checkmark image */\n"
"    \n"
"}")
        self.Depression_Page.setObjectName("Depression_Page")
        self.Depression_Page_gridLayout = QtWidgets.QGridLayout(self.Depression_Page)
        self.Depression_Page_gridLayout.setObjectName("Depression_Page_gridLayout")
        self.Depression_Page_tabWidget = QtWidgets.QTabWidget(self.Depression_Page)
        font = QtGui.QFont()
        font.setFamily("Roboto Cn")
        font.setPointSize(11)
        self.Depression_Page_tabWidget.setFont(font)
        self.Depression_Page_tabWidget.setStyleSheet("QTabWidget::pane {\n"
"    /* The tab widget frame */\n"
"    border-top: 2px solid rgb(31, 149, 239);\n"
"    border-radius: 5px; /* Rounded corners for the pane */\n"
"}\n"
"\n"
"QTabWidget::tab-bar {\n"
"    /* The tab bar */\n"
"    left: 5px; /* Move the bar to the right */\n"
"}\n"
"\n"
"QTabBar::tab {\n"
"    /* The tab */\n"
"    background-color: rgb(31, 149, 239);\n"
"    color: white;\n"
"    padding: 5px;\n"
"    border: none;\n"
"    min-width: 80px; /* Set the minimum width of the tab */\n"
"    min-height: 30px; /* Set the minimum height of the tab */\n"
"    margin-right: 2px; /* Space between tabs */\n"
"    border-top-left-radius: 5px; /* Rounded top-left corner */\n"
"    border-top-right-radius: 5px; /* Rounded top-right corner */\n"
"}\n"
"\n"
"QTabBar::tab:selected {\n"
"    /* The selected tab */\n"
"    background-color: rgb(45, 45, 45);\n"
"    border-top-left-radius: 5px; /* Maintain rounded corner when selected */\n"
"    border-top-right-radius: 5px; /* Maintain rounded corner when selected */\n"
"}\n"
"\n"
"QTabBar::tab:hover {\n"
"    /* The tab when hovered over */\n"
"    background-color: rgb(51, 169, 259);\n"
"}\n"
"")
        self.Depression_Page_tabWidget.setObjectName("Depression_Page_tabWidget")
        self.DT_page_1 = QtWidgets.QWidget()
        self.DT_page_1.setStyleSheet("QLabel {\n"
"\n"
" \n"
"   \n"
"    \n"
"}\n"
"")
        self.DT_page_1.setObjectName("DT_page_1")
        self.DT_page_1_gridLayout = QtWidgets.QGridLayout(self.DT_page_1)
        self.DT_page_1_gridLayout.setContentsMargins(-1, -1, 0, -1)
        self.DT_page_1_gridLayout.setObjectName("DT_page_1_gridLayout")
        self.DT_main_widget_1 = QtWidgets.QWidget(self.DT_page_1)
        self.DT_main_widget_1.setStyleSheet("QPushButton {\n"
"    color: white;\n"
"    text-align:center;\n"
"    height:70px;\n"
"    border: 1px;\n"
"  \n"
"    border-radius: 8px; /* Round top left corner */\n"
"    \n"
"    background-color: rgb(31, 149, 239); /* Normal background color */\n"
"    font-size: 35px; /* Set the font size here */\n"
"    /* Other styles */\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: rgb(45, 45, 45); /* Darker background color on hover */\n"
"    color: rgb(220, 220, 220); /* Slightly lighter text color on hover */\n"
"}\n"
"\n"
"QPushButton:checked {\n"
" \n"
"     background-color: rgb(45, 45, 45); /* Darker background color on checked */\n"
"}")
        self.DT_main_widget_1.setObjectName("DT_main_widget_1")
        self.DT_main_widget_verticalLayout = QtWidgets.QVBoxLayout(self.DT_main_widget_1)
        self.DT_main_widget_verticalLayout.setContentsMargins(-1, -1, 0, -1)
        self.DT_main_widget_verticalLayout.setObjectName("DT_main_widget_verticalLayout")
        self.depression_instructions = QtWidgets.QLabel(self.DT_main_widget_1)
        self.depression_instructions.setMinimumSize(QtCore.QSize(1168, 50))
        self.depression_instructions.setMaximumSize(QtCore.QSize(1168, 50))
        self.depression_instructions.setObjectName("depression_instructions")
        self.DT_main_widget_verticalLayout.addWidget(self.depression_instructions)
        self.DT_Q1_horizontal_question_lyt = QtWidgets.QHBoxLayout()
        self.DT_Q1_horizontal_question_lyt.setObjectName("DT_Q1_horizontal_question_lyt")
        self.DT_Q1 = QtWidgets.QLabel(self.DT_main_widget_1)
        self.DT_Q1.setMinimumSize(QtCore.QSize(60, 60))
        self.DT_Q1.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.DT_Q1.setFont(font)
        self.DT_Q1.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.DT_Q1.setObjectName("DT_Q1")
        self.DT_Q1_horizontal_question_lyt.addWidget(self.DT_Q1)
        spacerItem24 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.DT_Q1_horizontal_question_lyt.addItem(spacerItem24)
        self.DT_Q1_A1_Label = QtWidgets.QLabel(self.DT_main_widget_1)
        self.DT_Q1_A1_Label.setMinimumSize(QtCore.QSize(475, 50))
        self.DT_Q1_A1_Label.setMaximumSize(QtCore.QSize(400, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.DT_Q1_A1_Label.setFont(font)
        self.DT_Q1_A1_Label.setObjectName("DT_Q1_A1_Label")
        self.DT_Q1_horizontal_question_lyt.addWidget(self.DT_Q1_A1_Label)
        spacerItem25 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.DT_Q1_horizontal_question_lyt.addItem(spacerItem25)
        self.DT_Q1_horizontal_selection_lyt = QtWidgets.QHBoxLayout()
        self.DT_Q1_horizontal_selection_lyt.setSizeConstraint(QtWidgets.QLayout.SetFixedSize)
        self.DT_Q1_horizontal_selection_lyt.setSpacing(20)
        self.DT_Q1_horizontal_selection_lyt.setObjectName("DT_Q1_horizontal_selection_lyt")
        self.DT_1_pushButton_1 = QtWidgets.QPushButton(self.DT_main_widget_1)
        self.DT_1_pushButton_1.setMinimumSize(QtCore.QSize(60, 55))
        self.DT_1_pushButton_1.setMaximumSize(QtCore.QSize(60, 55))
        self.DT_1_pushButton_1.setCheckable(True)
        self.DT_1_pushButton_1.setAutoExclusive(True)
        self.DT_1_pushButton_1.setObjectName("DT_1_pushButton_1")
        self.DT_Q1_horizontal_selection_lyt.addWidget(self.DT_1_pushButton_1)
        self.DT_1_pushButton_2 = QtWidgets.QPushButton(self.DT_main_widget_1)
        self.DT_1_pushButton_2.setMinimumSize(QtCore.QSize(60, 55))
        self.DT_1_pushButton_2.setMaximumSize(QtCore.QSize(60, 55))
        self.DT_1_pushButton_2.setCheckable(True)
        self.DT_1_pushButton_2.setAutoExclusive(True)
        self.DT_1_pushButton_2.setObjectName("DT_1_pushButton_2")
        self.DT_Q1_horizontal_selection_lyt.addWidget(self.DT_1_pushButton_2)
        self.DT_1_pushButton_3 = QtWidgets.QPushButton(self.DT_main_widget_1)
        self.DT_1_pushButton_3.setMinimumSize(QtCore.QSize(60, 55))
        self.DT_1_pushButton_3.setMaximumSize(QtCore.QSize(60, 55))
        self.DT_1_pushButton_3.setCheckable(True)
        self.DT_1_pushButton_3.setAutoExclusive(True)
        self.DT_1_pushButton_3.setObjectName("DT_1_pushButton_3")
        self.DT_Q1_horizontal_selection_lyt.addWidget(self.DT_1_pushButton_3)
        self.DT_1_pushButton_4 = QtWidgets.QPushButton(self.DT_main_widget_1)
        self.DT_1_pushButton_4.setMinimumSize(QtCore.QSize(60, 55))
        self.DT_1_pushButton_4.setMaximumSize(QtCore.QSize(60, 55))
        self.DT_1_pushButton_4.setCheckable(True)
        self.DT_1_pushButton_4.setAutoExclusive(True)
        self.DT_1_pushButton_4.setObjectName("DT_1_pushButton_4")
        self.DT_Q1_horizontal_selection_lyt.addWidget(self.DT_1_pushButton_4)
        self.DT_1_pushButton_5 = QtWidgets.QPushButton(self.DT_main_widget_1)
        self.DT_1_pushButton_5.setMinimumSize(QtCore.QSize(60, 55))
        self.DT_1_pushButton_5.setMaximumSize(QtCore.QSize(60, 55))
        self.DT_1_pushButton_5.setCheckable(True)
        self.DT_1_pushButton_5.setAutoExclusive(True)
        self.DT_1_pushButton_5.setObjectName("DT_1_pushButton_5")
        self.DT_Q1_horizontal_selection_lyt.addWidget(self.DT_1_pushButton_5)
        self.DT_Q1_horizontal_question_lyt.addLayout(self.DT_Q1_horizontal_selection_lyt)
        spacerItem26 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.DT_Q1_horizontal_question_lyt.addItem(spacerItem26)
        self.DT_Q1_A2_Label = QtWidgets.QLabel(self.DT_main_widget_1)
        self.DT_Q1_A2_Label.setMinimumSize(QtCore.QSize(400, 50))
        self.DT_Q1_A2_Label.setMaximumSize(QtCore.QSize(800, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.DT_Q1_A2_Label.setFont(font)
        self.DT_Q1_A2_Label.setObjectName("DT_Q1_A2_Label")
        self.DT_Q1_horizontal_question_lyt.addWidget(self.DT_Q1_A2_Label)
        self.DT_main_widget_verticalLayout.addLayout(self.DT_Q1_horizontal_question_lyt)
        self.DT_Q2_horizontal_question_lyt = QtWidgets.QHBoxLayout()
        self.DT_Q2_horizontal_question_lyt.setObjectName("DT_Q2_horizontal_question_lyt")
        self.DT_Q2 = QtWidgets.QLabel(self.DT_main_widget_1)
        self.DT_Q2.setMinimumSize(QtCore.QSize(60, 60))
        self.DT_Q2.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.DT_Q2.setFont(font)
        self.DT_Q2.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.DT_Q2.setObjectName("DT_Q2")
        self.DT_Q2_horizontal_question_lyt.addWidget(self.DT_Q2)
        spacerItem27 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.DT_Q2_horizontal_question_lyt.addItem(spacerItem27)
        self.DT_Q2_A1_Label = QtWidgets.QLabel(self.DT_main_widget_1)
        self.DT_Q2_A1_Label.setMinimumSize(QtCore.QSize(475, 50))
        self.DT_Q2_A1_Label.setMaximumSize(QtCore.QSize(475, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.DT_Q2_A1_Label.setFont(font)
        self.DT_Q2_A1_Label.setObjectName("DT_Q2_A1_Label")
        self.DT_Q2_horizontal_question_lyt.addWidget(self.DT_Q2_A1_Label)
        spacerItem28 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.DT_Q2_horizontal_question_lyt.addItem(spacerItem28)
        self.DT_Q2_horizontal_selection_lyt = QtWidgets.QHBoxLayout()
        self.DT_Q2_horizontal_selection_lyt.setSizeConstraint(QtWidgets.QLayout.SetFixedSize)
        self.DT_Q2_horizontal_selection_lyt.setSpacing(20)
        self.DT_Q2_horizontal_selection_lyt.setObjectName("DT_Q2_horizontal_selection_lyt")
        self.DT_2_pushButton_1 = QtWidgets.QPushButton(self.DT_main_widget_1)
        self.DT_2_pushButton_1.setMinimumSize(QtCore.QSize(60, 55))
        self.DT_2_pushButton_1.setMaximumSize(QtCore.QSize(60, 55))
        self.DT_2_pushButton_1.setCheckable(True)
        self.DT_2_pushButton_1.setAutoExclusive(True)
        self.DT_2_pushButton_1.setObjectName("DT_2_pushButton_1")
        self.DT_Q2_horizontal_selection_lyt.addWidget(self.DT_2_pushButton_1)
        self.DT_2_pushButton_2 = QtWidgets.QPushButton(self.DT_main_widget_1)
        self.DT_2_pushButton_2.setMinimumSize(QtCore.QSize(60, 55))
        self.DT_2_pushButton_2.setMaximumSize(QtCore.QSize(60, 55))
        self.DT_2_pushButton_2.setCheckable(True)
        self.DT_2_pushButton_2.setAutoExclusive(True)
        self.DT_2_pushButton_2.setObjectName("DT_2_pushButton_2")
        self.DT_Q2_horizontal_selection_lyt.addWidget(self.DT_2_pushButton_2)
        self.DT_2_pushButton_3 = QtWidgets.QPushButton(self.DT_main_widget_1)
        self.DT_2_pushButton_3.setMinimumSize(QtCore.QSize(60, 55))
        self.DT_2_pushButton_3.setMaximumSize(QtCore.QSize(60, 55))
        self.DT_2_pushButton_3.setCheckable(True)
        self.DT_2_pushButton_3.setAutoExclusive(True)
        self.DT_2_pushButton_3.setObjectName("DT_2_pushButton_3")
        self.DT_Q2_horizontal_selection_lyt.addWidget(self.DT_2_pushButton_3)
        self.DT_2_pushButton_4 = QtWidgets.QPushButton(self.DT_main_widget_1)
        self.DT_2_pushButton_4.setMinimumSize(QtCore.QSize(60, 55))
        self.DT_2_pushButton_4.setMaximumSize(QtCore.QSize(60, 55))
        self.DT_2_pushButton_4.setCheckable(True)
        self.DT_2_pushButton_4.setAutoExclusive(True)
        self.DT_2_pushButton_4.setObjectName("DT_2_pushButton_4")
        self.DT_Q2_horizontal_selection_lyt.addWidget(self.DT_2_pushButton_4)
        self.DT_2_pushButton_5 = QtWidgets.QPushButton(self.DT_main_widget_1)
        self.DT_2_pushButton_5.setMinimumSize(QtCore.QSize(60, 55))
        self.DT_2_pushButton_5.setMaximumSize(QtCore.QSize(60, 55))
        self.DT_2_pushButton_5.setCheckable(True)
        self.DT_2_pushButton_5.setAutoExclusive(True)
        self.DT_2_pushButton_5.setObjectName("DT_2_pushButton_5")
        self.DT_Q2_horizontal_selection_lyt.addWidget(self.DT_2_pushButton_5)
        self.DT_Q2_horizontal_question_lyt.addLayout(self.DT_Q2_horizontal_selection_lyt)
        spacerItem29 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.DT_Q2_horizontal_question_lyt.addItem(spacerItem29)
        self.DT_Q2_A2_Label = QtWidgets.QLabel(self.DT_main_widget_1)
        self.DT_Q2_A2_Label.setMinimumSize(QtCore.QSize(400, 50))
        self.DT_Q2_A2_Label.setMaximumSize(QtCore.QSize(800, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.DT_Q2_A2_Label.setFont(font)
        self.DT_Q2_A2_Label.setObjectName("DT_Q2_A2_Label")
        self.DT_Q2_horizontal_question_lyt.addWidget(self.DT_Q2_A2_Label)
        self.DT_main_widget_verticalLayout.addLayout(self.DT_Q2_horizontal_question_lyt)
        self.DT_Q3_horizontal_question_lyt = QtWidgets.QHBoxLayout()
        self.DT_Q3_horizontal_question_lyt.setObjectName("DT_Q3_horizontal_question_lyt")
        self.DT_Q3 = QtWidgets.QLabel(self.DT_main_widget_1)
        self.DT_Q3.setMinimumSize(QtCore.QSize(60, 60))
        self.DT_Q3.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.DT_Q3.setFont(font)
        self.DT_Q3.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.DT_Q3.setObjectName("DT_Q3")
        self.DT_Q3_horizontal_question_lyt.addWidget(self.DT_Q3)
        spacerItem30 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.DT_Q3_horizontal_question_lyt.addItem(spacerItem30)
        self.DT_Q3_A1_Label = QtWidgets.QLabel(self.DT_main_widget_1)
        self.DT_Q3_A1_Label.setMinimumSize(QtCore.QSize(475, 50))
        self.DT_Q3_A1_Label.setMaximumSize(QtCore.QSize(475, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.DT_Q3_A1_Label.setFont(font)
        self.DT_Q3_A1_Label.setObjectName("DT_Q3_A1_Label")
        self.DT_Q3_horizontal_question_lyt.addWidget(self.DT_Q3_A1_Label)
        spacerItem31 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.DT_Q3_horizontal_question_lyt.addItem(spacerItem31)
        self.DT_Q3_horizontal_selection_lyt = QtWidgets.QHBoxLayout()
        self.DT_Q3_horizontal_selection_lyt.setSizeConstraint(QtWidgets.QLayout.SetFixedSize)
        self.DT_Q3_horizontal_selection_lyt.setSpacing(20)
        self.DT_Q3_horizontal_selection_lyt.setObjectName("DT_Q3_horizontal_selection_lyt")
        self.DT_3_pushButton_1 = QtWidgets.QPushButton(self.DT_main_widget_1)
        self.DT_3_pushButton_1.setMinimumSize(QtCore.QSize(60, 55))
        self.DT_3_pushButton_1.setMaximumSize(QtCore.QSize(60, 55))
        self.DT_3_pushButton_1.setCheckable(True)
        self.DT_3_pushButton_1.setAutoExclusive(True)
        self.DT_3_pushButton_1.setObjectName("DT_3_pushButton_1")
        self.DT_Q3_horizontal_selection_lyt.addWidget(self.DT_3_pushButton_1)
        self.DT_3_pushButton_2 = QtWidgets.QPushButton(self.DT_main_widget_1)
        self.DT_3_pushButton_2.setMinimumSize(QtCore.QSize(60, 55))
        self.DT_3_pushButton_2.setMaximumSize(QtCore.QSize(60, 55))
        self.DT_3_pushButton_2.setCheckable(True)
        self.DT_3_pushButton_2.setAutoExclusive(True)
        self.DT_3_pushButton_2.setObjectName("DT_3_pushButton_2")
        self.DT_Q3_horizontal_selection_lyt.addWidget(self.DT_3_pushButton_2)
        self.DT_3_pushButton_3 = QtWidgets.QPushButton(self.DT_main_widget_1)
        self.DT_3_pushButton_3.setMinimumSize(QtCore.QSize(60, 55))
        self.DT_3_pushButton_3.setMaximumSize(QtCore.QSize(60, 55))
        self.DT_3_pushButton_3.setCheckable(True)
        self.DT_3_pushButton_3.setAutoExclusive(True)
        self.DT_3_pushButton_3.setObjectName("DT_3_pushButton_3")
        self.DT_Q3_horizontal_selection_lyt.addWidget(self.DT_3_pushButton_3)
        self.DT_3_pushButton_4 = QtWidgets.QPushButton(self.DT_main_widget_1)
        self.DT_3_pushButton_4.setMinimumSize(QtCore.QSize(60, 55))
        self.DT_3_pushButton_4.setMaximumSize(QtCore.QSize(60, 55))
        self.DT_3_pushButton_4.setCheckable(True)
        self.DT_3_pushButton_4.setAutoExclusive(True)
        self.DT_3_pushButton_4.setObjectName("DT_3_pushButton_4")
        self.DT_Q3_horizontal_selection_lyt.addWidget(self.DT_3_pushButton_4)
        self.DT_3_pushButton_5 = QtWidgets.QPushButton(self.DT_main_widget_1)
        self.DT_3_pushButton_5.setMinimumSize(QtCore.QSize(60, 55))
        self.DT_3_pushButton_5.setMaximumSize(QtCore.QSize(60, 55))
        self.DT_3_pushButton_5.setCheckable(True)
        self.DT_3_pushButton_5.setAutoExclusive(True)
        self.DT_3_pushButton_5.setObjectName("DT_3_pushButton_5")
        self.DT_Q3_horizontal_selection_lyt.addWidget(self.DT_3_pushButton_5)
        self.DT_Q3_horizontal_question_lyt.addLayout(self.DT_Q3_horizontal_selection_lyt)
        spacerItem32 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.DT_Q3_horizontal_question_lyt.addItem(spacerItem32)
        self.DT_Q3_A2_Label = QtWidgets.QLabel(self.DT_main_widget_1)
        self.DT_Q3_A2_Label.setMinimumSize(QtCore.QSize(400, 50))
        self.DT_Q3_A2_Label.setMaximumSize(QtCore.QSize(800, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.DT_Q3_A2_Label.setFont(font)
        self.DT_Q3_A2_Label.setObjectName("DT_Q3_A2_Label")
        self.DT_Q3_horizontal_question_lyt.addWidget(self.DT_Q3_A2_Label)
        self.DT_main_widget_verticalLayout.addLayout(self.DT_Q3_horizontal_question_lyt)
        self.DT_Q4_horizontal_question_lyt = QtWidgets.QHBoxLayout()
        self.DT_Q4_horizontal_question_lyt.setObjectName("DT_Q4_horizontal_question_lyt")
        self.DT_Q4 = QtWidgets.QLabel(self.DT_main_widget_1)
        self.DT_Q4.setMinimumSize(QtCore.QSize(60, 60))
        self.DT_Q4.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.DT_Q4.setFont(font)
        self.DT_Q4.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.DT_Q4.setObjectName("DT_Q4")
        self.DT_Q4_horizontal_question_lyt.addWidget(self.DT_Q4)
        spacerItem33 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.DT_Q4_horizontal_question_lyt.addItem(spacerItem33)
        self.DT_Q4_A1_Label = QtWidgets.QLabel(self.DT_main_widget_1)
        self.DT_Q4_A1_Label.setMinimumSize(QtCore.QSize(475, 50))
        self.DT_Q4_A1_Label.setMaximumSize(QtCore.QSize(475, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.DT_Q4_A1_Label.setFont(font)
        self.DT_Q4_A1_Label.setObjectName("DT_Q4_A1_Label")
        self.DT_Q4_horizontal_question_lyt.addWidget(self.DT_Q4_A1_Label)
        spacerItem34 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.DT_Q4_horizontal_question_lyt.addItem(spacerItem34)
        self.DT_Q4_horizontal_selection_lyt = QtWidgets.QHBoxLayout()
        self.DT_Q4_horizontal_selection_lyt.setSizeConstraint(QtWidgets.QLayout.SetFixedSize)
        self.DT_Q4_horizontal_selection_lyt.setSpacing(20)
        self.DT_Q4_horizontal_selection_lyt.setObjectName("DT_Q4_horizontal_selection_lyt")
        self.DT_4_pushButton_1 = QtWidgets.QPushButton(self.DT_main_widget_1)
        self.DT_4_pushButton_1.setMinimumSize(QtCore.QSize(60, 55))
        self.DT_4_pushButton_1.setMaximumSize(QtCore.QSize(60, 55))
        self.DT_4_pushButton_1.setCheckable(True)
        self.DT_4_pushButton_1.setAutoExclusive(True)
        self.DT_4_pushButton_1.setObjectName("DT_4_pushButton_1")
        self.DT_Q4_horizontal_selection_lyt.addWidget(self.DT_4_pushButton_1)
        self.DT_4_pushButton_2 = QtWidgets.QPushButton(self.DT_main_widget_1)
        self.DT_4_pushButton_2.setMinimumSize(QtCore.QSize(60, 55))
        self.DT_4_pushButton_2.setMaximumSize(QtCore.QSize(60, 55))
        self.DT_4_pushButton_2.setCheckable(True)
        self.DT_4_pushButton_2.setAutoExclusive(True)
        self.DT_4_pushButton_2.setObjectName("DT_4_pushButton_2")
        self.DT_Q4_horizontal_selection_lyt.addWidget(self.DT_4_pushButton_2)
        self.DT_4_pushButton_3 = QtWidgets.QPushButton(self.DT_main_widget_1)
        self.DT_4_pushButton_3.setMinimumSize(QtCore.QSize(60, 55))
        self.DT_4_pushButton_3.setMaximumSize(QtCore.QSize(60, 55))
        self.DT_4_pushButton_3.setCheckable(True)
        self.DT_4_pushButton_3.setAutoExclusive(True)
        self.DT_4_pushButton_3.setObjectName("DT_4_pushButton_3")
        self.DT_Q4_horizontal_selection_lyt.addWidget(self.DT_4_pushButton_3)
        self.DT_4_pushButton_4 = QtWidgets.QPushButton(self.DT_main_widget_1)
        self.DT_4_pushButton_4.setMinimumSize(QtCore.QSize(60, 55))
        self.DT_4_pushButton_4.setMaximumSize(QtCore.QSize(60, 55))
        self.DT_4_pushButton_4.setCheckable(True)
        self.DT_4_pushButton_4.setAutoExclusive(True)
        self.DT_4_pushButton_4.setObjectName("DT_4_pushButton_4")
        self.DT_Q4_horizontal_selection_lyt.addWidget(self.DT_4_pushButton_4)
        self.DT_4_pushButton_5 = QtWidgets.QPushButton(self.DT_main_widget_1)
        self.DT_4_pushButton_5.setMinimumSize(QtCore.QSize(60, 55))
        self.DT_4_pushButton_5.setMaximumSize(QtCore.QSize(60, 55))
        self.DT_4_pushButton_5.setCheckable(True)
        self.DT_4_pushButton_5.setAutoExclusive(True)
        self.DT_4_pushButton_5.setObjectName("DT_4_pushButton_5")
        self.DT_Q4_horizontal_selection_lyt.addWidget(self.DT_4_pushButton_5)
        self.DT_Q4_horizontal_question_lyt.addLayout(self.DT_Q4_horizontal_selection_lyt)
        spacerItem35 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.DT_Q4_horizontal_question_lyt.addItem(spacerItem35)
        self.DT_Q4_A2_Label = QtWidgets.QLabel(self.DT_main_widget_1)
        self.DT_Q4_A2_Label.setMinimumSize(QtCore.QSize(400, 50))
        self.DT_Q4_A2_Label.setMaximumSize(QtCore.QSize(800, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.DT_Q4_A2_Label.setFont(font)
        self.DT_Q4_A2_Label.setObjectName("DT_Q4_A2_Label")
        self.DT_Q4_horizontal_question_lyt.addWidget(self.DT_Q4_A2_Label)
        self.DT_main_widget_verticalLayout.addLayout(self.DT_Q4_horizontal_question_lyt)
        self.DT_Q5_horizontal_question_lyt = QtWidgets.QHBoxLayout()
        self.DT_Q5_horizontal_question_lyt.setObjectName("DT_Q5_horizontal_question_lyt")
        self.DT_Q5 = QtWidgets.QLabel(self.DT_main_widget_1)
        self.DT_Q5.setMinimumSize(QtCore.QSize(60, 60))
        self.DT_Q5.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.DT_Q5.setFont(font)
        self.DT_Q5.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.DT_Q5.setObjectName("DT_Q5")
        self.DT_Q5_horizontal_question_lyt.addWidget(self.DT_Q5)
        spacerItem36 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.DT_Q5_horizontal_question_lyt.addItem(spacerItem36)
        self.DT_Q5_A1_Label = QtWidgets.QLabel(self.DT_main_widget_1)
        self.DT_Q5_A1_Label.setMinimumSize(QtCore.QSize(475, 50))
        self.DT_Q5_A1_Label.setMaximumSize(QtCore.QSize(475, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.DT_Q5_A1_Label.setFont(font)
        self.DT_Q5_A1_Label.setObjectName("DT_Q5_A1_Label")
        self.DT_Q5_horizontal_question_lyt.addWidget(self.DT_Q5_A1_Label)
        spacerItem37 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.DT_Q5_horizontal_question_lyt.addItem(spacerItem37)
        self.DT_Q5_horizontal_selection_lyt = QtWidgets.QHBoxLayout()
        self.DT_Q5_horizontal_selection_lyt.setSizeConstraint(QtWidgets.QLayout.SetFixedSize)
        self.DT_Q5_horizontal_selection_lyt.setSpacing(20)
        self.DT_Q5_horizontal_selection_lyt.setObjectName("DT_Q5_horizontal_selection_lyt")
        self.DT_5_pushButton_1 = QtWidgets.QPushButton(self.DT_main_widget_1)
        self.DT_5_pushButton_1.setMinimumSize(QtCore.QSize(60, 55))
        self.DT_5_pushButton_1.setMaximumSize(QtCore.QSize(60, 55))
        self.DT_5_pushButton_1.setCheckable(True)
        self.DT_5_pushButton_1.setAutoExclusive(True)
        self.DT_5_pushButton_1.setObjectName("DT_5_pushButton_1")
        self.DT_Q5_horizontal_selection_lyt.addWidget(self.DT_5_pushButton_1)
        self.DT_5_pushButton_2 = QtWidgets.QPushButton(self.DT_main_widget_1)
        self.DT_5_pushButton_2.setMinimumSize(QtCore.QSize(60, 55))
        self.DT_5_pushButton_2.setMaximumSize(QtCore.QSize(60, 55))
        self.DT_5_pushButton_2.setCheckable(True)
        self.DT_5_pushButton_2.setAutoExclusive(True)
        self.DT_5_pushButton_2.setObjectName("DT_5_pushButton_2")
        self.DT_Q5_horizontal_selection_lyt.addWidget(self.DT_5_pushButton_2)
        self.DT_5_pushButton_3 = QtWidgets.QPushButton(self.DT_main_widget_1)
        self.DT_5_pushButton_3.setMinimumSize(QtCore.QSize(60, 55))
        self.DT_5_pushButton_3.setMaximumSize(QtCore.QSize(60, 55))
        self.DT_5_pushButton_3.setCheckable(True)
        self.DT_5_pushButton_3.setAutoExclusive(True)
        self.DT_5_pushButton_3.setObjectName("DT_5_pushButton_3")
        self.DT_Q5_horizontal_selection_lyt.addWidget(self.DT_5_pushButton_3)
        self.DT_5_pushButton_4 = QtWidgets.QPushButton(self.DT_main_widget_1)
        self.DT_5_pushButton_4.setMinimumSize(QtCore.QSize(60, 55))
        self.DT_5_pushButton_4.setMaximumSize(QtCore.QSize(60, 55))
        self.DT_5_pushButton_4.setCheckable(True)
        self.DT_5_pushButton_4.setAutoExclusive(True)
        self.DT_5_pushButton_4.setObjectName("DT_5_pushButton_4")
        self.DT_Q5_horizontal_selection_lyt.addWidget(self.DT_5_pushButton_4)
        self.DT_5_pushButton_5 = QtWidgets.QPushButton(self.DT_main_widget_1)
        self.DT_5_pushButton_5.setMinimumSize(QtCore.QSize(60, 55))
        self.DT_5_pushButton_5.setMaximumSize(QtCore.QSize(60, 55))
        self.DT_5_pushButton_5.setCheckable(True)
        self.DT_5_pushButton_5.setAutoExclusive(True)
        self.DT_5_pushButton_5.setObjectName("DT_5_pushButton_5")
        self.DT_Q5_horizontal_selection_lyt.addWidget(self.DT_5_pushButton_5)
        self.DT_Q5_horizontal_question_lyt.addLayout(self.DT_Q5_horizontal_selection_lyt)
        spacerItem38 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.DT_Q5_horizontal_question_lyt.addItem(spacerItem38)
        self.DT_Q5_A2_Label = QtWidgets.QLabel(self.DT_main_widget_1)
        self.DT_Q5_A2_Label.setMinimumSize(QtCore.QSize(400, 50))
        self.DT_Q5_A2_Label.setMaximumSize(QtCore.QSize(800, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.DT_Q5_A2_Label.setFont(font)
        self.DT_Q5_A2_Label.setObjectName("DT_Q5_A2_Label")
        self.DT_Q5_horizontal_question_lyt.addWidget(self.DT_Q5_A2_Label)
        self.DT_main_widget_verticalLayout.addLayout(self.DT_Q5_horizontal_question_lyt)
        self.DT_Q6_horizontal_question_lyt = QtWidgets.QHBoxLayout()
        self.DT_Q6_horizontal_question_lyt.setObjectName("DT_Q6_horizontal_question_lyt")
        self.DT_Q6 = QtWidgets.QLabel(self.DT_main_widget_1)
        self.DT_Q6.setMinimumSize(QtCore.QSize(60, 60))
        self.DT_Q6.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.DT_Q6.setFont(font)
        self.DT_Q6.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.DT_Q6.setObjectName("DT_Q6")
        self.DT_Q6_horizontal_question_lyt.addWidget(self.DT_Q6)
        spacerItem39 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.DT_Q6_horizontal_question_lyt.addItem(spacerItem39)
        self.DT_Q6_A1_Label = QtWidgets.QLabel(self.DT_main_widget_1)
        self.DT_Q6_A1_Label.setMinimumSize(QtCore.QSize(475, 50))
        self.DT_Q6_A1_Label.setMaximumSize(QtCore.QSize(475, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.DT_Q6_A1_Label.setFont(font)
        self.DT_Q6_A1_Label.setObjectName("DT_Q6_A1_Label")
        self.DT_Q6_horizontal_question_lyt.addWidget(self.DT_Q6_A1_Label)
        spacerItem40 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.DT_Q6_horizontal_question_lyt.addItem(spacerItem40)
        self.DT_Q6_horizontal_selection_lyt = QtWidgets.QHBoxLayout()
        self.DT_Q6_horizontal_selection_lyt.setSizeConstraint(QtWidgets.QLayout.SetFixedSize)
        self.DT_Q6_horizontal_selection_lyt.setSpacing(20)
        self.DT_Q6_horizontal_selection_lyt.setObjectName("DT_Q6_horizontal_selection_lyt")
        self.DT_6_pushButton_1 = QtWidgets.QPushButton(self.DT_main_widget_1)
        self.DT_6_pushButton_1.setMinimumSize(QtCore.QSize(60, 55))
        self.DT_6_pushButton_1.setMaximumSize(QtCore.QSize(60, 55))
        self.DT_6_pushButton_1.setCheckable(True)
        self.DT_6_pushButton_1.setAutoExclusive(True)
        self.DT_6_pushButton_1.setObjectName("DT_6_pushButton_1")
        self.DT_Q6_horizontal_selection_lyt.addWidget(self.DT_6_pushButton_1)
        self.DT_6_pushButton_2 = QtWidgets.QPushButton(self.DT_main_widget_1)
        self.DT_6_pushButton_2.setMinimumSize(QtCore.QSize(60, 55))
        self.DT_6_pushButton_2.setMaximumSize(QtCore.QSize(60, 55))
        self.DT_6_pushButton_2.setCheckable(True)
        self.DT_6_pushButton_2.setAutoExclusive(True)
        self.DT_6_pushButton_2.setObjectName("DT_6_pushButton_2")
        self.DT_Q6_horizontal_selection_lyt.addWidget(self.DT_6_pushButton_2)
        self.DT_6_pushButton_3 = QtWidgets.QPushButton(self.DT_main_widget_1)
        self.DT_6_pushButton_3.setMinimumSize(QtCore.QSize(60, 55))
        self.DT_6_pushButton_3.setMaximumSize(QtCore.QSize(60, 55))
        self.DT_6_pushButton_3.setCheckable(True)
        self.DT_6_pushButton_3.setAutoExclusive(True)
        self.DT_6_pushButton_3.setObjectName("DT_6_pushButton_3")
        self.DT_Q6_horizontal_selection_lyt.addWidget(self.DT_6_pushButton_3)
        self.DT_6_pushButton_4 = QtWidgets.QPushButton(self.DT_main_widget_1)
        self.DT_6_pushButton_4.setMinimumSize(QtCore.QSize(60, 55))
        self.DT_6_pushButton_4.setMaximumSize(QtCore.QSize(60, 55))
        self.DT_6_pushButton_4.setCheckable(True)
        self.DT_6_pushButton_4.setAutoExclusive(True)
        self.DT_6_pushButton_4.setObjectName("DT_6_pushButton_4")
        self.DT_Q6_horizontal_selection_lyt.addWidget(self.DT_6_pushButton_4)
        self.DT_6_pushButton_5 = QtWidgets.QPushButton(self.DT_main_widget_1)
        self.DT_6_pushButton_5.setMinimumSize(QtCore.QSize(60, 55))
        self.DT_6_pushButton_5.setMaximumSize(QtCore.QSize(60, 55))
        self.DT_6_pushButton_5.setCheckable(True)
        self.DT_6_pushButton_5.setAutoExclusive(True)
        self.DT_6_pushButton_5.setObjectName("DT_6_pushButton_5")
        self.DT_Q6_horizontal_selection_lyt.addWidget(self.DT_6_pushButton_5)
        self.DT_Q6_horizontal_question_lyt.addLayout(self.DT_Q6_horizontal_selection_lyt)
        spacerItem41 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.DT_Q6_horizontal_question_lyt.addItem(spacerItem41)
        self.DT_Q6_A2_Label = QtWidgets.QLabel(self.DT_main_widget_1)
        self.DT_Q6_A2_Label.setMinimumSize(QtCore.QSize(400, 50))
        self.DT_Q6_A2_Label.setMaximumSize(QtCore.QSize(800, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.DT_Q6_A2_Label.setFont(font)
        self.DT_Q6_A2_Label.setObjectName("DT_Q6_A2_Label")
        self.DT_Q6_horizontal_question_lyt.addWidget(self.DT_Q6_A2_Label)
        self.DT_main_widget_verticalLayout.addLayout(self.DT_Q6_horizontal_question_lyt)
        self.DT_Q7_horizontal_question_lyt = QtWidgets.QHBoxLayout()
        self.DT_Q7_horizontal_question_lyt.setObjectName("DT_Q7_horizontal_question_lyt")
        self.DT_Q7 = QtWidgets.QLabel(self.DT_main_widget_1)
        self.DT_Q7.setMinimumSize(QtCore.QSize(60, 60))
        self.DT_Q7.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.DT_Q7.setFont(font)
        self.DT_Q7.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.DT_Q7.setObjectName("DT_Q7")
        self.DT_Q7_horizontal_question_lyt.addWidget(self.DT_Q7)
        spacerItem42 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.DT_Q7_horizontal_question_lyt.addItem(spacerItem42)
        self.DT_Q7_A1_Label = QtWidgets.QLabel(self.DT_main_widget_1)
        self.DT_Q7_A1_Label.setMinimumSize(QtCore.QSize(475, 50))
        self.DT_Q7_A1_Label.setMaximumSize(QtCore.QSize(475, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.DT_Q7_A1_Label.setFont(font)
        self.DT_Q7_A1_Label.setObjectName("DT_Q7_A1_Label")
        self.DT_Q7_horizontal_question_lyt.addWidget(self.DT_Q7_A1_Label)
        spacerItem43 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.DT_Q7_horizontal_question_lyt.addItem(spacerItem43)
        self.DT_Q7_horizontal_selection_lyt = QtWidgets.QHBoxLayout()
        self.DT_Q7_horizontal_selection_lyt.setSizeConstraint(QtWidgets.QLayout.SetFixedSize)
        self.DT_Q7_horizontal_selection_lyt.setSpacing(20)
        self.DT_Q7_horizontal_selection_lyt.setObjectName("DT_Q7_horizontal_selection_lyt")
        self.DT_7_pushButton_1 = QtWidgets.QPushButton(self.DT_main_widget_1)
        self.DT_7_pushButton_1.setMinimumSize(QtCore.QSize(60, 55))
        self.DT_7_pushButton_1.setMaximumSize(QtCore.QSize(60, 55))
        self.DT_7_pushButton_1.setCheckable(True)
        self.DT_7_pushButton_1.setAutoExclusive(True)
        self.DT_7_pushButton_1.setObjectName("DT_7_pushButton_1")
        self.DT_Q7_horizontal_selection_lyt.addWidget(self.DT_7_pushButton_1)
        self.DT_7_pushButton_2 = QtWidgets.QPushButton(self.DT_main_widget_1)
        self.DT_7_pushButton_2.setMinimumSize(QtCore.QSize(60, 55))
        self.DT_7_pushButton_2.setMaximumSize(QtCore.QSize(60, 55))
        self.DT_7_pushButton_2.setCheckable(True)
        self.DT_7_pushButton_2.setAutoExclusive(True)
        self.DT_7_pushButton_2.setObjectName("DT_7_pushButton_2")
        self.DT_Q7_horizontal_selection_lyt.addWidget(self.DT_7_pushButton_2)
        self.DT_7_pushButton_3 = QtWidgets.QPushButton(self.DT_main_widget_1)
        self.DT_7_pushButton_3.setMinimumSize(QtCore.QSize(60, 55))
        self.DT_7_pushButton_3.setMaximumSize(QtCore.QSize(60, 55))
        self.DT_7_pushButton_3.setCheckable(True)
        self.DT_7_pushButton_3.setAutoExclusive(True)
        self.DT_7_pushButton_3.setObjectName("DT_7_pushButton_3")
        self.DT_Q7_horizontal_selection_lyt.addWidget(self.DT_7_pushButton_3)
        self.DT_7_pushButton_4 = QtWidgets.QPushButton(self.DT_main_widget_1)
        self.DT_7_pushButton_4.setMinimumSize(QtCore.QSize(60, 55))
        self.DT_7_pushButton_4.setMaximumSize(QtCore.QSize(60, 55))
        self.DT_7_pushButton_4.setCheckable(True)
        self.DT_7_pushButton_4.setAutoExclusive(True)
        self.DT_7_pushButton_4.setObjectName("DT_7_pushButton_4")
        self.DT_Q7_horizontal_selection_lyt.addWidget(self.DT_7_pushButton_4)
        self.DT_7_pushButton_5 = QtWidgets.QPushButton(self.DT_main_widget_1)
        self.DT_7_pushButton_5.setMinimumSize(QtCore.QSize(60, 55))
        self.DT_7_pushButton_5.setMaximumSize(QtCore.QSize(60, 55))
        self.DT_7_pushButton_5.setCheckable(True)
        self.DT_7_pushButton_5.setAutoExclusive(True)
        self.DT_7_pushButton_5.setObjectName("DT_7_pushButton_5")
        self.DT_Q7_horizontal_selection_lyt.addWidget(self.DT_7_pushButton_5)
        self.DT_Q7_horizontal_question_lyt.addLayout(self.DT_Q7_horizontal_selection_lyt)
        spacerItem44 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.DT_Q7_horizontal_question_lyt.addItem(spacerItem44)
        self.DT_Q7_A2_Label = QtWidgets.QLabel(self.DT_main_widget_1)
        self.DT_Q7_A2_Label.setMinimumSize(QtCore.QSize(400, 50))
        self.DT_Q7_A2_Label.setMaximumSize(QtCore.QSize(800, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.DT_Q7_A2_Label.setFont(font)
        self.DT_Q7_A2_Label.setObjectName("DT_Q7_A2_Label")
        self.DT_Q7_horizontal_question_lyt.addWidget(self.DT_Q7_A2_Label)
        self.DT_main_widget_verticalLayout.addLayout(self.DT_Q7_horizontal_question_lyt)
        self.DT_Q8_horizontal_question_lyt = QtWidgets.QHBoxLayout()
        self.DT_Q8_horizontal_question_lyt.setObjectName("DT_Q8_horizontal_question_lyt")
        self.DT_Q8 = QtWidgets.QLabel(self.DT_main_widget_1)
        self.DT_Q8.setMinimumSize(QtCore.QSize(60, 60))
        self.DT_Q8.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.DT_Q8.setFont(font)
        self.DT_Q8.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.DT_Q8.setObjectName("DT_Q8")
        self.DT_Q8_horizontal_question_lyt.addWidget(self.DT_Q8)
        spacerItem45 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.DT_Q8_horizontal_question_lyt.addItem(spacerItem45)
        self.DT_Q8_A1_Label = QtWidgets.QLabel(self.DT_main_widget_1)
        self.DT_Q8_A1_Label.setMinimumSize(QtCore.QSize(475, 50))
        self.DT_Q8_A1_Label.setMaximumSize(QtCore.QSize(475, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.DT_Q8_A1_Label.setFont(font)
        self.DT_Q8_A1_Label.setObjectName("DT_Q8_A1_Label")
        self.DT_Q8_horizontal_question_lyt.addWidget(self.DT_Q8_A1_Label)
        spacerItem46 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.DT_Q8_horizontal_question_lyt.addItem(spacerItem46)
        self.DT_Q8_horizontal_selection_lyt = QtWidgets.QHBoxLayout()
        self.DT_Q8_horizontal_selection_lyt.setSizeConstraint(QtWidgets.QLayout.SetFixedSize)
        self.DT_Q8_horizontal_selection_lyt.setSpacing(20)
        self.DT_Q8_horizontal_selection_lyt.setObjectName("DT_Q8_horizontal_selection_lyt")
        self.DT_8_pushButton_1 = QtWidgets.QPushButton(self.DT_main_widget_1)
        self.DT_8_pushButton_1.setMinimumSize(QtCore.QSize(60, 55))
        self.DT_8_pushButton_1.setMaximumSize(QtCore.QSize(60, 55))
        self.DT_8_pushButton_1.setCheckable(True)
        self.DT_8_pushButton_1.setAutoExclusive(True)
        self.DT_8_pushButton_1.setObjectName("DT_8_pushButton_1")
        self.DT_Q8_horizontal_selection_lyt.addWidget(self.DT_8_pushButton_1)
        self.DT_8_pushButton_2 = QtWidgets.QPushButton(self.DT_main_widget_1)
        self.DT_8_pushButton_2.setMinimumSize(QtCore.QSize(60, 55))
        self.DT_8_pushButton_2.setMaximumSize(QtCore.QSize(60, 55))
        self.DT_8_pushButton_2.setCheckable(True)
        self.DT_8_pushButton_2.setAutoExclusive(True)
        self.DT_8_pushButton_2.setObjectName("DT_8_pushButton_2")
        self.DT_Q8_horizontal_selection_lyt.addWidget(self.DT_8_pushButton_2)
        self.DT_8_pushButton_3 = QtWidgets.QPushButton(self.DT_main_widget_1)
        self.DT_8_pushButton_3.setMinimumSize(QtCore.QSize(60, 55))
        self.DT_8_pushButton_3.setMaximumSize(QtCore.QSize(60, 55))
        self.DT_8_pushButton_3.setCheckable(True)
        self.DT_8_pushButton_3.setAutoExclusive(True)
        self.DT_8_pushButton_3.setObjectName("DT_8_pushButton_3")
        self.DT_Q8_horizontal_selection_lyt.addWidget(self.DT_8_pushButton_3)
        self.DT_8_pushButton_4 = QtWidgets.QPushButton(self.DT_main_widget_1)
        self.DT_8_pushButton_4.setMinimumSize(QtCore.QSize(60, 55))
        self.DT_8_pushButton_4.setMaximumSize(QtCore.QSize(60, 55))
        self.DT_8_pushButton_4.setCheckable(True)
        self.DT_8_pushButton_4.setAutoExclusive(True)
        self.DT_8_pushButton_4.setObjectName("DT_8_pushButton_4")
        self.DT_Q8_horizontal_selection_lyt.addWidget(self.DT_8_pushButton_4)
        self.DT_8_pushButton_5 = QtWidgets.QPushButton(self.DT_main_widget_1)
        self.DT_8_pushButton_5.setMinimumSize(QtCore.QSize(60, 55))
        self.DT_8_pushButton_5.setMaximumSize(QtCore.QSize(60, 55))
        self.DT_8_pushButton_5.setCheckable(True)
        self.DT_8_pushButton_5.setAutoExclusive(True)
        self.DT_8_pushButton_5.setObjectName("DT_8_pushButton_5")
        self.DT_Q8_horizontal_selection_lyt.addWidget(self.DT_8_pushButton_5)
        self.DT_Q8_horizontal_question_lyt.addLayout(self.DT_Q8_horizontal_selection_lyt)
        spacerItem47 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.DT_Q8_horizontal_question_lyt.addItem(spacerItem47)
        self.DT_Q8_A2_Label = QtWidgets.QLabel(self.DT_main_widget_1)
        self.DT_Q8_A2_Label.setMinimumSize(QtCore.QSize(400, 50))
        self.DT_Q8_A2_Label.setMaximumSize(QtCore.QSize(800, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.DT_Q8_A2_Label.setFont(font)
        self.DT_Q8_A2_Label.setObjectName("DT_Q8_A2_Label")
        self.DT_Q8_horizontal_question_lyt.addWidget(self.DT_Q8_A2_Label)
        self.DT_main_widget_verticalLayout.addLayout(self.DT_Q8_horizontal_question_lyt)
        self.DT_Q9_horizontal_question_lyt = QtWidgets.QHBoxLayout()
        self.DT_Q9_horizontal_question_lyt.setObjectName("DT_Q9_horizontal_question_lyt")
        self.DT_Q9 = QtWidgets.QLabel(self.DT_main_widget_1)
        self.DT_Q9.setMinimumSize(QtCore.QSize(60, 60))
        self.DT_Q9.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.DT_Q9.setFont(font)
        self.DT_Q9.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.DT_Q9.setObjectName("DT_Q9")
        self.DT_Q9_horizontal_question_lyt.addWidget(self.DT_Q9)
        spacerItem48 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.DT_Q9_horizontal_question_lyt.addItem(spacerItem48)
        self.DT_Q9_A1_Label = QtWidgets.QLabel(self.DT_main_widget_1)
        self.DT_Q9_A1_Label.setMinimumSize(QtCore.QSize(475, 50))
        self.DT_Q9_A1_Label.setMaximumSize(QtCore.QSize(475, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.DT_Q9_A1_Label.setFont(font)
        self.DT_Q9_A1_Label.setObjectName("DT_Q9_A1_Label")
        self.DT_Q9_horizontal_question_lyt.addWidget(self.DT_Q9_A1_Label)
        spacerItem49 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.DT_Q9_horizontal_question_lyt.addItem(spacerItem49)
        self.DT_Q9_horizontal_selection_lyt = QtWidgets.QHBoxLayout()
        self.DT_Q9_horizontal_selection_lyt.setSizeConstraint(QtWidgets.QLayout.SetFixedSize)
        self.DT_Q9_horizontal_selection_lyt.setSpacing(20)
        self.DT_Q9_horizontal_selection_lyt.setObjectName("DT_Q9_horizontal_selection_lyt")
        self.DT_9_pushButton_1 = QtWidgets.QPushButton(self.DT_main_widget_1)
        self.DT_9_pushButton_1.setMinimumSize(QtCore.QSize(60, 55))
        self.DT_9_pushButton_1.setMaximumSize(QtCore.QSize(60, 55))
        self.DT_9_pushButton_1.setCheckable(True)
        self.DT_9_pushButton_1.setAutoExclusive(True)
        self.DT_9_pushButton_1.setObjectName("DT_9_pushButton_1")
        self.DT_Q9_horizontal_selection_lyt.addWidget(self.DT_9_pushButton_1)
        self.DT_9_pushButton_2 = QtWidgets.QPushButton(self.DT_main_widget_1)
        self.DT_9_pushButton_2.setMinimumSize(QtCore.QSize(60, 55))
        self.DT_9_pushButton_2.setMaximumSize(QtCore.QSize(60, 55))
        self.DT_9_pushButton_2.setCheckable(True)
        self.DT_9_pushButton_2.setAutoExclusive(True)
        self.DT_9_pushButton_2.setObjectName("DT_9_pushButton_2")
        self.DT_Q9_horizontal_selection_lyt.addWidget(self.DT_9_pushButton_2)
        self.DT_9_pushButton_3 = QtWidgets.QPushButton(self.DT_main_widget_1)
        self.DT_9_pushButton_3.setMinimumSize(QtCore.QSize(60, 55))
        self.DT_9_pushButton_3.setMaximumSize(QtCore.QSize(60, 55))
        self.DT_9_pushButton_3.setCheckable(True)
        self.DT_9_pushButton_3.setAutoExclusive(True)
        self.DT_9_pushButton_3.setObjectName("DT_9_pushButton_3")
        self.DT_Q9_horizontal_selection_lyt.addWidget(self.DT_9_pushButton_3)
        self.DT_9_pushButton_4 = QtWidgets.QPushButton(self.DT_main_widget_1)
        self.DT_9_pushButton_4.setMinimumSize(QtCore.QSize(60, 55))
        self.DT_9_pushButton_4.setMaximumSize(QtCore.QSize(60, 55))
        self.DT_9_pushButton_4.setCheckable(True)
        self.DT_9_pushButton_4.setAutoExclusive(True)
        self.DT_9_pushButton_4.setObjectName("DT_9_pushButton_4")
        self.DT_Q9_horizontal_selection_lyt.addWidget(self.DT_9_pushButton_4)
        self.DT_9_pushButton_5 = QtWidgets.QPushButton(self.DT_main_widget_1)
        self.DT_9_pushButton_5.setMinimumSize(QtCore.QSize(60, 55))
        self.DT_9_pushButton_5.setMaximumSize(QtCore.QSize(60, 55))
        self.DT_9_pushButton_5.setCheckable(True)
        self.DT_9_pushButton_5.setAutoExclusive(True)
        self.DT_9_pushButton_5.setObjectName("DT_9_pushButton_5")
        self.DT_Q9_horizontal_selection_lyt.addWidget(self.DT_9_pushButton_5)
        self.DT_Q9_horizontal_question_lyt.addLayout(self.DT_Q9_horizontal_selection_lyt)
        spacerItem50 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.DT_Q9_horizontal_question_lyt.addItem(spacerItem50)
        self.DT_Q9_A2_Label = QtWidgets.QLabel(self.DT_main_widget_1)
        self.DT_Q9_A2_Label.setMinimumSize(QtCore.QSize(400, 50))
        self.DT_Q9_A2_Label.setMaximumSize(QtCore.QSize(800, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.DT_Q9_A2_Label.setFont(font)
        self.DT_Q9_A2_Label.setObjectName("DT_Q9_A2_Label")
        self.DT_Q9_horizontal_question_lyt.addWidget(self.DT_Q9_A2_Label)
        self.DT_main_widget_verticalLayout.addLayout(self.DT_Q9_horizontal_question_lyt)
        self.DT_Q10_horizontal_question_lyt = QtWidgets.QHBoxLayout()
        self.DT_Q10_horizontal_question_lyt.setObjectName("DT_Q10_horizontal_question_lyt")
        self.DT_Q10 = QtWidgets.QLabel(self.DT_main_widget_1)
        self.DT_Q10.setMinimumSize(QtCore.QSize(60, 60))
        self.DT_Q10.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.DT_Q10.setFont(font)
        self.DT_Q10.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.DT_Q10.setObjectName("DT_Q10")
        self.DT_Q10_horizontal_question_lyt.addWidget(self.DT_Q10)
        spacerItem51 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.DT_Q10_horizontal_question_lyt.addItem(spacerItem51)
        self.DT_Q10_A1_Label = QtWidgets.QLabel(self.DT_main_widget_1)
        self.DT_Q10_A1_Label.setMinimumSize(QtCore.QSize(475, 50))
        self.DT_Q10_A1_Label.setMaximumSize(QtCore.QSize(475, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.DT_Q10_A1_Label.setFont(font)
        self.DT_Q10_A1_Label.setObjectName("DT_Q10_A1_Label")
        self.DT_Q10_horizontal_question_lyt.addWidget(self.DT_Q10_A1_Label)
        spacerItem52 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.DT_Q10_horizontal_question_lyt.addItem(spacerItem52)
        self.DT_Q10_horizontal_selection_lyt = QtWidgets.QHBoxLayout()
        self.DT_Q10_horizontal_selection_lyt.setSizeConstraint(QtWidgets.QLayout.SetFixedSize)
        self.DT_Q10_horizontal_selection_lyt.setSpacing(20)
        self.DT_Q10_horizontal_selection_lyt.setObjectName("DT_Q10_horizontal_selection_lyt")
        self.DT_10_pushButton_1 = QtWidgets.QPushButton(self.DT_main_widget_1)
        self.DT_10_pushButton_1.setMinimumSize(QtCore.QSize(60, 55))
        self.DT_10_pushButton_1.setMaximumSize(QtCore.QSize(60, 55))
        self.DT_10_pushButton_1.setCheckable(True)
        self.DT_10_pushButton_1.setAutoExclusive(True)
        self.DT_10_pushButton_1.setObjectName("DT_10_pushButton_1")
        self.DT_Q10_horizontal_selection_lyt.addWidget(self.DT_10_pushButton_1)
        self.DT_10_pushButton_2 = QtWidgets.QPushButton(self.DT_main_widget_1)
        self.DT_10_pushButton_2.setMinimumSize(QtCore.QSize(60, 55))
        self.DT_10_pushButton_2.setMaximumSize(QtCore.QSize(60, 55))
        self.DT_10_pushButton_2.setCheckable(True)
        self.DT_10_pushButton_2.setAutoExclusive(True)
        self.DT_10_pushButton_2.setObjectName("DT_10_pushButton_2")
        self.DT_Q10_horizontal_selection_lyt.addWidget(self.DT_10_pushButton_2)
        self.DT_10_pushButton_3 = QtWidgets.QPushButton(self.DT_main_widget_1)
        self.DT_10_pushButton_3.setMinimumSize(QtCore.QSize(60, 55))
        self.DT_10_pushButton_3.setMaximumSize(QtCore.QSize(60, 55))
        self.DT_10_pushButton_3.setCheckable(True)
        self.DT_10_pushButton_3.setAutoExclusive(True)
        self.DT_10_pushButton_3.setObjectName("DT_10_pushButton_3")
        self.DT_Q10_horizontal_selection_lyt.addWidget(self.DT_10_pushButton_3)
        self.DT_10_pushButton_4 = QtWidgets.QPushButton(self.DT_main_widget_1)
        self.DT_10_pushButton_4.setMinimumSize(QtCore.QSize(60, 55))
        self.DT_10_pushButton_4.setMaximumSize(QtCore.QSize(60, 55))
        self.DT_10_pushButton_4.setCheckable(True)
        self.DT_10_pushButton_4.setAutoExclusive(True)
        self.DT_10_pushButton_4.setObjectName("DT_10_pushButton_4")
        self.DT_Q10_horizontal_selection_lyt.addWidget(self.DT_10_pushButton_4)
        self.DT_10_pushButton_5 = QtWidgets.QPushButton(self.DT_main_widget_1)
        self.DT_10_pushButton_5.setMinimumSize(QtCore.QSize(60, 55))
        self.DT_10_pushButton_5.setMaximumSize(QtCore.QSize(60, 55))
        self.DT_10_pushButton_5.setCheckable(True)
        self.DT_10_pushButton_5.setAutoExclusive(True)
        self.DT_10_pushButton_5.setObjectName("DT_10_pushButton_5")
        self.DT_Q10_horizontal_selection_lyt.addWidget(self.DT_10_pushButton_5)
        self.DT_Q10_horizontal_question_lyt.addLayout(self.DT_Q10_horizontal_selection_lyt)
        spacerItem53 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.DT_Q10_horizontal_question_lyt.addItem(spacerItem53)
        self.DT_Q10_A2_Label_2 = QtWidgets.QLabel(self.DT_main_widget_1)
        self.DT_Q10_A2_Label_2.setMinimumSize(QtCore.QSize(400, 50))
        self.DT_Q10_A2_Label_2.setMaximumSize(QtCore.QSize(800, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.DT_Q10_A2_Label_2.setFont(font)
        self.DT_Q10_A2_Label_2.setObjectName("DT_Q10_A2_Label_2")
        self.DT_Q10_horizontal_question_lyt.addWidget(self.DT_Q10_A2_Label_2)
        self.DT_main_widget_verticalLayout.addLayout(self.DT_Q10_horizontal_question_lyt)
        self.DT_page_1_gridLayout.addWidget(self.DT_main_widget_1, 0, 0, 1, 1)
        self.Depression_Page_tabWidget.addTab(self.DT_page_1, "")
        self.DT_page_2 = QtWidgets.QWidget()
        self.DT_page_2.setObjectName("DT_page_2")
        self.DT_page_2_verticalLayout = QtWidgets.QVBoxLayout(self.DT_page_2)
        self.DT_page_2_verticalLayout.setContentsMargins(-1, 11, -1, 325)
        self.DT_page_2_verticalLayout.setObjectName("DT_page_2_verticalLayout")
        self.DT_main_widget_2 = QtWidgets.QWidget(self.DT_page_2)
        self.DT_main_widget_2.setStyleSheet("QPushButton {\n"
"    color: white;\n"
"    text-align:center;\n"
"    height:70px;\n"
"    border: 1px;\n"
"  \n"
"    border-radius: 8px; /* Round top left corner */\n"
"    \n"
"    background-color: rgb(31, 149, 239); /* Normal background color */\n"
"    font-size: 35px; /* Set the font size here */\n"
"    /* Other styles */\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: rgb(45, 45, 45); /* Darker background color on hover */\n"
"    color: rgb(220, 220, 220); /* Slightly lighter text color on hover */\n"
"}\n"
"\n"
"QPushButton:checked {\n"
" \n"
"     background-color: rgb(45, 45, 45); /* Darker background color on checked */\n"
"}")
        self.DT_main_widget_2.setObjectName("DT_main_widget_2")
        self.DT_main_widget_2_verticalLayout = QtWidgets.QVBoxLayout(self.DT_main_widget_2)
        self.DT_main_widget_2_verticalLayout.setSpacing(7)
        self.DT_main_widget_2_verticalLayout.setObjectName("DT_main_widget_2_verticalLayout")
        self.DT_Q11_horizontal_question_lyt = QtWidgets.QHBoxLayout()
        self.DT_Q11_horizontal_question_lyt.setObjectName("DT_Q11_horizontal_question_lyt")
        self.DT_Q11 = QtWidgets.QLabel(self.DT_main_widget_2)
        self.DT_Q11.setMinimumSize(QtCore.QSize(60, 60))
        self.DT_Q11.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.DT_Q11.setFont(font)
        self.DT_Q11.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.DT_Q11.setObjectName("DT_Q11")
        self.DT_Q11_horizontal_question_lyt.addWidget(self.DT_Q11)
        spacerItem54 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.DT_Q11_horizontal_question_lyt.addItem(spacerItem54)
        self.DT_Q11_A1_Label = QtWidgets.QLabel(self.DT_main_widget_2)
        self.DT_Q11_A1_Label.setMinimumSize(QtCore.QSize(475, 50))
        self.DT_Q11_A1_Label.setMaximumSize(QtCore.QSize(400, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.DT_Q11_A1_Label.setFont(font)
        self.DT_Q11_A1_Label.setObjectName("DT_Q11_A1_Label")
        self.DT_Q11_horizontal_question_lyt.addWidget(self.DT_Q11_A1_Label)
        spacerItem55 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.DT_Q11_horizontal_question_lyt.addItem(spacerItem55)
        self.DT_Q11_horizontal_selection_lyt = QtWidgets.QHBoxLayout()
        self.DT_Q11_horizontal_selection_lyt.setSizeConstraint(QtWidgets.QLayout.SetFixedSize)
        self.DT_Q11_horizontal_selection_lyt.setSpacing(20)
        self.DT_Q11_horizontal_selection_lyt.setObjectName("DT_Q11_horizontal_selection_lyt")
        self.DT_11_pushButton_1 = QtWidgets.QPushButton(self.DT_main_widget_2)
        self.DT_11_pushButton_1.setMinimumSize(QtCore.QSize(60, 55))
        self.DT_11_pushButton_1.setMaximumSize(QtCore.QSize(60, 55))
        self.DT_11_pushButton_1.setCheckable(True)
        self.DT_11_pushButton_1.setAutoExclusive(True)
        self.DT_11_pushButton_1.setObjectName("DT_11_pushButton_1")
        self.DT_Q11_horizontal_selection_lyt.addWidget(self.DT_11_pushButton_1)
        self.DT_11_pushButton_2 = QtWidgets.QPushButton(self.DT_main_widget_2)
        self.DT_11_pushButton_2.setMinimumSize(QtCore.QSize(60, 55))
        self.DT_11_pushButton_2.setMaximumSize(QtCore.QSize(60, 55))
        self.DT_11_pushButton_2.setCheckable(True)
        self.DT_11_pushButton_2.setAutoExclusive(True)
        self.DT_11_pushButton_2.setObjectName("DT_11_pushButton_2")
        self.DT_Q11_horizontal_selection_lyt.addWidget(self.DT_11_pushButton_2)
        self.DT_11_pushButton_3 = QtWidgets.QPushButton(self.DT_main_widget_2)
        self.DT_11_pushButton_3.setMinimumSize(QtCore.QSize(60, 55))
        self.DT_11_pushButton_3.setMaximumSize(QtCore.QSize(60, 55))
        self.DT_11_pushButton_3.setCheckable(True)
        self.DT_11_pushButton_3.setAutoExclusive(True)
        self.DT_11_pushButton_3.setObjectName("DT_11_pushButton_3")
        self.DT_Q11_horizontal_selection_lyt.addWidget(self.DT_11_pushButton_3)
        self.DT_11_pushButton_4 = QtWidgets.QPushButton(self.DT_main_widget_2)
        self.DT_11_pushButton_4.setMinimumSize(QtCore.QSize(60, 55))
        self.DT_11_pushButton_4.setMaximumSize(QtCore.QSize(60, 55))
        self.DT_11_pushButton_4.setCheckable(True)
        self.DT_11_pushButton_4.setAutoExclusive(True)
        self.DT_11_pushButton_4.setObjectName("DT_11_pushButton_4")
        self.DT_Q11_horizontal_selection_lyt.addWidget(self.DT_11_pushButton_4)
        self.DT_11_pushButton_5 = QtWidgets.QPushButton(self.DT_main_widget_2)
        self.DT_11_pushButton_5.setMinimumSize(QtCore.QSize(60, 55))
        self.DT_11_pushButton_5.setMaximumSize(QtCore.QSize(60, 55))
        self.DT_11_pushButton_5.setCheckable(True)
        self.DT_11_pushButton_5.setAutoExclusive(True)
        self.DT_11_pushButton_5.setObjectName("DT_11_pushButton_5")
        self.DT_Q11_horizontal_selection_lyt.addWidget(self.DT_11_pushButton_5)
        self.DT_Q11_horizontal_question_lyt.addLayout(self.DT_Q11_horizontal_selection_lyt)
        spacerItem56 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.DT_Q11_horizontal_question_lyt.addItem(spacerItem56)
        self.DT_Q11_A2_Label = QtWidgets.QLabel(self.DT_main_widget_2)
        self.DT_Q11_A2_Label.setMinimumSize(QtCore.QSize(400, 50))
        self.DT_Q11_A2_Label.setMaximumSize(QtCore.QSize(800, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.DT_Q11_A2_Label.setFont(font)
        self.DT_Q11_A2_Label.setObjectName("DT_Q11_A2_Label")
        self.DT_Q11_horizontal_question_lyt.addWidget(self.DT_Q11_A2_Label)
        self.DT_main_widget_2_verticalLayout.addLayout(self.DT_Q11_horizontal_question_lyt)
        self.DT_Q12_horizontal_question_lyt = QtWidgets.QHBoxLayout()
        self.DT_Q12_horizontal_question_lyt.setSpacing(7)
        self.DT_Q12_horizontal_question_lyt.setObjectName("DT_Q12_horizontal_question_lyt")
        self.DT_Q12 = QtWidgets.QLabel(self.DT_main_widget_2)
        self.DT_Q12.setMinimumSize(QtCore.QSize(60, 60))
        self.DT_Q12.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.DT_Q12.setFont(font)
        self.DT_Q12.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.DT_Q12.setObjectName("DT_Q12")
        self.DT_Q12_horizontal_question_lyt.addWidget(self.DT_Q12)
        spacerItem57 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.DT_Q12_horizontal_question_lyt.addItem(spacerItem57)
        self.DT_Q12_A1_Label = QtWidgets.QLabel(self.DT_main_widget_2)
        self.DT_Q12_A1_Label.setMinimumSize(QtCore.QSize(475, 50))
        self.DT_Q12_A1_Label.setMaximumSize(QtCore.QSize(400, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.DT_Q12_A1_Label.setFont(font)
        self.DT_Q12_A1_Label.setObjectName("DT_Q12_A1_Label")
        self.DT_Q12_horizontal_question_lyt.addWidget(self.DT_Q12_A1_Label)
        spacerItem58 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.DT_Q12_horizontal_question_lyt.addItem(spacerItem58)
        self.DT_Q12_horizontal_selection_lyt = QtWidgets.QHBoxLayout()
        self.DT_Q12_horizontal_selection_lyt.setSizeConstraint(QtWidgets.QLayout.SetFixedSize)
        self.DT_Q12_horizontal_selection_lyt.setSpacing(20)
        self.DT_Q12_horizontal_selection_lyt.setObjectName("DT_Q12_horizontal_selection_lyt")
        self.DT_12_pushButton_1 = QtWidgets.QPushButton(self.DT_main_widget_2)
        self.DT_12_pushButton_1.setMinimumSize(QtCore.QSize(60, 55))
        self.DT_12_pushButton_1.setMaximumSize(QtCore.QSize(60, 55))
        self.DT_12_pushButton_1.setCheckable(True)
        self.DT_12_pushButton_1.setAutoExclusive(True)
        self.DT_12_pushButton_1.setObjectName("DT_12_pushButton_1")
        self.DT_Q12_horizontal_selection_lyt.addWidget(self.DT_12_pushButton_1)
        self.DT_12_pushButton_2 = QtWidgets.QPushButton(self.DT_main_widget_2)
        self.DT_12_pushButton_2.setMinimumSize(QtCore.QSize(60, 55))
        self.DT_12_pushButton_2.setMaximumSize(QtCore.QSize(60, 55))
        self.DT_12_pushButton_2.setCheckable(True)
        self.DT_12_pushButton_2.setAutoExclusive(True)
        self.DT_12_pushButton_2.setObjectName("DT_12_pushButton_2")
        self.DT_Q12_horizontal_selection_lyt.addWidget(self.DT_12_pushButton_2)
        self.DT_12_pushButton_3 = QtWidgets.QPushButton(self.DT_main_widget_2)
        self.DT_12_pushButton_3.setMinimumSize(QtCore.QSize(60, 55))
        self.DT_12_pushButton_3.setMaximumSize(QtCore.QSize(60, 55))
        self.DT_12_pushButton_3.setCheckable(True)
        self.DT_12_pushButton_3.setAutoExclusive(True)
        self.DT_12_pushButton_3.setObjectName("DT_12_pushButton_3")
        self.DT_Q12_horizontal_selection_lyt.addWidget(self.DT_12_pushButton_3)
        self.DT_12_pushButton_4 = QtWidgets.QPushButton(self.DT_main_widget_2)
        self.DT_12_pushButton_4.setMinimumSize(QtCore.QSize(60, 55))
        self.DT_12_pushButton_4.setMaximumSize(QtCore.QSize(60, 55))
        self.DT_12_pushButton_4.setCheckable(True)
        self.DT_12_pushButton_4.setAutoExclusive(True)
        self.DT_12_pushButton_4.setObjectName("DT_12_pushButton_4")
        self.DT_Q12_horizontal_selection_lyt.addWidget(self.DT_12_pushButton_4)
        self.DT_12_pushButton_5 = QtWidgets.QPushButton(self.DT_main_widget_2)
        self.DT_12_pushButton_5.setMinimumSize(QtCore.QSize(60, 55))
        self.DT_12_pushButton_5.setMaximumSize(QtCore.QSize(60, 55))
        self.DT_12_pushButton_5.setCheckable(True)
        self.DT_12_pushButton_5.setAutoExclusive(True)
        self.DT_12_pushButton_5.setObjectName("DT_12_pushButton_5")
        self.DT_Q12_horizontal_selection_lyt.addWidget(self.DT_12_pushButton_5)
        self.DT_Q12_horizontal_question_lyt.addLayout(self.DT_Q12_horizontal_selection_lyt)
        spacerItem59 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.DT_Q12_horizontal_question_lyt.addItem(spacerItem59)
        self.DT_Q12_A2_Label = QtWidgets.QLabel(self.DT_main_widget_2)
        self.DT_Q12_A2_Label.setMinimumSize(QtCore.QSize(400, 50))
        self.DT_Q12_A2_Label.setMaximumSize(QtCore.QSize(800, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.DT_Q12_A2_Label.setFont(font)
        self.DT_Q12_A2_Label.setObjectName("DT_Q12_A2_Label")
        self.DT_Q12_horizontal_question_lyt.addWidget(self.DT_Q12_A2_Label)
        self.DT_main_widget_2_verticalLayout.addLayout(self.DT_Q12_horizontal_question_lyt)
        self.DT_Q13_horizontal_question_lyt = QtWidgets.QHBoxLayout()
        self.DT_Q13_horizontal_question_lyt.setObjectName("DT_Q13_horizontal_question_lyt")
        self.DT_Q13 = QtWidgets.QLabel(self.DT_main_widget_2)
        self.DT_Q13.setMinimumSize(QtCore.QSize(60, 60))
        self.DT_Q13.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.DT_Q13.setFont(font)
        self.DT_Q13.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.DT_Q13.setObjectName("DT_Q13")
        self.DT_Q13_horizontal_question_lyt.addWidget(self.DT_Q13)
        spacerItem60 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.DT_Q13_horizontal_question_lyt.addItem(spacerItem60)
        self.DT_Q13_A1_Label = QtWidgets.QLabel(self.DT_main_widget_2)
        self.DT_Q13_A1_Label.setMinimumSize(QtCore.QSize(475, 50))
        self.DT_Q13_A1_Label.setMaximumSize(QtCore.QSize(400, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.DT_Q13_A1_Label.setFont(font)
        self.DT_Q13_A1_Label.setObjectName("DT_Q13_A1_Label")
        self.DT_Q13_horizontal_question_lyt.addWidget(self.DT_Q13_A1_Label)
        spacerItem61 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.DT_Q13_horizontal_question_lyt.addItem(spacerItem61)
        self.DT_Q13_horizontal_selection_lyt = QtWidgets.QHBoxLayout()
        self.DT_Q13_horizontal_selection_lyt.setSizeConstraint(QtWidgets.QLayout.SetFixedSize)
        self.DT_Q13_horizontal_selection_lyt.setSpacing(20)
        self.DT_Q13_horizontal_selection_lyt.setObjectName("DT_Q13_horizontal_selection_lyt")
        self.DT_13_pushButton_1 = QtWidgets.QPushButton(self.DT_main_widget_2)
        self.DT_13_pushButton_1.setMinimumSize(QtCore.QSize(60, 55))
        self.DT_13_pushButton_1.setMaximumSize(QtCore.QSize(60, 55))
        self.DT_13_pushButton_1.setCheckable(True)
        self.DT_13_pushButton_1.setAutoExclusive(True)
        self.DT_13_pushButton_1.setObjectName("DT_13_pushButton_1")
        self.DT_Q13_horizontal_selection_lyt.addWidget(self.DT_13_pushButton_1)
        self.DT_13_pushButton_2 = QtWidgets.QPushButton(self.DT_main_widget_2)
        self.DT_13_pushButton_2.setMinimumSize(QtCore.QSize(60, 55))
        self.DT_13_pushButton_2.setMaximumSize(QtCore.QSize(60, 55))
        self.DT_13_pushButton_2.setCheckable(True)
        self.DT_13_pushButton_2.setAutoExclusive(True)
        self.DT_13_pushButton_2.setObjectName("DT_13_pushButton_2")
        self.DT_Q13_horizontal_selection_lyt.addWidget(self.DT_13_pushButton_2)
        self.DT_13_pushButton_3 = QtWidgets.QPushButton(self.DT_main_widget_2)
        self.DT_13_pushButton_3.setMinimumSize(QtCore.QSize(60, 55))
        self.DT_13_pushButton_3.setMaximumSize(QtCore.QSize(60, 55))
        self.DT_13_pushButton_3.setCheckable(True)
        self.DT_13_pushButton_3.setAutoExclusive(True)
        self.DT_13_pushButton_3.setObjectName("DT_13_pushButton_3")
        self.DT_Q13_horizontal_selection_lyt.addWidget(self.DT_13_pushButton_3)
        self.DT_13_pushButton_4 = QtWidgets.QPushButton(self.DT_main_widget_2)
        self.DT_13_pushButton_4.setMinimumSize(QtCore.QSize(60, 55))
        self.DT_13_pushButton_4.setMaximumSize(QtCore.QSize(60, 55))
        self.DT_13_pushButton_4.setCheckable(True)
        self.DT_13_pushButton_4.setAutoExclusive(True)
        self.DT_13_pushButton_4.setObjectName("DT_13_pushButton_4")
        self.DT_Q13_horizontal_selection_lyt.addWidget(self.DT_13_pushButton_4)
        self.DT_13_pushButton_5 = QtWidgets.QPushButton(self.DT_main_widget_2)
        self.DT_13_pushButton_5.setMinimumSize(QtCore.QSize(60, 55))
        self.DT_13_pushButton_5.setMaximumSize(QtCore.QSize(60, 55))
        self.DT_13_pushButton_5.setCheckable(True)
        self.DT_13_pushButton_5.setAutoExclusive(True)
        self.DT_13_pushButton_5.setObjectName("DT_13_pushButton_5")
        self.DT_Q13_horizontal_selection_lyt.addWidget(self.DT_13_pushButton_5)
        self.DT_Q13_horizontal_question_lyt.addLayout(self.DT_Q13_horizontal_selection_lyt)
        spacerItem62 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.DT_Q13_horizontal_question_lyt.addItem(spacerItem62)
        self.DT_Q13_A2_Label = QtWidgets.QLabel(self.DT_main_widget_2)
        self.DT_Q13_A2_Label.setMinimumSize(QtCore.QSize(400, 50))
        self.DT_Q13_A2_Label.setMaximumSize(QtCore.QSize(800, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.DT_Q13_A2_Label.setFont(font)
        self.DT_Q13_A2_Label.setObjectName("DT_Q13_A2_Label")
        self.DT_Q13_horizontal_question_lyt.addWidget(self.DT_Q13_A2_Label)
        self.DT_main_widget_2_verticalLayout.addLayout(self.DT_Q13_horizontal_question_lyt)
        self.DT_Q14_horizontal_question_lyt = QtWidgets.QHBoxLayout()
        self.DT_Q14_horizontal_question_lyt.setObjectName("DT_Q14_horizontal_question_lyt")
        self.DT_Q14 = QtWidgets.QLabel(self.DT_main_widget_2)
        self.DT_Q14.setMinimumSize(QtCore.QSize(60, 60))
        self.DT_Q14.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.DT_Q14.setFont(font)
        self.DT_Q14.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.DT_Q14.setObjectName("DT_Q14")
        self.DT_Q14_horizontal_question_lyt.addWidget(self.DT_Q14)
        spacerItem63 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.DT_Q14_horizontal_question_lyt.addItem(spacerItem63)
        self.DT_Q14_A1_gridLayout = QtWidgets.QGridLayout()
        self.DT_Q14_A1_gridLayout.setVerticalSpacing(0)
        self.DT_Q14_A1_gridLayout.setObjectName("DT_Q14_A1_gridLayout")
        self.DT_Q14_A1_Label = QtWidgets.QLabel(self.DT_main_widget_2)
        self.DT_Q14_A1_Label.setMinimumSize(QtCore.QSize(475, 40))
        self.DT_Q14_A1_Label.setMaximumSize(QtCore.QSize(475, 40))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.DT_Q14_A1_Label.setFont(font)
        self.DT_Q14_A1_Label.setObjectName("DT_Q14_A1_Label")
        self.DT_Q14_A1_gridLayout.addWidget(self.DT_Q14_A1_Label, 0, 0, 1, 1)
        self.DT_Q14_A1_Label_2 = QtWidgets.QLabel(self.DT_main_widget_2)
        self.DT_Q14_A1_Label_2.setMinimumSize(QtCore.QSize(475, 40))
        self.DT_Q14_A1_Label_2.setMaximumSize(QtCore.QSize(475, 40))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.DT_Q14_A1_Label_2.setFont(font)
        self.DT_Q14_A1_Label_2.setObjectName("DT_Q14_A1_Label_2")
        self.DT_Q14_A1_gridLayout.addWidget(self.DT_Q14_A1_Label_2, 1, 0, 1, 1)
        self.DT_Q14_horizontal_question_lyt.addLayout(self.DT_Q14_A1_gridLayout)
        spacerItem64 = QtWidgets.QSpacerItem(20, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.DT_Q14_horizontal_question_lyt.addItem(spacerItem64)
        self.DT_Q14_horizontal_selection_lyt = QtWidgets.QHBoxLayout()
        self.DT_Q14_horizontal_selection_lyt.setSizeConstraint(QtWidgets.QLayout.SetFixedSize)
        self.DT_Q14_horizontal_selection_lyt.setSpacing(20)
        self.DT_Q14_horizontal_selection_lyt.setObjectName("DT_Q14_horizontal_selection_lyt")
        self.DT_14_pushButton_1 = QtWidgets.QPushButton(self.DT_main_widget_2)
        self.DT_14_pushButton_1.setMinimumSize(QtCore.QSize(60, 55))
        self.DT_14_pushButton_1.setMaximumSize(QtCore.QSize(60, 55))
        self.DT_14_pushButton_1.setCheckable(True)
        self.DT_14_pushButton_1.setAutoExclusive(True)
        self.DT_14_pushButton_1.setObjectName("DT_14_pushButton_1")
        self.DT_Q14_horizontal_selection_lyt.addWidget(self.DT_14_pushButton_1)
        self.DT_14_pushButton_2 = QtWidgets.QPushButton(self.DT_main_widget_2)
        self.DT_14_pushButton_2.setMinimumSize(QtCore.QSize(60, 55))
        self.DT_14_pushButton_2.setMaximumSize(QtCore.QSize(60, 55))
        self.DT_14_pushButton_2.setCheckable(True)
        self.DT_14_pushButton_2.setAutoExclusive(True)
        self.DT_14_pushButton_2.setObjectName("DT_14_pushButton_2")
        self.DT_Q14_horizontal_selection_lyt.addWidget(self.DT_14_pushButton_2)
        self.DT_14_pushButton_3 = QtWidgets.QPushButton(self.DT_main_widget_2)
        self.DT_14_pushButton_3.setMinimumSize(QtCore.QSize(60, 55))
        self.DT_14_pushButton_3.setMaximumSize(QtCore.QSize(60, 55))
        self.DT_14_pushButton_3.setCheckable(True)
        self.DT_14_pushButton_3.setAutoExclusive(True)
        self.DT_14_pushButton_3.setObjectName("DT_14_pushButton_3")
        self.DT_Q14_horizontal_selection_lyt.addWidget(self.DT_14_pushButton_3)
        self.DT_14_pushButton_4 = QtWidgets.QPushButton(self.DT_main_widget_2)
        self.DT_14_pushButton_4.setMinimumSize(QtCore.QSize(60, 55))
        self.DT_14_pushButton_4.setMaximumSize(QtCore.QSize(60, 55))
        self.DT_14_pushButton_4.setCheckable(True)
        self.DT_14_pushButton_4.setAutoExclusive(True)
        self.DT_14_pushButton_4.setObjectName("DT_14_pushButton_4")
        self.DT_Q14_horizontal_selection_lyt.addWidget(self.DT_14_pushButton_4)
        self.DT_14_pushButton_5 = QtWidgets.QPushButton(self.DT_main_widget_2)
        self.DT_14_pushButton_5.setMinimumSize(QtCore.QSize(60, 55))
        self.DT_14_pushButton_5.setMaximumSize(QtCore.QSize(60, 55))
        self.DT_14_pushButton_5.setCheckable(True)
        self.DT_14_pushButton_5.setAutoExclusive(True)
        self.DT_14_pushButton_5.setObjectName("DT_14_pushButton_5")
        self.DT_Q14_horizontal_selection_lyt.addWidget(self.DT_14_pushButton_5)
        self.DT_Q14_horizontal_question_lyt.addLayout(self.DT_Q14_horizontal_selection_lyt)
        spacerItem65 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.DT_Q14_horizontal_question_lyt.addItem(spacerItem65)
        self.DT_Q14_A2_gridLayout = QtWidgets.QGridLayout()
        self.DT_Q14_A2_gridLayout.setObjectName("DT_Q14_A2_gridLayout")
        self.DT_Q14_A2_Label = QtWidgets.QLabel(self.DT_main_widget_2)
        self.DT_Q14_A2_Label.setMinimumSize(QtCore.QSize(475, 40))
        self.DT_Q14_A2_Label.setMaximumSize(QtCore.QSize(475, 40))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.DT_Q14_A2_Label.setFont(font)
        self.DT_Q14_A2_Label.setObjectName("DT_Q14_A2_Label")
        self.DT_Q14_A2_gridLayout.addWidget(self.DT_Q14_A2_Label, 0, 0, 1, 1)
        self.DT_Q14_A2_Label_2 = QtWidgets.QLabel(self.DT_main_widget_2)
        self.DT_Q14_A2_Label_2.setMinimumSize(QtCore.QSize(475, 40))
        self.DT_Q14_A2_Label_2.setMaximumSize(QtCore.QSize(475, 40))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.DT_Q14_A2_Label_2.setFont(font)
        self.DT_Q14_A2_Label_2.setObjectName("DT_Q14_A2_Label_2")
        self.DT_Q14_A2_gridLayout.addWidget(self.DT_Q14_A2_Label_2, 1, 0, 1, 1)
        self.DT_Q14_horizontal_question_lyt.addLayout(self.DT_Q14_A2_gridLayout)
        self.DT_main_widget_2_verticalLayout.addLayout(self.DT_Q14_horizontal_question_lyt)
        self.DT_Q15_horizontal_question_lyt = QtWidgets.QHBoxLayout()
        self.DT_Q15_horizontal_question_lyt.setObjectName("DT_Q15_horizontal_question_lyt")
        self.DT_Q15 = QtWidgets.QLabel(self.DT_main_widget_2)
        self.DT_Q15.setMinimumSize(QtCore.QSize(60, 60))
        self.DT_Q15.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.DT_Q15.setFont(font)
        self.DT_Q15.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.DT_Q15.setObjectName("DT_Q15")
        self.DT_Q15_horizontal_question_lyt.addWidget(self.DT_Q15)
        spacerItem66 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.DT_Q15_horizontal_question_lyt.addItem(spacerItem66)
        self.DT_Q15_A1_gridLayout = QtWidgets.QGridLayout()
        self.DT_Q15_A1_gridLayout.setVerticalSpacing(0)
        self.DT_Q15_A1_gridLayout.setObjectName("DT_Q15_A1_gridLayout")
        self.DT_Q15_A1_Label = QtWidgets.QLabel(self.DT_main_widget_2)
        self.DT_Q15_A1_Label.setMinimumSize(QtCore.QSize(475, 40))
        self.DT_Q15_A1_Label.setMaximumSize(QtCore.QSize(475, 40))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.DT_Q15_A1_Label.setFont(font)
        self.DT_Q15_A1_Label.setObjectName("DT_Q15_A1_Label")
        self.DT_Q15_A1_gridLayout.addWidget(self.DT_Q15_A1_Label, 0, 0, 1, 1)
        self.DT_Q15_A1_Label_2 = QtWidgets.QLabel(self.DT_main_widget_2)
        self.DT_Q15_A1_Label_2.setMinimumSize(QtCore.QSize(475, 40))
        self.DT_Q15_A1_Label_2.setMaximumSize(QtCore.QSize(475, 40))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.DT_Q15_A1_Label_2.setFont(font)
        self.DT_Q15_A1_Label_2.setObjectName("DT_Q15_A1_Label_2")
        self.DT_Q15_A1_gridLayout.addWidget(self.DT_Q15_A1_Label_2, 1, 0, 1, 1)
        self.DT_Q15_horizontal_question_lyt.addLayout(self.DT_Q15_A1_gridLayout)
        spacerItem67 = QtWidgets.QSpacerItem(20, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.DT_Q15_horizontal_question_lyt.addItem(spacerItem67)
        self.DT_Q15_horizontal_selection_lyt = QtWidgets.QHBoxLayout()
        self.DT_Q15_horizontal_selection_lyt.setSizeConstraint(QtWidgets.QLayout.SetFixedSize)
        self.DT_Q15_horizontal_selection_lyt.setSpacing(20)
        self.DT_Q15_horizontal_selection_lyt.setObjectName("DT_Q15_horizontal_selection_lyt")
        self.DT_15_pushButton_1 = QtWidgets.QPushButton(self.DT_main_widget_2)
        self.DT_15_pushButton_1.setMinimumSize(QtCore.QSize(60, 55))
        self.DT_15_pushButton_1.setMaximumSize(QtCore.QSize(60, 55))
        self.DT_15_pushButton_1.setCheckable(True)
        self.DT_15_pushButton_1.setAutoExclusive(True)
        self.DT_15_pushButton_1.setObjectName("DT_15_pushButton_1")
        self.DT_Q15_horizontal_selection_lyt.addWidget(self.DT_15_pushButton_1)
        self.DT_15_pushButton_2 = QtWidgets.QPushButton(self.DT_main_widget_2)
        self.DT_15_pushButton_2.setMinimumSize(QtCore.QSize(60, 55))
        self.DT_15_pushButton_2.setMaximumSize(QtCore.QSize(60, 55))
        self.DT_15_pushButton_2.setCheckable(True)
        self.DT_15_pushButton_2.setAutoExclusive(True)
        self.DT_15_pushButton_2.setObjectName("DT_15_pushButton_2")
        self.DT_Q15_horizontal_selection_lyt.addWidget(self.DT_15_pushButton_2)
        self.DT_15_pushButton_3 = QtWidgets.QPushButton(self.DT_main_widget_2)
        self.DT_15_pushButton_3.setMinimumSize(QtCore.QSize(60, 55))
        self.DT_15_pushButton_3.setMaximumSize(QtCore.QSize(60, 55))
        self.DT_15_pushButton_3.setCheckable(True)
        self.DT_15_pushButton_3.setAutoExclusive(True)
        self.DT_15_pushButton_3.setObjectName("DT_15_pushButton_3")
        self.DT_Q15_horizontal_selection_lyt.addWidget(self.DT_15_pushButton_3)
        self.DT_15_pushButton_4 = QtWidgets.QPushButton(self.DT_main_widget_2)
        self.DT_15_pushButton_4.setMinimumSize(QtCore.QSize(60, 55))
        self.DT_15_pushButton_4.setMaximumSize(QtCore.QSize(60, 55))
        self.DT_15_pushButton_4.setCheckable(True)
        self.DT_15_pushButton_4.setAutoExclusive(True)
        self.DT_15_pushButton_4.setObjectName("DT_15_pushButton_4")
        self.DT_Q15_horizontal_selection_lyt.addWidget(self.DT_15_pushButton_4)
        self.DT_15_pushButton_5 = QtWidgets.QPushButton(self.DT_main_widget_2)
        self.DT_15_pushButton_5.setMinimumSize(QtCore.QSize(60, 55))
        self.DT_15_pushButton_5.setMaximumSize(QtCore.QSize(60, 55))
        self.DT_15_pushButton_5.setCheckable(True)
        self.DT_15_pushButton_5.setAutoExclusive(True)
        self.DT_15_pushButton_5.setObjectName("DT_15_pushButton_5")
        self.DT_Q15_horizontal_selection_lyt.addWidget(self.DT_15_pushButton_5)
        self.DT_Q15_horizontal_question_lyt.addLayout(self.DT_Q15_horizontal_selection_lyt)
        spacerItem68 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.DT_Q15_horizontal_question_lyt.addItem(spacerItem68)
        self.DT_Q15_A2_gridLayout = QtWidgets.QGridLayout()
        self.DT_Q15_A2_gridLayout.setObjectName("DT_Q15_A2_gridLayout")
        self.DT_Q15_A2_Label = QtWidgets.QLabel(self.DT_main_widget_2)
        self.DT_Q15_A2_Label.setMinimumSize(QtCore.QSize(475, 40))
        self.DT_Q15_A2_Label.setMaximumSize(QtCore.QSize(475, 40))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.DT_Q15_A2_Label.setFont(font)
        self.DT_Q15_A2_Label.setObjectName("DT_Q15_A2_Label")
        self.DT_Q15_A2_gridLayout.addWidget(self.DT_Q15_A2_Label, 0, 0, 1, 1)
        self.DT_Q15_A2_Label_2 = QtWidgets.QLabel(self.DT_main_widget_2)
        self.DT_Q15_A2_Label_2.setMinimumSize(QtCore.QSize(475, 40))
        self.DT_Q15_A2_Label_2.setMaximumSize(QtCore.QSize(475, 40))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.DT_Q15_A2_Label_2.setFont(font)
        self.DT_Q15_A2_Label_2.setObjectName("DT_Q15_A2_Label_2")
        self.DT_Q15_A2_gridLayout.addWidget(self.DT_Q15_A2_Label_2, 1, 0, 1, 1)
        self.DT_Q15_horizontal_question_lyt.addLayout(self.DT_Q15_A2_gridLayout)
        self.DT_main_widget_2_verticalLayout.addLayout(self.DT_Q15_horizontal_question_lyt)
        self.depression_savebutton = QtWidgets.QCheckBox(self.DT_main_widget_2)
        self.depression_savebutton.setMinimumSize(QtCore.QSize(1168, 50))
        self.depression_savebutton.setMaximumSize(QtCore.QSize(1168, 50))
        self.depression_savebutton.setText("")
        self.depression_savebutton.setObjectName("depression_savebutton")
        self.DT_main_widget_2_verticalLayout.addWidget(self.depression_savebutton)
        self.DT_page_2_verticalLayout.addWidget(self.DT_main_widget_2)
        self.Depression_Page_tabWidget.addTab(self.DT_page_2, "")
        self.Depression_Page_gridLayout.addWidget(self.Depression_Page_tabWidget, 0, 0, 1, 1)
        self.stackedWidget.addWidget(self.Depression_Page)

        
        self.Stress_Page = QtWidgets.QWidget()
        self.Stress_Page.setObjectName("Stress_Page")
        self.Stress_Page_gridLayout = QtWidgets.QGridLayout(self.Stress_Page)
        self.Stress_Page_gridLayout.setObjectName("Stress_Page_gridLayout")
        self.Stress_tabWidget = QtWidgets.QTabWidget(self.Stress_Page)
        font = QtGui.QFont()
        font.setFamily("Roboto Cn")
        font.setPointSize(11)
        self.Stress_tabWidget.setFont(font)
        self.Stress_tabWidget.setStyleSheet("QTabWidget::pane {\n"
"    /* The tab widget frame */\n"
"    border-top: 2px solid rgb(31, 149, 239);\n"
"    border-radius: 5px; /* Rounded corners for the pane */\n"
"}\n"
"\n"
"QTabWidget::tab-bar {\n"
"    /* The tab bar */\n"
"    left: 5px; /* Move the bar to the right */\n"
"}\n"
"\n"
"QTabBar::tab {\n"
"    /* The tab */\n"
"    background-color: rgb(31, 149, 239);\n"
"    color: white;\n"
"    padding: 5px;\n"
"    border: none;\n"
"    min-width: 80px; /* Set the minimum width of the tab */\n"
"    min-height: 30px; /* Set the minimum height of the tab */\n"
"    margin-right: 2px; /* Space between tabs */\n"
"    border-top-left-radius: 5px; /* Rounded top-left corner */\n"
"    border-top-right-radius: 5px; /* Rounded top-right corner */\n"
"}\n"
"\n"
"QTabBar::tab:selected {\n"
"    /* The selected tab */\n"
"    background-color: rgb(45, 45, 45);\n"
"    border-top-left-radius: 5px; /* Maintain rounded corner when selected */\n"
"    border-top-right-radius: 5px; /* Maintain rounded corner when selected */\n"
"}\n"
"\n"
"QTabBar::tab:hover {\n"
"    /* The tab when hovered over */\n"
"    background-color: rgb(51, 169, 259);\n"
"}\n"
"")
        self.Stress_tabWidget.setObjectName("Stress_tabWidget")
        self.ST_Tab = QtWidgets.QWidget()
        self.ST_Tab.setStyleSheet("QLabel {\n"
"\n"
" \n"
"   \n"
"    \n"
"}\n"
"")
        self.ST_Tab.setObjectName("ST_Tab")
        self.ST_Tab_gridLayout = QtWidgets.QGridLayout(self.ST_Tab)
        self.ST_Tab_gridLayout.setContentsMargins(-1, -1, 0, -1)
        self.ST_Tab_gridLayout.setObjectName("ST_Tab_gridLayout")
        self.ST_widget = QtWidgets.QWidget(self.ST_Tab)
        self.ST_widget.setStyleSheet("QPushButton {\n"
"    color: white;\n"
"    text-align:center;\n"
"    height:70px;\n"
"    border: 1px;\n"
"  \n"
"    border-radius: 8px; /* Round top left corner */\n"
"    \n"
"    background-color: rgb(31, 149, 239); /* Normal background color */\n"
"    font-size: 35px; /* Set the font size here */\n"
"    /* Other styles */\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: rgb(45, 45, 45); /* Darker background color on hover */\n"
"    color: rgb(220, 220, 220); /* Slightly lighter text color on hover */\n"
"}\n"
"\n"
"QPushButton:checked {\n"
" \n"
"     background-color: rgb(45, 45, 45); /* Darker background color on checked */\n"
"}\n"
"\n"
"#stress_instructions {\n"
"    font-family: \'Roboto \';\n"
"    font-size: 20px;\n"
"    font-weight: bold;\n"
"    color: rgb(24, 45, 83 ); /* Set the font color to white */\n"
"    background-color: transparent; /* Make the background transparent */\n"
"}\n"
"")
        self.ST_widget.setObjectName("ST_widget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.ST_widget)
        self.verticalLayout.setObjectName("verticalLayout")
        self.instructions = QtWidgets.QHBoxLayout()
        self.instructions.setObjectName("instructions")

        self.stress_instructions = QtWidgets.QLabel(self.ST_widget)
        self.stress_instructions.setMinimumSize(QtCore.QSize(340, 50))
        self.stress_instructions.setMaximumSize(QtCore.QSize(340, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto ")
        font.setPointSize(-1)
        font.setBold(True)
        font.setWeight(75)
        self.stress_instructions.setFont(font)
        self.stress_instructions.setObjectName("stress_instructions")
        self.instructions.addWidget(self.stress_instructions)
        spacerItem69 = QtWidgets.QSpacerItem(600, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.instructions.addItem(spacerItem69)


        self.ST_instruction_lyt = QtWidgets.QHBoxLayout()
        self.ST_instruction_lyt.setSizeConstraint(QtWidgets.QLayout.SetFixedSize)
        self.ST_instruction_lyt.setSpacing(0)
        self.ST_instruction_lyt.setObjectName("ST_instruction_lyt")
        spacerItem70 = QtWidgets.QSpacerItem(35, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.ST_instruction_lyt.addItem(spacerItem70)
        self.Never_Label = QtWidgets.QLabel(self.ST_widget)
        self.Never_Label.setMinimumSize(QtCore.QSize(40, 30))
        self.Never_Label.setMaximumSize(QtCore.QSize(40, 30))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(8)
        font.setBold(False)
        font.setWeight(50)
        self.Never_Label.setFont(font)
        self.Never_Label.setObjectName("Never_Label")
        self.ST_instruction_lyt.addWidget(self.Never_Label)
        spacerItem71 = QtWidgets.QSpacerItem(15, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.ST_instruction_lyt.addItem(spacerItem71)
        self.AlmostNever_label = QtWidgets.QLabel(self.ST_widget)
        self.AlmostNever_label.setMinimumSize(QtCore.QSize(80, 30))
        self.AlmostNever_label.setMaximumSize(QtCore.QSize(80, 30))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(8)
        font.setBold(False)
        font.setWeight(50)
        self.AlmostNever_label.setFont(font)
        self.AlmostNever_label.setObjectName("AlmostNever_label")
        self.ST_instruction_lyt.addWidget(self.AlmostNever_label)
        spacerItem72 = QtWidgets.QSpacerItem(10, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.ST_instruction_lyt.addItem(spacerItem72)
        self.Someyimes_label = QtWidgets.QLabel(self.ST_widget)
        self.Someyimes_label.setMinimumSize(QtCore.QSize(70, 30))
        self.Someyimes_label.setMaximumSize(QtCore.QSize(70, 30))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(8)
        font.setBold(False)
        font.setWeight(50)
        self.Someyimes_label.setFont(font)
        self.Someyimes_label.setObjectName("Someyimes_label")
        self.ST_instruction_lyt.addWidget(self.Someyimes_label)
        spacerItem73 = QtWidgets.QSpacerItem(2, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.ST_instruction_lyt.addItem(spacerItem73)
        self.FairlyOften_label = QtWidgets.QLabel(self.ST_widget)
        self.FairlyOften_label.setMinimumSize(QtCore.QSize(80, 30))
        self.FairlyOften_label.setMaximumSize(QtCore.QSize(80, 30))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(8)
        font.setBold(False)
        font.setWeight(50)
        self.FairlyOften_label.setFont(font)
        self.FairlyOften_label.setObjectName("FairlyOften_label")
        self.ST_instruction_lyt.addWidget(self.FairlyOften_label)
        spacerItem74 = QtWidgets.QSpacerItem(2, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.ST_instruction_lyt.addItem(spacerItem74)
        self.VeryOften_label = QtWidgets.QLabel(self.ST_widget)
        self.VeryOften_label.setMinimumSize(QtCore.QSize(70, 30))
        self.VeryOften_label.setMaximumSize(QtCore.QSize(70, 30))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(8)
        font.setBold(False)
        font.setWeight(50)
        self.VeryOften_label.setFont(font)
        self.VeryOften_label.setObjectName("VeryOften_label")
        self.ST_instruction_lyt.addWidget(self.VeryOften_label)
        spacerItem75 = QtWidgets.QSpacerItem(2, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.ST_instruction_lyt.addItem(spacerItem75)
        self.instructions.addLayout(self.ST_instruction_lyt)
        self.verticalLayout.addLayout(self.instructions)
        self.ST_Q1_horizontal_question_lyt = QtWidgets.QHBoxLayout()
        self.ST_Q1_horizontal_question_lyt.setObjectName("ST_Q1_horizontal_question_lyt")
        self.ST_Q1 = QtWidgets.QLabel(self.ST_widget)
        self.ST_Q1.setMinimumSize(QtCore.QSize(60, 60))
        self.ST_Q1.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.ST_Q1.setFont(font)
        self.ST_Q1.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.ST_Q1.setObjectName("ST_Q1")
        self.ST_Q1_horizontal_question_lyt.addWidget(self.ST_Q1)
        spacerItem76 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.ST_Q1_horizontal_question_lyt.addItem(spacerItem76)
        self.ST_Q1_Label = QtWidgets.QLabel(self.ST_widget)
        self.ST_Q1_Label.setMinimumSize(QtCore.QSize(825, 50))
        self.ST_Q1_Label.setMaximumSize(QtCore.QSize(825, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.ST_Q1_Label.setFont(font)
        self.ST_Q1_Label.setObjectName("ST_Q1_Label")
        self.ST_Q1_horizontal_question_lyt.addWidget(self.ST_Q1_Label)
        spacerItem77 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.ST_Q1_horizontal_question_lyt.addItem(spacerItem77)
        self.ST_Q1_horizontal_selection_lyt = QtWidgets.QHBoxLayout()
        self.ST_Q1_horizontal_selection_lyt.setSizeConstraint(QtWidgets.QLayout.SetFixedSize)
        self.ST_Q1_horizontal_selection_lyt.setSpacing(20)
        self.ST_Q1_horizontal_selection_lyt.setObjectName("ST_Q1_horizontal_selection_lyt")
        self.ST_1_pushButton_1 = QtWidgets.QPushButton(self.ST_widget)
        self.ST_1_pushButton_1.setMinimumSize(QtCore.QSize(60, 55))
        self.ST_1_pushButton_1.setMaximumSize(QtCore.QSize(60, 55))
        self.ST_1_pushButton_1.setCheckable(True)
        self.ST_1_pushButton_1.setAutoExclusive(True)
        self.ST_1_pushButton_1.setObjectName("ST_1_pushButton_1")
        self.ST_Q1_horizontal_selection_lyt.addWidget(self.ST_1_pushButton_1)
        self.ST_1_pushButton_2 = QtWidgets.QPushButton(self.ST_widget)
        self.ST_1_pushButton_2.setMinimumSize(QtCore.QSize(60, 55))
        self.ST_1_pushButton_2.setMaximumSize(QtCore.QSize(60, 55))
        self.ST_1_pushButton_2.setCheckable(True)
        self.ST_1_pushButton_2.setAutoExclusive(True)
        self.ST_1_pushButton_2.setObjectName("ST_1_pushButton_2")
        self.ST_Q1_horizontal_selection_lyt.addWidget(self.ST_1_pushButton_2)
        self.ST_1_pushButton_3 = QtWidgets.QPushButton(self.ST_widget)
        self.ST_1_pushButton_3.setMinimumSize(QtCore.QSize(60, 55))
        self.ST_1_pushButton_3.setMaximumSize(QtCore.QSize(60, 55))
        self.ST_1_pushButton_3.setCheckable(True)
        self.ST_1_pushButton_3.setAutoExclusive(True)
        self.ST_1_pushButton_3.setObjectName("ST_1_pushButton_3")
        self.ST_Q1_horizontal_selection_lyt.addWidget(self.ST_1_pushButton_3)
        self.ST_1_pushButton_4 = QtWidgets.QPushButton(self.ST_widget)
        self.ST_1_pushButton_4.setMinimumSize(QtCore.QSize(60, 55))
        self.ST_1_pushButton_4.setMaximumSize(QtCore.QSize(60, 55))
        self.ST_1_pushButton_4.setCheckable(True)
        self.ST_1_pushButton_4.setAutoExclusive(True)
        self.ST_1_pushButton_4.setObjectName("ST_1_pushButton_4")
        self.ST_Q1_horizontal_selection_lyt.addWidget(self.ST_1_pushButton_4)
        self.ST_1_pushButton_5 = QtWidgets.QPushButton(self.ST_widget)
        self.ST_1_pushButton_5.setMinimumSize(QtCore.QSize(60, 55))
        self.ST_1_pushButton_5.setMaximumSize(QtCore.QSize(60, 55))
        self.ST_1_pushButton_5.setCheckable(True)
        self.ST_1_pushButton_5.setAutoExclusive(True)
        self.ST_1_pushButton_5.setObjectName("ST_1_pushButton_5")
        self.ST_Q1_horizontal_selection_lyt.addWidget(self.ST_1_pushButton_5)
        self.ST_Q1_horizontal_question_lyt.addLayout(self.ST_Q1_horizontal_selection_lyt)
        self.verticalLayout.addLayout(self.ST_Q1_horizontal_question_lyt)
        self.ST_Q2_horizontal_question_lyt = QtWidgets.QHBoxLayout()
        self.ST_Q2_horizontal_question_lyt.setObjectName("ST_Q2_horizontal_question_lyt")
        self.ST_Q2 = QtWidgets.QLabel(self.ST_widget)
        self.ST_Q2.setMinimumSize(QtCore.QSize(60, 60))
        self.ST_Q2.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.ST_Q2.setFont(font)
        self.ST_Q2.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.ST_Q2.setObjectName("ST_Q2")
        self.ST_Q2_horizontal_question_lyt.addWidget(self.ST_Q2)
        spacerItem78 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.ST_Q2_horizontal_question_lyt.addItem(spacerItem78)
        self.ST_Q2_Label = QtWidgets.QLabel(self.ST_widget)
        self.ST_Q2_Label.setMinimumSize(QtCore.QSize(825, 50))
        self.ST_Q2_Label.setMaximumSize(QtCore.QSize(825, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.ST_Q2_Label.setFont(font)
        self.ST_Q2_Label.setObjectName("ST_Q2_Label")
        self.ST_Q2_horizontal_question_lyt.addWidget(self.ST_Q2_Label)
        spacerItem79 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.ST_Q2_horizontal_question_lyt.addItem(spacerItem79)
        self.ST_Q2_horizontal_selection_lyt = QtWidgets.QHBoxLayout()
        self.ST_Q2_horizontal_selection_lyt.setSizeConstraint(QtWidgets.QLayout.SetFixedSize)
        self.ST_Q2_horizontal_selection_lyt.setSpacing(20)
        self.ST_Q2_horizontal_selection_lyt.setObjectName("ST_Q2_horizontal_selection_lyt")
        self.ST_2_pushButton_1 = QtWidgets.QPushButton(self.ST_widget)
        self.ST_2_pushButton_1.setMinimumSize(QtCore.QSize(60, 55))
        self.ST_2_pushButton_1.setMaximumSize(QtCore.QSize(60, 55))
        self.ST_2_pushButton_1.setCheckable(True)
        self.ST_2_pushButton_1.setAutoExclusive(True)
        self.ST_2_pushButton_1.setObjectName("ST_2_pushButton_1")
        self.ST_Q2_horizontal_selection_lyt.addWidget(self.ST_2_pushButton_1)
        self.ST_2_pushButton_2 = QtWidgets.QPushButton(self.ST_widget)
        self.ST_2_pushButton_2.setMinimumSize(QtCore.QSize(60, 55))
        self.ST_2_pushButton_2.setMaximumSize(QtCore.QSize(60, 55))
        self.ST_2_pushButton_2.setCheckable(True)
        self.ST_2_pushButton_2.setAutoExclusive(True)
        self.ST_2_pushButton_2.setObjectName("ST_2_pushButton_2")
        self.ST_Q2_horizontal_selection_lyt.addWidget(self.ST_2_pushButton_2)
        self.ST_2_pushButton_3 = QtWidgets.QPushButton(self.ST_widget)
        self.ST_2_pushButton_3.setMinimumSize(QtCore.QSize(60, 55))
        self.ST_2_pushButton_3.setMaximumSize(QtCore.QSize(60, 55))
        self.ST_2_pushButton_3.setCheckable(True)
        self.ST_2_pushButton_3.setAutoExclusive(True)
        self.ST_2_pushButton_3.setObjectName("ST_2_pushButton_3")
        self.ST_Q2_horizontal_selection_lyt.addWidget(self.ST_2_pushButton_3)
        self.ST_2_pushButton_4 = QtWidgets.QPushButton(self.ST_widget)
        self.ST_2_pushButton_4.setMinimumSize(QtCore.QSize(60, 55))
        self.ST_2_pushButton_4.setMaximumSize(QtCore.QSize(60, 55))
        self.ST_2_pushButton_4.setCheckable(True)
        self.ST_2_pushButton_4.setAutoExclusive(True)
        self.ST_2_pushButton_4.setObjectName("ST_2_pushButton_4")
        self.ST_Q2_horizontal_selection_lyt.addWidget(self.ST_2_pushButton_4)
        self.ST_2_pushButton_5 = QtWidgets.QPushButton(self.ST_widget)
        self.ST_2_pushButton_5.setMinimumSize(QtCore.QSize(60, 55))
        self.ST_2_pushButton_5.setMaximumSize(QtCore.QSize(60, 55))
        self.ST_2_pushButton_5.setCheckable(True)
        self.ST_2_pushButton_5.setAutoExclusive(True)
        self.ST_2_pushButton_5.setObjectName("ST_2_pushButton_5")
        self.ST_Q2_horizontal_selection_lyt.addWidget(self.ST_2_pushButton_5)
        self.ST_Q2_horizontal_question_lyt.addLayout(self.ST_Q2_horizontal_selection_lyt)
        self.verticalLayout.addLayout(self.ST_Q2_horizontal_question_lyt)
        self.ST_Q3_horizontal_question_lyt = QtWidgets.QHBoxLayout()
        self.ST_Q3_horizontal_question_lyt.setObjectName("ST_Q3_horizontal_question_lyt")
        self.ST_Q3 = QtWidgets.QLabel(self.ST_widget)
        self.ST_Q3.setMinimumSize(QtCore.QSize(60, 60))
        self.ST_Q3.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.ST_Q3.setFont(font)
        self.ST_Q3.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.ST_Q3.setObjectName("ST_Q3")
        self.ST_Q3_horizontal_question_lyt.addWidget(self.ST_Q3)
        spacerItem80 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.ST_Q3_horizontal_question_lyt.addItem(spacerItem80)
        self.ST_Q3_Label = QtWidgets.QLabel(self.ST_widget)
        self.ST_Q3_Label.setMinimumSize(QtCore.QSize(825, 50))
        self.ST_Q3_Label.setMaximumSize(QtCore.QSize(825, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.ST_Q3_Label.setFont(font)
        self.ST_Q3_Label.setObjectName("ST_Q3_Label")
        self.ST_Q3_horizontal_question_lyt.addWidget(self.ST_Q3_Label)
        spacerItem81 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.ST_Q3_horizontal_question_lyt.addItem(spacerItem81)
        self.ST_Q3_horizontal_selection_lyt = QtWidgets.QHBoxLayout()
        self.ST_Q3_horizontal_selection_lyt.setSizeConstraint(QtWidgets.QLayout.SetFixedSize)
        self.ST_Q3_horizontal_selection_lyt.setSpacing(20)
        self.ST_Q3_horizontal_selection_lyt.setObjectName("ST_Q3_horizontal_selection_lyt")
        self.ST_3_pushButton_1 = QtWidgets.QPushButton(self.ST_widget)
        self.ST_3_pushButton_1.setMinimumSize(QtCore.QSize(60, 55))
        self.ST_3_pushButton_1.setMaximumSize(QtCore.QSize(60, 55))
        self.ST_3_pushButton_1.setCheckable(True)
        self.ST_3_pushButton_1.setAutoExclusive(True)
        self.ST_3_pushButton_1.setObjectName("ST_3_pushButton_1")
        self.ST_Q3_horizontal_selection_lyt.addWidget(self.ST_3_pushButton_1)
        self.ST_3_pushButton_2 = QtWidgets.QPushButton(self.ST_widget)
        self.ST_3_pushButton_2.setMinimumSize(QtCore.QSize(60, 55))
        self.ST_3_pushButton_2.setMaximumSize(QtCore.QSize(60, 55))
        self.ST_3_pushButton_2.setCheckable(True)
        self.ST_3_pushButton_2.setAutoExclusive(True)
        self.ST_3_pushButton_2.setObjectName("ST_3_pushButton_2")
        self.ST_Q3_horizontal_selection_lyt.addWidget(self.ST_3_pushButton_2)
        self.ST_3_pushButton_3 = QtWidgets.QPushButton(self.ST_widget)
        self.ST_3_pushButton_3.setMinimumSize(QtCore.QSize(60, 55))
        self.ST_3_pushButton_3.setMaximumSize(QtCore.QSize(60, 55))
        self.ST_3_pushButton_3.setCheckable(True)
        self.ST_3_pushButton_3.setAutoExclusive(True)
        self.ST_3_pushButton_3.setObjectName("ST_3_pushButton_3")
        self.ST_Q3_horizontal_selection_lyt.addWidget(self.ST_3_pushButton_3)
        self.ST_3_pushButton_4 = QtWidgets.QPushButton(self.ST_widget)
        self.ST_3_pushButton_4.setMinimumSize(QtCore.QSize(60, 55))
        self.ST_3_pushButton_4.setMaximumSize(QtCore.QSize(60, 55))
        self.ST_3_pushButton_4.setCheckable(True)
        self.ST_3_pushButton_4.setAutoExclusive(True)
        self.ST_3_pushButton_4.setObjectName("ST_3_pushButton_4")
        self.ST_Q3_horizontal_selection_lyt.addWidget(self.ST_3_pushButton_4)
        self.ST_3_pushButton_5 = QtWidgets.QPushButton(self.ST_widget)
        self.ST_3_pushButton_5.setMinimumSize(QtCore.QSize(60, 55))
        self.ST_3_pushButton_5.setMaximumSize(QtCore.QSize(60, 55))
        self.ST_3_pushButton_5.setCheckable(True)
        self.ST_3_pushButton_5.setAutoExclusive(True)
        self.ST_3_pushButton_5.setObjectName("ST_3_pushButton_5")
        self.ST_Q3_horizontal_selection_lyt.addWidget(self.ST_3_pushButton_5)
        self.ST_Q3_horizontal_question_lyt.addLayout(self.ST_Q3_horizontal_selection_lyt)
        self.verticalLayout.addLayout(self.ST_Q3_horizontal_question_lyt)
        self.ST_Q4_horizontal_question_lyt = QtWidgets.QHBoxLayout()
        self.ST_Q4_horizontal_question_lyt.setObjectName("ST_Q4_horizontal_question_lyt")
        self.ST_Q4 = QtWidgets.QLabel(self.ST_widget)
        self.ST_Q4.setMinimumSize(QtCore.QSize(60, 60))
        self.ST_Q4.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.ST_Q4.setFont(font)
        self.ST_Q4.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.ST_Q4.setObjectName("ST_Q4")
        self.ST_Q4_horizontal_question_lyt.addWidget(self.ST_Q4)
        spacerItem82 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.ST_Q4_horizontal_question_lyt.addItem(spacerItem82)
        self.ST_Q4_Label = QtWidgets.QLabel(self.ST_widget)
        self.ST_Q4_Label.setMinimumSize(QtCore.QSize(825, 50))
        self.ST_Q4_Label.setMaximumSize(QtCore.QSize(825, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.ST_Q4_Label.setFont(font)
        self.ST_Q4_Label.setObjectName("ST_Q4_Label")
        self.ST_Q4_horizontal_question_lyt.addWidget(self.ST_Q4_Label)
        spacerItem83 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.ST_Q4_horizontal_question_lyt.addItem(spacerItem83)
        self.ST_Q4_horizontal_selection_lyt = QtWidgets.QHBoxLayout()
        self.ST_Q4_horizontal_selection_lyt.setSizeConstraint(QtWidgets.QLayout.SetFixedSize)
        self.ST_Q4_horizontal_selection_lyt.setSpacing(20)
        self.ST_Q4_horizontal_selection_lyt.setObjectName("ST_Q4_horizontal_selection_lyt")
        self.ST_4_pushButton_1 = QtWidgets.QPushButton(self.ST_widget)
        self.ST_4_pushButton_1.setMinimumSize(QtCore.QSize(60, 55))
        self.ST_4_pushButton_1.setMaximumSize(QtCore.QSize(60, 55))
        self.ST_4_pushButton_1.setCheckable(True)
        self.ST_4_pushButton_1.setAutoExclusive(True)
        self.ST_4_pushButton_1.setObjectName("ST_4_pushButton_1")
        self.ST_Q4_horizontal_selection_lyt.addWidget(self.ST_4_pushButton_1)
        self.ST_4_pushButton_2 = QtWidgets.QPushButton(self.ST_widget)
        self.ST_4_pushButton_2.setMinimumSize(QtCore.QSize(60, 55))
        self.ST_4_pushButton_2.setMaximumSize(QtCore.QSize(60, 55))
        self.ST_4_pushButton_2.setCheckable(True)
        self.ST_4_pushButton_2.setAutoExclusive(True)
        self.ST_4_pushButton_2.setObjectName("ST_4_pushButton_2")
        self.ST_Q4_horizontal_selection_lyt.addWidget(self.ST_4_pushButton_2)
        self.ST_4_pushButton_3 = QtWidgets.QPushButton(self.ST_widget)
        self.ST_4_pushButton_3.setMinimumSize(QtCore.QSize(60, 55))
        self.ST_4_pushButton_3.setMaximumSize(QtCore.QSize(60, 55))
        self.ST_4_pushButton_3.setCheckable(True)
        self.ST_4_pushButton_3.setAutoExclusive(True)
        self.ST_4_pushButton_3.setObjectName("ST_4_pushButton_3")
        self.ST_Q4_horizontal_selection_lyt.addWidget(self.ST_4_pushButton_3)
        self.ST_4_pushButton_4 = QtWidgets.QPushButton(self.ST_widget)
        self.ST_4_pushButton_4.setMinimumSize(QtCore.QSize(60, 55))
        self.ST_4_pushButton_4.setMaximumSize(QtCore.QSize(60, 55))
        self.ST_4_pushButton_4.setCheckable(True)
        self.ST_4_pushButton_4.setAutoExclusive(True)
        self.ST_4_pushButton_4.setObjectName("ST_4_pushButton_4")
        self.ST_Q4_horizontal_selection_lyt.addWidget(self.ST_4_pushButton_4)
        self.ST_4_pushButton_5 = QtWidgets.QPushButton(self.ST_widget)
        self.ST_4_pushButton_5.setMinimumSize(QtCore.QSize(60, 55))
        self.ST_4_pushButton_5.setMaximumSize(QtCore.QSize(60, 55))
        self.ST_4_pushButton_5.setCheckable(True)
        self.ST_4_pushButton_5.setAutoExclusive(True)
        self.ST_4_pushButton_5.setObjectName("ST_4_pushButton_5")
        self.ST_Q4_horizontal_selection_lyt.addWidget(self.ST_4_pushButton_5)
        self.ST_Q4_horizontal_question_lyt.addLayout(self.ST_Q4_horizontal_selection_lyt)
        self.verticalLayout.addLayout(self.ST_Q4_horizontal_question_lyt)
        self.ST_Q5_horizontal_question_lyt = QtWidgets.QHBoxLayout()
        self.ST_Q5_horizontal_question_lyt.setObjectName("ST_Q5_horizontal_question_lyt")
        self.ST_Q5 = QtWidgets.QLabel(self.ST_widget)
        self.ST_Q5.setMinimumSize(QtCore.QSize(60, 60))
        self.ST_Q5.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.ST_Q5.setFont(font)
        self.ST_Q5.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.ST_Q5.setObjectName("ST_Q5")
        self.ST_Q5_horizontal_question_lyt.addWidget(self.ST_Q5)
        spacerItem84 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.ST_Q5_horizontal_question_lyt.addItem(spacerItem84)
        self.ST_Q5_Label = QtWidgets.QLabel(self.ST_widget)
        self.ST_Q5_Label.setMinimumSize(QtCore.QSize(825, 50))
        self.ST_Q5_Label.setMaximumSize(QtCore.QSize(825, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.ST_Q5_Label.setFont(font)
        self.ST_Q5_Label.setObjectName("ST_Q5_Label")
        self.ST_Q5_horizontal_question_lyt.addWidget(self.ST_Q5_Label)
        spacerItem85 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.ST_Q5_horizontal_question_lyt.addItem(spacerItem85)
        self.ST_Q5_horizontal_selection_lyt = QtWidgets.QHBoxLayout()
        self.ST_Q5_horizontal_selection_lyt.setSizeConstraint(QtWidgets.QLayout.SetFixedSize)
        self.ST_Q5_horizontal_selection_lyt.setSpacing(20)
        self.ST_Q5_horizontal_selection_lyt.setObjectName("ST_Q5_horizontal_selection_lyt")
        self.ST_5_pushButton_1 = QtWidgets.QPushButton(self.ST_widget)
        self.ST_5_pushButton_1.setMinimumSize(QtCore.QSize(60, 55))
        self.ST_5_pushButton_1.setMaximumSize(QtCore.QSize(60, 55))
        self.ST_5_pushButton_1.setCheckable(True)
        self.ST_5_pushButton_1.setAutoExclusive(True)
        self.ST_5_pushButton_1.setObjectName("ST_5_pushButton_1")
        self.ST_Q5_horizontal_selection_lyt.addWidget(self.ST_5_pushButton_1)
        self.ST_5_pushButton_2 = QtWidgets.QPushButton(self.ST_widget)
        self.ST_5_pushButton_2.setMinimumSize(QtCore.QSize(60, 55))
        self.ST_5_pushButton_2.setMaximumSize(QtCore.QSize(60, 55))
        self.ST_5_pushButton_2.setCheckable(True)
        self.ST_5_pushButton_2.setAutoExclusive(True)
        self.ST_5_pushButton_2.setObjectName("ST_5_pushButton_2")
        self.ST_Q5_horizontal_selection_lyt.addWidget(self.ST_5_pushButton_2)
        self.ST_5_pushButton_3 = QtWidgets.QPushButton(self.ST_widget)
        self.ST_5_pushButton_3.setMinimumSize(QtCore.QSize(60, 55))
        self.ST_5_pushButton_3.setMaximumSize(QtCore.QSize(60, 55))
        self.ST_5_pushButton_3.setCheckable(True)
        self.ST_5_pushButton_3.setAutoExclusive(True)
        self.ST_5_pushButton_3.setObjectName("ST_5_pushButton_3")
        self.ST_Q5_horizontal_selection_lyt.addWidget(self.ST_5_pushButton_3)
        self.ST_5_pushButton_4 = QtWidgets.QPushButton(self.ST_widget)
        self.ST_5_pushButton_4.setMinimumSize(QtCore.QSize(60, 55))
        self.ST_5_pushButton_4.setMaximumSize(QtCore.QSize(60, 55))
        self.ST_5_pushButton_4.setCheckable(True)
        self.ST_5_pushButton_4.setAutoExclusive(True)
        self.ST_5_pushButton_4.setObjectName("ST_5_pushButton_4")
        self.ST_Q5_horizontal_selection_lyt.addWidget(self.ST_5_pushButton_4)
        self.ST_5_pushButton_5 = QtWidgets.QPushButton(self.ST_widget)
        self.ST_5_pushButton_5.setMinimumSize(QtCore.QSize(60, 55))
        self.ST_5_pushButton_5.setMaximumSize(QtCore.QSize(60, 55))
        self.ST_5_pushButton_5.setCheckable(True)
        self.ST_5_pushButton_5.setAutoExclusive(True)
        self.ST_5_pushButton_5.setObjectName("ST_5_pushButton_5")
        self.ST_Q5_horizontal_selection_lyt.addWidget(self.ST_5_pushButton_5)
        self.ST_Q5_horizontal_question_lyt.addLayout(self.ST_Q5_horizontal_selection_lyt)
        self.verticalLayout.addLayout(self.ST_Q5_horizontal_question_lyt)
        self.ST_Q6_horizontal_question_lyt = QtWidgets.QHBoxLayout()
        self.ST_Q6_horizontal_question_lyt.setObjectName("ST_Q6_horizontal_question_lyt")
        self.ST_Q6 = QtWidgets.QLabel(self.ST_widget)
        self.ST_Q6.setMinimumSize(QtCore.QSize(60, 60))
        self.ST_Q6.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.ST_Q6.setFont(font)
        self.ST_Q6.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.ST_Q6.setObjectName("ST_Q6")
        self.ST_Q6_horizontal_question_lyt.addWidget(self.ST_Q6)
        spacerItem86 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.ST_Q6_horizontal_question_lyt.addItem(spacerItem86)
        self.ST_Q6_Label = QtWidgets.QLabel(self.ST_widget)
        self.ST_Q6_Label.setMinimumSize(QtCore.QSize(825, 50))
        self.ST_Q6_Label.setMaximumSize(QtCore.QSize(825, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.ST_Q6_Label.setFont(font)
        self.ST_Q6_Label.setObjectName("ST_Q6_Label")
        self.ST_Q6_horizontal_question_lyt.addWidget(self.ST_Q6_Label)
        spacerItem87 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.ST_Q6_horizontal_question_lyt.addItem(spacerItem87)
        self.ST_Q6_horizontal_selection_lyt = QtWidgets.QHBoxLayout()
        self.ST_Q6_horizontal_selection_lyt.setSizeConstraint(QtWidgets.QLayout.SetFixedSize)
        self.ST_Q6_horizontal_selection_lyt.setSpacing(20)
        self.ST_Q6_horizontal_selection_lyt.setObjectName("ST_Q6_horizontal_selection_lyt")
        self.ST_6_pushButton_1 = QtWidgets.QPushButton(self.ST_widget)
        self.ST_6_pushButton_1.setMinimumSize(QtCore.QSize(60, 55))
        self.ST_6_pushButton_1.setMaximumSize(QtCore.QSize(60, 55))
        self.ST_6_pushButton_1.setCheckable(True)
        self.ST_6_pushButton_1.setAutoExclusive(True)
        self.ST_6_pushButton_1.setObjectName("ST_6_pushButton_1")
        self.ST_Q6_horizontal_selection_lyt.addWidget(self.ST_6_pushButton_1)
        self.ST_6_pushButton_2 = QtWidgets.QPushButton(self.ST_widget)
        self.ST_6_pushButton_2.setMinimumSize(QtCore.QSize(60, 55))
        self.ST_6_pushButton_2.setMaximumSize(QtCore.QSize(60, 55))
        self.ST_6_pushButton_2.setCheckable(True)
        self.ST_6_pushButton_2.setAutoExclusive(True)
        self.ST_6_pushButton_2.setObjectName("ST_6_pushButton_2")
        self.ST_Q6_horizontal_selection_lyt.addWidget(self.ST_6_pushButton_2)
        self.ST_6_pushButton_3 = QtWidgets.QPushButton(self.ST_widget)
        self.ST_6_pushButton_3.setMinimumSize(QtCore.QSize(60, 55))
        self.ST_6_pushButton_3.setMaximumSize(QtCore.QSize(60, 55))
        self.ST_6_pushButton_3.setCheckable(True)
        self.ST_6_pushButton_3.setAutoExclusive(True)
        self.ST_6_pushButton_3.setObjectName("ST_6_pushButton_3")
        self.ST_Q6_horizontal_selection_lyt.addWidget(self.ST_6_pushButton_3)
        self.ST_6_pushButton_4 = QtWidgets.QPushButton(self.ST_widget)
        self.ST_6_pushButton_4.setMinimumSize(QtCore.QSize(60, 55))
        self.ST_6_pushButton_4.setMaximumSize(QtCore.QSize(60, 55))
        self.ST_6_pushButton_4.setCheckable(True)
        self.ST_6_pushButton_4.setAutoExclusive(True)
        self.ST_6_pushButton_4.setObjectName("ST_6_pushButton_4")
        self.ST_Q6_horizontal_selection_lyt.addWidget(self.ST_6_pushButton_4)
        self.ST_6_pushButton_5 = QtWidgets.QPushButton(self.ST_widget)
        self.ST_6_pushButton_5.setMinimumSize(QtCore.QSize(60, 55))
        self.ST_6_pushButton_5.setMaximumSize(QtCore.QSize(60, 55))
        self.ST_6_pushButton_5.setCheckable(True)
        self.ST_6_pushButton_5.setAutoExclusive(True)
        self.ST_6_pushButton_5.setObjectName("ST_6_pushButton_5")
        self.ST_Q6_horizontal_selection_lyt.addWidget(self.ST_6_pushButton_5)
        self.ST_Q6_horizontal_question_lyt.addLayout(self.ST_Q6_horizontal_selection_lyt)
        self.verticalLayout.addLayout(self.ST_Q6_horizontal_question_lyt)
        self.ST_Q7_horizontal_question_lyt = QtWidgets.QHBoxLayout()
        self.ST_Q7_horizontal_question_lyt.setObjectName("ST_Q7_horizontal_question_lyt")
        self.ST_Q7 = QtWidgets.QLabel(self.ST_widget)
        self.ST_Q7.setMinimumSize(QtCore.QSize(60, 60))
        self.ST_Q7.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.ST_Q7.setFont(font)
        self.ST_Q7.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.ST_Q7.setObjectName("ST_Q7")
        self.ST_Q7_horizontal_question_lyt.addWidget(self.ST_Q7)
        spacerItem88 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.ST_Q7_horizontal_question_lyt.addItem(spacerItem88)
        self.ST_Q7_Label = QtWidgets.QLabel(self.ST_widget)
        self.ST_Q7_Label.setMinimumSize(QtCore.QSize(825, 50))
        self.ST_Q7_Label.setMaximumSize(QtCore.QSize(825, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.ST_Q7_Label.setFont(font)
        self.ST_Q7_Label.setObjectName("ST_Q7_Label")
        self.ST_Q7_horizontal_question_lyt.addWidget(self.ST_Q7_Label)
        spacerItem89 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.ST_Q7_horizontal_question_lyt.addItem(spacerItem89)
        self.ST_Q7_horizontal_selection_lyt = QtWidgets.QHBoxLayout()
        self.ST_Q7_horizontal_selection_lyt.setSizeConstraint(QtWidgets.QLayout.SetFixedSize)
        self.ST_Q7_horizontal_selection_lyt.setSpacing(20)
        self.ST_Q7_horizontal_selection_lyt.setObjectName("ST_Q7_horizontal_selection_lyt")
        self.ST_7_pushButton_1 = QtWidgets.QPushButton(self.ST_widget)
        self.ST_7_pushButton_1.setMinimumSize(QtCore.QSize(60, 55))
        self.ST_7_pushButton_1.setMaximumSize(QtCore.QSize(60, 55))
        self.ST_7_pushButton_1.setCheckable(True)
        self.ST_7_pushButton_1.setAutoExclusive(True)
        self.ST_7_pushButton_1.setObjectName("ST_7_pushButton_1")
        self.ST_Q7_horizontal_selection_lyt.addWidget(self.ST_7_pushButton_1)
        self.ST_7_pushButton_2 = QtWidgets.QPushButton(self.ST_widget)
        self.ST_7_pushButton_2.setMinimumSize(QtCore.QSize(60, 55))
        self.ST_7_pushButton_2.setMaximumSize(QtCore.QSize(60, 55))
        self.ST_7_pushButton_2.setCheckable(True)
        self.ST_7_pushButton_2.setAutoExclusive(True)
        self.ST_7_pushButton_2.setObjectName("ST_7_pushButton_2")
        self.ST_Q7_horizontal_selection_lyt.addWidget(self.ST_7_pushButton_2)
        self.ST_7_pushButton_3 = QtWidgets.QPushButton(self.ST_widget)
        self.ST_7_pushButton_3.setMinimumSize(QtCore.QSize(60, 55))
        self.ST_7_pushButton_3.setMaximumSize(QtCore.QSize(60, 55))
        self.ST_7_pushButton_3.setCheckable(True)
        self.ST_7_pushButton_3.setAutoExclusive(True)
        self.ST_7_pushButton_3.setObjectName("ST_7_pushButton_3")
        self.ST_Q7_horizontal_selection_lyt.addWidget(self.ST_7_pushButton_3)
        self.ST_7_pushButton_4 = QtWidgets.QPushButton(self.ST_widget)
        self.ST_7_pushButton_4.setMinimumSize(QtCore.QSize(60, 55))
        self.ST_7_pushButton_4.setMaximumSize(QtCore.QSize(60, 55))
        self.ST_7_pushButton_4.setCheckable(True)
        self.ST_7_pushButton_4.setAutoExclusive(True)
        self.ST_7_pushButton_4.setObjectName("ST_7_pushButton_4")
        self.ST_Q7_horizontal_selection_lyt.addWidget(self.ST_7_pushButton_4)
        self.ST_7_pushButton_5 = QtWidgets.QPushButton(self.ST_widget)
        self.ST_7_pushButton_5.setMinimumSize(QtCore.QSize(60, 55))
        self.ST_7_pushButton_5.setMaximumSize(QtCore.QSize(60, 55))
        self.ST_7_pushButton_5.setCheckable(True)
        self.ST_7_pushButton_5.setAutoExclusive(True)
        self.ST_7_pushButton_5.setObjectName("ST_7_pushButton_5")
        self.ST_Q7_horizontal_selection_lyt.addWidget(self.ST_7_pushButton_5)
        self.ST_Q7_horizontal_question_lyt.addLayout(self.ST_Q7_horizontal_selection_lyt)
        self.verticalLayout.addLayout(self.ST_Q7_horizontal_question_lyt)
        self.ST_Q8_horizontal_question_lyt = QtWidgets.QHBoxLayout()
        self.ST_Q8_horizontal_question_lyt.setObjectName("ST_Q8_horizontal_question_lyt")
        self.ST_Q8 = QtWidgets.QLabel(self.ST_widget)
        self.ST_Q8.setMinimumSize(QtCore.QSize(60, 60))
        self.ST_Q8.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.ST_Q8.setFont(font)
        self.ST_Q8.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.ST_Q8.setObjectName("ST_Q8")
        self.ST_Q8_horizontal_question_lyt.addWidget(self.ST_Q8)
        spacerItem90 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.ST_Q8_horizontal_question_lyt.addItem(spacerItem90)
        self.ST_Q8_Label = QtWidgets.QLabel(self.ST_widget)
        self.ST_Q8_Label.setMinimumSize(QtCore.QSize(825, 50))
        self.ST_Q8_Label.setMaximumSize(QtCore.QSize(825, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.ST_Q8_Label.setFont(font)
        self.ST_Q8_Label.setObjectName("ST_Q8_Label")
        self.ST_Q8_horizontal_question_lyt.addWidget(self.ST_Q8_Label)
        spacerItem91 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.ST_Q8_horizontal_question_lyt.addItem(spacerItem91)
        self.ST_Q8_horizontal_selection_lyt = QtWidgets.QHBoxLayout()
        self.ST_Q8_horizontal_selection_lyt.setSizeConstraint(QtWidgets.QLayout.SetFixedSize)
        self.ST_Q8_horizontal_selection_lyt.setSpacing(20)
        self.ST_Q8_horizontal_selection_lyt.setObjectName("ST_Q8_horizontal_selection_lyt")
        self.ST_8_pushButton_1 = QtWidgets.QPushButton(self.ST_widget)
        self.ST_8_pushButton_1.setMinimumSize(QtCore.QSize(60, 55))
        self.ST_8_pushButton_1.setMaximumSize(QtCore.QSize(60, 55))
        self.ST_8_pushButton_1.setCheckable(True)
        self.ST_8_pushButton_1.setAutoExclusive(True)
        self.ST_8_pushButton_1.setObjectName("ST_8_pushButton_1")
        self.ST_Q8_horizontal_selection_lyt.addWidget(self.ST_8_pushButton_1)
        self.ST_8_pushButton_2 = QtWidgets.QPushButton(self.ST_widget)
        self.ST_8_pushButton_2.setMinimumSize(QtCore.QSize(60, 55))
        self.ST_8_pushButton_2.setMaximumSize(QtCore.QSize(60, 55))
        self.ST_8_pushButton_2.setCheckable(True)
        self.ST_8_pushButton_2.setAutoExclusive(True)
        self.ST_8_pushButton_2.setObjectName("ST_8_pushButton_2")
        self.ST_Q8_horizontal_selection_lyt.addWidget(self.ST_8_pushButton_2)
        self.ST_8_pushButton_3 = QtWidgets.QPushButton(self.ST_widget)
        self.ST_8_pushButton_3.setMinimumSize(QtCore.QSize(60, 55))
        self.ST_8_pushButton_3.setMaximumSize(QtCore.QSize(60, 55))
        self.ST_8_pushButton_3.setCheckable(True)
        self.ST_8_pushButton_3.setAutoExclusive(True)
        self.ST_8_pushButton_3.setObjectName("ST_8_pushButton_3")
        self.ST_Q8_horizontal_selection_lyt.addWidget(self.ST_8_pushButton_3)
        self.ST_8_pushButton_4 = QtWidgets.QPushButton(self.ST_widget)
        self.ST_8_pushButton_4.setMinimumSize(QtCore.QSize(60, 55))
        self.ST_8_pushButton_4.setMaximumSize(QtCore.QSize(60, 55))
        self.ST_8_pushButton_4.setCheckable(True)
        self.ST_8_pushButton_4.setAutoExclusive(True)
        self.ST_8_pushButton_4.setObjectName("ST_8_pushButton_4")
        self.ST_Q8_horizontal_selection_lyt.addWidget(self.ST_8_pushButton_4)
        self.ST_8_pushButton_5 = QtWidgets.QPushButton(self.ST_widget)
        self.ST_8_pushButton_5.setMinimumSize(QtCore.QSize(60, 55))
        self.ST_8_pushButton_5.setMaximumSize(QtCore.QSize(60, 55))
        self.ST_8_pushButton_5.setCheckable(True)
        self.ST_8_pushButton_5.setAutoExclusive(True)
        self.ST_8_pushButton_5.setObjectName("ST_8_pushButton_5")
        self.ST_Q8_horizontal_selection_lyt.addWidget(self.ST_8_pushButton_5)
        self.ST_Q8_horizontal_question_lyt.addLayout(self.ST_Q8_horizontal_selection_lyt)
        self.verticalLayout.addLayout(self.ST_Q8_horizontal_question_lyt)
        self.ST_Q9_horizontal_question_lyt = QtWidgets.QHBoxLayout()
        self.ST_Q9_horizontal_question_lyt.setObjectName("ST_Q9_horizontal_question_lyt")
        self.ST_Q9 = QtWidgets.QLabel(self.ST_widget)
        self.ST_Q9.setMinimumSize(QtCore.QSize(60, 60))
        self.ST_Q9.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.ST_Q9.setFont(font)
        self.ST_Q9.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.ST_Q9.setObjectName("ST_Q9")
        self.ST_Q9_horizontal_question_lyt.addWidget(self.ST_Q9)
        spacerItem92 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.ST_Q9_horizontal_question_lyt.addItem(spacerItem92)
        self.ST_Q9_Label = QtWidgets.QLabel(self.ST_widget)
        self.ST_Q9_Label.setMinimumSize(QtCore.QSize(825, 50))
        self.ST_Q9_Label.setMaximumSize(QtCore.QSize(825, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.ST_Q9_Label.setFont(font)
        self.ST_Q9_Label.setObjectName("ST_Q9_Label")
        self.ST_Q9_horizontal_question_lyt.addWidget(self.ST_Q9_Label)
        spacerItem93 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.ST_Q9_horizontal_question_lyt.addItem(spacerItem93)
        self.ST_Q9_horizontal_selection_lyt = QtWidgets.QHBoxLayout()
        self.ST_Q9_horizontal_selection_lyt.setSizeConstraint(QtWidgets.QLayout.SetFixedSize)
        self.ST_Q9_horizontal_selection_lyt.setSpacing(20)
        self.ST_Q9_horizontal_selection_lyt.setObjectName("ST_Q9_horizontal_selection_lyt")
        self.ST_9_pushButton_1 = QtWidgets.QPushButton(self.ST_widget)
        self.ST_9_pushButton_1.setMinimumSize(QtCore.QSize(60, 55))
        self.ST_9_pushButton_1.setMaximumSize(QtCore.QSize(60, 55))
        self.ST_9_pushButton_1.setCheckable(True)
        self.ST_9_pushButton_1.setAutoExclusive(True)
        self.ST_9_pushButton_1.setObjectName("ST_9_pushButton_1")
        self.ST_Q9_horizontal_selection_lyt.addWidget(self.ST_9_pushButton_1)
        self.ST_9_pushButton_2 = QtWidgets.QPushButton(self.ST_widget)
        self.ST_9_pushButton_2.setMinimumSize(QtCore.QSize(60, 55))
        self.ST_9_pushButton_2.setMaximumSize(QtCore.QSize(60, 55))
        self.ST_9_pushButton_2.setCheckable(True)
        self.ST_9_pushButton_2.setAutoExclusive(True)
        self.ST_9_pushButton_2.setObjectName("ST_9_pushButton_2")
        self.ST_Q9_horizontal_selection_lyt.addWidget(self.ST_9_pushButton_2)
        self.ST_9_pushButton_3 = QtWidgets.QPushButton(self.ST_widget)
        self.ST_9_pushButton_3.setMinimumSize(QtCore.QSize(60, 55))
        self.ST_9_pushButton_3.setMaximumSize(QtCore.QSize(60, 55))
        self.ST_9_pushButton_3.setCheckable(True)
        self.ST_9_pushButton_3.setAutoExclusive(True)
        self.ST_9_pushButton_3.setObjectName("ST_9_pushButton_3")
        self.ST_Q9_horizontal_selection_lyt.addWidget(self.ST_9_pushButton_3)
        self.ST_9_pushButton_4 = QtWidgets.QPushButton(self.ST_widget)
        self.ST_9_pushButton_4.setMinimumSize(QtCore.QSize(60, 55))
        self.ST_9_pushButton_4.setMaximumSize(QtCore.QSize(60, 55))
        self.ST_9_pushButton_4.setCheckable(True)
        self.ST_9_pushButton_4.setAutoExclusive(True)
        self.ST_9_pushButton_4.setObjectName("ST_9_pushButton_4")
        self.ST_Q9_horizontal_selection_lyt.addWidget(self.ST_9_pushButton_4)
        self.ST_9_pushButton_5 = QtWidgets.QPushButton(self.ST_widget)
        self.ST_9_pushButton_5.setMinimumSize(QtCore.QSize(60, 55))
        self.ST_9_pushButton_5.setMaximumSize(QtCore.QSize(60, 55))
        self.ST_9_pushButton_5.setCheckable(True)
        self.ST_9_pushButton_5.setAutoExclusive(True)
        self.ST_9_pushButton_5.setObjectName("ST_9_pushButton_5")
        self.ST_Q9_horizontal_selection_lyt.addWidget(self.ST_9_pushButton_5)
        self.ST_Q9_horizontal_question_lyt.addLayout(self.ST_Q9_horizontal_selection_lyt)
        self.verticalLayout.addLayout(self.ST_Q9_horizontal_question_lyt)
        self.ST_Q10_horizontal_question_lyt = QtWidgets.QHBoxLayout()
        self.ST_Q10_horizontal_question_lyt.setObjectName("ST_Q10_horizontal_question_lyt")
        self.ST_Q10 = QtWidgets.QLabel(self.ST_widget)
        self.ST_Q10.setMinimumSize(QtCore.QSize(60, 60))
        self.ST_Q10.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.ST_Q10.setFont(font)
        self.ST_Q10.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.ST_Q10.setObjectName("ST_Q10")
        self.ST_Q10_horizontal_question_lyt.addWidget(self.ST_Q10)
        spacerItem94 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.ST_Q10_horizontal_question_lyt.addItem(spacerItem94)
        self.ST_Q10_Label = QtWidgets.QLabel(self.ST_widget)
        self.ST_Q10_Label.setMinimumSize(QtCore.QSize(825, 50))
        self.ST_Q10_Label.setMaximumSize(QtCore.QSize(825, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(15)
        self.ST_Q10_Label.setFont(font)
        self.ST_Q10_Label.setObjectName("ST_Q10_Label")
        self.ST_Q10_horizontal_question_lyt.addWidget(self.ST_Q10_Label)
        spacerItem95 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.ST_Q10_horizontal_question_lyt.addItem(spacerItem95)
        self.ST_Q10_horizontal_selection_lyt = QtWidgets.QHBoxLayout()
        self.ST_Q10_horizontal_selection_lyt.setSizeConstraint(QtWidgets.QLayout.SetFixedSize)
        self.ST_Q10_horizontal_selection_lyt.setSpacing(20)
        self.ST_Q10_horizontal_selection_lyt.setObjectName("ST_Q10_horizontal_selection_lyt")
        self.ST_10_pushButton_1 = QtWidgets.QPushButton(self.ST_widget)
        self.ST_10_pushButton_1.setMinimumSize(QtCore.QSize(60, 55))
        self.ST_10_pushButton_1.setMaximumSize(QtCore.QSize(60, 55))
        self.ST_10_pushButton_1.setCheckable(True)
        self.ST_10_pushButton_1.setAutoExclusive(True)
        self.ST_10_pushButton_1.setObjectName("ST_10_pushButton_1")
        self.ST_Q10_horizontal_selection_lyt.addWidget(self.ST_10_pushButton_1)
        self.ST_10_pushButton_2 = QtWidgets.QPushButton(self.ST_widget)
        self.ST_10_pushButton_2.setMinimumSize(QtCore.QSize(60, 55))
        self.ST_10_pushButton_2.setMaximumSize(QtCore.QSize(60, 55))
        self.ST_10_pushButton_2.setCheckable(True)
        self.ST_10_pushButton_2.setAutoExclusive(True)
        self.ST_10_pushButton_2.setObjectName("ST_10_pushButton_2")
        self.ST_Q10_horizontal_selection_lyt.addWidget(self.ST_10_pushButton_2)
        self.ST_10_pushButton_3 = QtWidgets.QPushButton(self.ST_widget)
        self.ST_10_pushButton_3.setMinimumSize(QtCore.QSize(60, 55))
        self.ST_10_pushButton_3.setMaximumSize(QtCore.QSize(60, 55))
        self.ST_10_pushButton_3.setCheckable(True)
        self.ST_10_pushButton_3.setAutoExclusive(True)
        self.ST_10_pushButton_3.setObjectName("ST_10_pushButton_3")
        self.ST_Q10_horizontal_selection_lyt.addWidget(self.ST_10_pushButton_3)
        self.ST_10_pushButton_4 = QtWidgets.QPushButton(self.ST_widget)
        self.ST_10_pushButton_4.setMinimumSize(QtCore.QSize(60, 55))
        self.ST_10_pushButton_4.setMaximumSize(QtCore.QSize(60, 55))
        self.ST_10_pushButton_4.setCheckable(True)
        self.ST_10_pushButton_4.setAutoExclusive(True)
        self.ST_10_pushButton_4.setObjectName("ST_10_pushButton_4")
        self.ST_Q10_horizontal_selection_lyt.addWidget(self.ST_10_pushButton_4)
        self.ST_10_pushButton_5 = QtWidgets.QPushButton(self.ST_widget)
        self.ST_10_pushButton_5.setMinimumSize(QtCore.QSize(60, 55))
        self.ST_10_pushButton_5.setMaximumSize(QtCore.QSize(60, 55))
        self.ST_10_pushButton_5.setCheckable(True)
        self.ST_10_pushButton_5.setAutoExclusive(True)
        self.ST_10_pushButton_5.setObjectName("ST_10_pushButton_5")
        self.ST_Q10_horizontal_selection_lyt.addWidget(self.ST_10_pushButton_5)
        self.ST_Q10_horizontal_question_lyt.addLayout(self.ST_Q10_horizontal_selection_lyt)
        self.verticalLayout.addLayout(self.ST_Q10_horizontal_question_lyt)
        self.ST_Q10_horizontal_question_lyt_2 = QtWidgets.QHBoxLayout()
        self.ST_Q10_horizontal_question_lyt_2.setObjectName("ST_Q10_horizontal_question_lyt_2")
        self.stress_savebutton = QtWidgets.QCheckBox(self.ST_widget)
        self.stress_savebutton.setMinimumSize(QtCore.QSize(150, 40))
        self.stress_savebutton.setMaximumSize(QtCore.QSize(40, 100))
        self.stress_savebutton.setStyleSheet("#stress_savebutton {\n"
"    /* General styling for the checkbox */\n"
"    font-family: \'Roboto\';\n"
"    color: rgb(24, 45, 83); /* Text color */\n"
"    font-size: 16px; /* Font size */\n"
"    spacing: 5px; /* Space between the indicator and the text */\n"
"    background-color: transparent; /* Make the background transparent */\n"
"}\n"
"\n"
"#stress_savebutton::indicator {\n"
"    /* Styling for the indicator (the square part) */\n"
"    width: 150px; /* Width of the indicator */\n"
"    height: 150px; /* Height of the indicator */\n"
"}\n"
"\n"
"#stress_savebutton::indicator::unchecked {\n"
"    /* Styling for the indicator when the checkbox is unchecked */\n"
"    background-color: transparent; /* Background color */\n"
"    border: transparent; /* Border color and width */\n"
"    border-radius: 4px; /* Optional: if you want rounded corners for the square */\n"
"     image: url(:/icon/icon/notsaved.png); /* Absolute path to the checkmark image */\n"
"}\n"
"\n"
"\n"
"\n"
"#stress_savebutton::indicator::checked {\n"
"    /* Styling for the indicator when the checkbox is checked */\n"
"    background-color: transparent; /* Background color */\n"
"    border: transparent; /* Border color and width */\n"
"    border-radius: 4px; /* Optional: if you want rounded corners for the square */\n"
"    image: url(:/icon/icon/saved.png); /* Absolute path to the checkmark image */\n"
"    \n"
"}")
        self.stress_savebutton.setText("")
        self.stress_savebutton.setObjectName("stress_savebutton")
        self.ST_Q10_horizontal_question_lyt_2.addWidget(self.stress_savebutton)
        self.verticalLayout.addLayout(self.ST_Q10_horizontal_question_lyt_2)
        self.ST_Tab_gridLayout.addWidget(self.ST_widget, 0, 0, 1, 1)
        self.Stress_tabWidget.addTab(self.ST_Tab, "")
        self.Stress_Page_gridLayout.addWidget(self.Stress_tabWidget, 0, 0, 1, 1)
        self.stackedWidget.addWidget(self.Stress_Page)



        self.General_Page = QtWidgets.QWidget()
        self.General_Page.setObjectName("General_Page")
        self.General_Page_gridLayout = QtWidgets.QGridLayout(self.General_Page)
        self.General_Page_gridLayout.setObjectName("General_Page_gridLayout")
        self.GE_widget = QtWidgets.QWidget(self.General_Page)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.GE_widget.setFont(font)
        self.GE_widget.setStyleSheet("QLabel {\n"
"    font-family: \'Roboto \';\n"
"    font-size: 30px;\n"
"    font-weight: bold;\n"
"    color: white; /* Set the font color to white */\n"
"    background-color: transparent; /* Make the background transparent */\n"
"}\n"
"\n"
"#general_instructions, #date_instructions {\n"
"    font-family: \'Roboto \';\n"
"    font-size: 20px;\n"
"    font-weight: bold;\n"
"    color: rgb(24, 45, 83 ); /* Set the font color to white */\n"
"    background-color: transparent; /* Make the background transparent */\n"
"}\n"
"\n"
"#GeneralTabTitle_label {\n"
"    font-family: \'Roboto Cn\'; /* Specify the font family */\n"
"    font-size: 100px; /* Specify the font size */\n"
"    font-weight: bold; /* Make the font bold */\n"
"    color: white; /* Set the font color */\n"
"   border: 3px solid  rgb(24, 45, 83 ); /* This adds a 3px solid blue border around the name_widget */\n"
"    background-color: rgb(24, 45, 83 );\n"
"    border-radius: 20px; /* Optional: if you want rounded corners */\n"
"\n"
"}\n"
"\n"
"\n"
"\n"
"#name_widget, #school_widget, #gender_widget, #dates_widget   {\n"
"    color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"    border: 3px solid rgb(24, 45, 83); /* This adds a 3px solid blue border */\n"
"    background-color: rgb(31, 149, 239);\n"
"    border-radius: 40px; /* Optional: if you want rounded corners */\n"
"}\n"
"\n"
"Line { /* This applies to all Line objects within the name_widget */\n"
"    background-color: rgb(24, 45, 83 ); /* Change the color of the line */\n"
"   \n"
"}\n"
"\n"
"/*background-color: rgb(31, 149, 239);*/\n"
"\n"
"QLineEdit {\n"
"    /* General styling for the checkbox */\n"
"    font-family: \'Roboto Cn\';\n"
"    color: rgb(24, 45, 83 ); /* Text color */\n"
"    font-size: 25px; /* Font size */\n"
"    border: 2px solid  rgb(24, 45, 83 ); /* This adds a 3px solid blue border around the name_widget */\n"
"    background-color: white;\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"    padding-left: 125px; /* Space between the text and the left margin */\n"
"}\n"
"\n"
"\n"
"\n"
"QCheckBox {\n"
"    /* General styling for the checkbox */\n"
"    font-family: \'Roboto\';\n"
"    color: rgb(24, 45, 83); /* Text color */\n"
"    font-size: 16px; /* Font size */\n"
"    spacing: 5px; /* Space between the indicator and the text */\n"
"    background-color: transparent; /* Make the background transparent */\n"
"}\n"
"\n"
"QCheckBox::indicator {\n"
"    /* Styling for the indicator (the square part) */\n"
"    width: 100px; /* Width of the indicator */\n"
"    height: 100px; /* Height of the indicator */\n"
"}\n"
"\n"
"QCheckBox::indicator::unchecked {\n"
"    /* Styling for the indicator when the checkbox is unchecked */\n"
"    background-color: transparent; /* Background color */\n"
"    border: transparent; /* Border color and width */\n"
"    border-radius: 4px; /* Optional: if you want rounded corners for the square */\n"
"     image: url(:/icon/icon/tickhere.png); /* Absolute path to the checkmark image */\n"
"}\n"
"\n"
"\n"
"\n"
"QCheckBox::indicator::checked {\n"
"    /* Styling for the indicator when the checkbox is checked */\n"
"    background-color: transparent; /* Background color */\n"
"    border: transparent; /* Border color and width */\n"
"    border-radius: 4px; /* Optional: if you want rounded corners for the square */\n"
"    image: url(:/icon/icon/tickmark.png); /* Absolute path to the checkmark image */\n"
"    \n"
"}\n"
"\n"
"QDateEdit {\n"
"/* General styling for the checkbox */\n"
"    font-family: \'Roboto Cn\';\n"
"    color: rgb(24, 45, 83 ); /* Text color */\n"
"    font-size: 25px; /* Font size */\n"
"    background-color: white;\n"
"    color: black;\n"
"    border: 2px solid black;\n"
"    border-radius: 15px;\n"
"    padding-left: 20px; /* Adjust left padding to center text */\n"
"    margin: 2px;\n"
"}\n"
"\n"
"QDateEdit::up-button, QDateEdit::down-button {\n"
"    subcontrol-origin: border;\n"
"    width: 15px;\n"
"    border-left: 1px solid black;\n"
"}\n"
"\n"
"QDateEdit::up-button {\n"
"    subcontrol-position: top right;\n"
"    border-bottom: 1px solid black; /* Add border between the up-button and down-button */\n"
"}\n"
"\n"
"QDateEdit::down-button {\n"
"    subcontrol-position: bottom right;\n"
"}\n"
"\n"
"QDateEdit::up-arrow, QDateEdit::down-arrow {\n"
"    width: 7px;\n"
"    height: 7px;\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"QDateEdit::up-button:pressed, QDateEdit::down-button:pressed {\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QDateEdit::up-button:hover, QDateEdit::down-button:hover {\n"
"    background-color: #e0e0e0;\n"
"}\n"
"\n"
"\n"
"#general_savebutton {\n"
"    /* General styling for the checkbox */\n"
"    font-family: \'Roboto\';\n"
"    color: rgb(24, 45, 83); /* Text color */\n"
"    font-size: 16px; /* Font size */\n"
"    spacing: 5px; /* Space between the indicator and the text */\n"
"    background-color: transparent; /* Make the background transparent */\n"
"}\n"
"\n"
"#general_savebutton::indicator {\n"
"    /* Styling for the indicator (the square part) */\n"
"    width: 150px; /* Width of the indicator */\n"
"    height: 150px; /* Height of the indicator */\n"
"}\n"
"\n"
"#general_savebutton::indicator::unchecked {\n"
"    /* Styling for the indicator when the checkbox is unchecked */\n"
"    background-color: transparent; /* Background color */\n"
"    border: transparent; /* Border color and width */\n"
"    border-radius: 4px; /* Optional: if you want rounded corners for the square */\n"
"     image: url(:/icon/icon/notsaved.png); /* Absolute path to the checkmark image */\n"
"}\n"
"\n"
"\n"
"\n"
"#general_savebutton::indicator::checked {\n"
"    /* Styling for the indicator when the checkbox is checked */\n"
"    background-color: transparent; /* Background color */\n"
"    border: transparent; /* Border color and width */\n"
"    border-radius: 4px; /* Optional: if you want rounded corners for the square */\n"
"    image: url(:/icon/icon/saved.png); /* Absolute path to the checkmark image */\n"
"    \n"
"}\n"
"\n"
"\n"
"")
        self.GE_widget.setObjectName("GE_widget")
        self.gridLayout_9 = QtWidgets.QGridLayout(self.GE_widget)
        self.gridLayout_9.setObjectName("gridLayout_9")
        self.TitleLayout = QtWidgets.QHBoxLayout()
        self.TitleLayout.setObjectName("TitleLayout")
        spacerItem96 = QtWidgets.QSpacerItem(50, 97, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.TitleLayout.addItem(spacerItem96)
        self.GeneralTabTitle_label = QtWidgets.QLabel(self.GE_widget)
        self.GeneralTabTitle_label.setMinimumSize(QtCore.QSize(830, 100))
        self.GeneralTabTitle_label.setMaximumSize(QtCore.QSize(830, 100))
        self.GeneralTabTitle_label.setObjectName("GeneralTabTitle_label")
        self.TitleLayout.addWidget(self.GeneralTabTitle_label)
        spacerItem97 = QtWidgets.QSpacerItem(50, 97, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.TitleLayout.addItem(spacerItem97)
        self.gridLayout_9.addLayout(self.TitleLayout, 0, 0, 1, 1)
        self.input_area_verical_lyt = QtWidgets.QVBoxLayout()
        self.input_area_verical_lyt.setSpacing(30)
        self.input_area_verical_lyt.setObjectName("input_area_verical_lyt")
        self.name_widget = QtWidgets.QWidget(self.GE_widget)
        self.name_widget.setMinimumSize(QtCore.QSize(1168, 112))
        self.name_widget.setMaximumSize(QtCore.QSize(1168, 112))
        self.name_widget.setStyleSheet("")
        self.name_widget.setObjectName("name_widget")
        self.gridLayout = QtWidgets.QGridLayout(self.name_widget)
        self.gridLayout.setContentsMargins(5, 5, 5, 5)
        self.gridLayout.setSpacing(5)
        self.gridLayout.setObjectName("gridLayout")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setSpacing(3)
        self.horizontalLayout.setObjectName("horizontalLayout")
        spacerItem98 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem98)
        self.general_name_label = QtWidgets.QLabel(self.name_widget)
        self.general_name_label.setMinimumSize(QtCore.QSize(260, 50))
        self.general_name_label.setMaximumSize(QtCore.QSize(260, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto ")
        font.setPointSize(-1)
        font.setBold(True)
        font.setWeight(75)
        self.general_name_label.setFont(font)
        self.general_name_label.setStyleSheet("")
        self.general_name_label.setObjectName("general_name_label")
        self.horizontalLayout.addWidget(self.general_name_label)
        spacerItem99 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem99)
        self.name_Insert = QtWidgets.QLineEdit(self.name_widget)
        self.name_Insert.setMinimumSize(QtCore.QSize(550, 50))
        self.name_Insert.setMaximumSize(QtCore.QSize(390, 50))
        self.name_Insert.setText("")
        self.name_Insert.setObjectName("name_Insert")
        self.horizontalLayout.addWidget(self.name_Insert)
        spacerItem100 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem100)
        self.name_vertical_line = QtWidgets.QFrame(self.name_widget)
        self.name_vertical_line.setMinimumSize(QtCore.QSize(0, 100))
        self.name_vertical_line.setMaximumSize(QtCore.QSize(16777215, 100))
        self.name_vertical_line.setFrameShape(QtWidgets.QFrame.VLine)
        self.name_vertical_line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.name_vertical_line.setObjectName("name_vertical_line")
        self.horizontalLayout.addWidget(self.name_vertical_line)
        spacerItem101 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem101)
        self.name_checkBox = QtWidgets.QCheckBox(self.name_widget)
        self.name_checkBox.setMinimumSize(QtCore.QSize(100, 100))
        self.name_checkBox.setMaximumSize(QtCore.QSize(100, 100))
        self.name_checkBox.setText("")
        self.name_checkBox.setIconSize(QtCore.QSize(120, 120))
        self.name_checkBox.setObjectName("name_checkBox")
        self.horizontalLayout.addWidget(self.name_checkBox)
        spacerItem102 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem102)
        self.gridLayout.addLayout(self.horizontalLayout, 0, 0, 1, 1)
        self.input_area_verical_lyt.addWidget(self.name_widget)
        self.school_widget = QtWidgets.QWidget(self.GE_widget)
        self.school_widget.setMinimumSize(QtCore.QSize(1168, 112))
        self.school_widget.setMaximumSize(QtCore.QSize(1168, 112))
        self.school_widget.setStyleSheet("")
        self.school_widget.setObjectName("school_widget")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.school_widget)
        self.gridLayout_2.setContentsMargins(5, 5, 5, 5)
        self.gridLayout_2.setSpacing(5)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setSpacing(3)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        spacerItem103 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_2.addItem(spacerItem103)
        self.general_school_label = QtWidgets.QLabel(self.school_widget)
        self.general_school_label.setMinimumSize(QtCore.QSize(260, 50))
        self.general_school_label.setMaximumSize(QtCore.QSize(260, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto ")
        font.setPointSize(-1)
        font.setBold(True)
        font.setWeight(75)
        self.general_school_label.setFont(font)
        self.general_school_label.setStyleSheet("")
        self.general_school_label.setObjectName("general_school_label")
        self.horizontalLayout_2.addWidget(self.general_school_label)
        spacerItem104 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_2.addItem(spacerItem104)
        self.name_Insert_3 = QtWidgets.QLineEdit(self.school_widget)
        self.name_Insert_3.setMinimumSize(QtCore.QSize(550, 50))
        self.name_Insert_3.setMaximumSize(QtCore.QSize(390, 50))
        self.name_Insert_3.setText("")
        self.name_Insert_3.setObjectName("name_Insert_3")
        self.horizontalLayout_2.addWidget(self.name_Insert_3)
        spacerItem105 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_2.addItem(spacerItem105)
        self.name_vertical_line_2 = QtWidgets.QFrame(self.school_widget)
        self.name_vertical_line_2.setMinimumSize(QtCore.QSize(0, 100))
        self.name_vertical_line_2.setMaximumSize(QtCore.QSize(16777215, 100))
        self.name_vertical_line_2.setFrameShape(QtWidgets.QFrame.VLine)
        self.name_vertical_line_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.name_vertical_line_2.setObjectName("name_vertical_line_2")
        self.horizontalLayout_2.addWidget(self.name_vertical_line_2)
        spacerItem106 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_2.addItem(spacerItem106)
        self.school_checkBox = QtWidgets.QCheckBox(self.school_widget)
        self.school_checkBox.setMinimumSize(QtCore.QSize(100, 100))
        self.school_checkBox.setMaximumSize(QtCore.QSize(100, 100))
        self.school_checkBox.setText("")
        self.school_checkBox.setIconSize(QtCore.QSize(120, 120))
        self.school_checkBox.setObjectName("school_checkBox")
        self.horizontalLayout_2.addWidget(self.school_checkBox)
        spacerItem107 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_2.addItem(spacerItem107)
        self.gridLayout_2.addLayout(self.horizontalLayout_2, 0, 0, 1, 1)
        self.input_area_verical_lyt.addWidget(self.school_widget)
        self.gender_widget = QtWidgets.QWidget(self.GE_widget)
        self.gender_widget.setMinimumSize(QtCore.QSize(1168, 112))
        self.gender_widget.setMaximumSize(QtCore.QSize(1168, 112))
        self.gender_widget.setStyleSheet("")
        self.gender_widget.setObjectName("gender_widget")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.gender_widget)
        self.gridLayout_3.setContentsMargins(5, 5, 5, 5)
        self.gridLayout_3.setSpacing(5)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setSpacing(10)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        spacerItem108 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_3.addItem(spacerItem108)
        self.general_gender_label = QtWidgets.QLabel(self.gender_widget)
        self.general_gender_label.setMinimumSize(QtCore.QSize(110, 50))
        self.general_gender_label.setMaximumSize(QtCore.QSize(110, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto ")
        font.setPointSize(-1)
        font.setBold(True)
        font.setWeight(75)
        self.general_gender_label.setFont(font)
        self.general_gender_label.setStyleSheet("")
        self.general_gender_label.setObjectName("general_gender_label")
        self.horizontalLayout_3.addWidget(self.general_gender_label)
        spacerItem109 = QtWidgets.QSpacerItem(300, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_3.addItem(spacerItem109)
        self.name_vertical_line_4 = QtWidgets.QFrame(self.gender_widget)
        self.name_vertical_line_4.setMinimumSize(QtCore.QSize(0, 100))
        self.name_vertical_line_4.setMaximumSize(QtCore.QSize(16777215, 100))
        self.name_vertical_line_4.setFrameShape(QtWidgets.QFrame.VLine)
        self.name_vertical_line_4.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.name_vertical_line_4.setObjectName("name_vertical_line_4")
        self.horizontalLayout_3.addWidget(self.name_vertical_line_4)
        spacerItem110 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_3.addItem(spacerItem110)
        self.general_male_label = QtWidgets.QLabel(self.gender_widget)
        self.general_male_label.setMinimumSize(QtCore.QSize(70, 50))
        self.general_male_label.setMaximumSize(QtCore.QSize(70, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto ")
        font.setPointSize(-1)
        font.setBold(True)
        font.setWeight(75)
        self.general_male_label.setFont(font)
        self.general_male_label.setStyleSheet("")
        self.general_male_label.setObjectName("general_male_label")
        self.horizontalLayout_3.addWidget(self.general_male_label)
        spacerItem111 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_3.addItem(spacerItem111)
        self.male_checkBox = QtWidgets.QCheckBox(self.gender_widget)
        self.male_checkBox.setMinimumSize(QtCore.QSize(100, 100))
        self.male_checkBox.setMaximumSize(QtCore.QSize(100, 100))
        self.male_checkBox.setText("")
        self.male_checkBox.setIconSize(QtCore.QSize(120, 120))
        self.male_checkBox.setObjectName("male_checkBox")
        self.horizontalLayout_3.addWidget(self.male_checkBox)
        spacerItem112 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_3.addItem(spacerItem112)
        self.name_vertical_line_3 = QtWidgets.QFrame(self.gender_widget)
        self.name_vertical_line_3.setMinimumSize(QtCore.QSize(0, 100))
        self.name_vertical_line_3.setMaximumSize(QtCore.QSize(16777215, 100))
        self.name_vertical_line_3.setFrameShape(QtWidgets.QFrame.VLine)
        self.name_vertical_line_3.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.name_vertical_line_3.setObjectName("name_vertical_line_3")
        self.horizontalLayout_3.addWidget(self.name_vertical_line_3)
        self.general_female_label = QtWidgets.QLabel(self.gender_widget)
        self.general_female_label.setMinimumSize(QtCore.QSize(100, 50))
        self.general_female_label.setMaximumSize(QtCore.QSize(100, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto ")
        font.setPointSize(-1)
        font.setBold(True)
        font.setWeight(75)
        self.general_female_label.setFont(font)
        self.general_female_label.setStyleSheet("")
        self.general_female_label.setObjectName("general_female_label")
        self.horizontalLayout_3.addWidget(self.general_female_label)
        spacerItem113 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_3.addItem(spacerItem113)
        self.female_checkBox = QtWidgets.QCheckBox(self.gender_widget)
        self.female_checkBox.setMinimumSize(QtCore.QSize(100, 100))
        self.female_checkBox.setMaximumSize(QtCore.QSize(100, 100))
        self.female_checkBox.setText("")
        self.female_checkBox.setIconSize(QtCore.QSize(120, 120))
        self.female_checkBox.setObjectName("female_checkBox")
        self.horizontalLayout_3.addWidget(self.female_checkBox)
        spacerItem114 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_3.addItem(spacerItem114)
        self.gridLayout_3.addLayout(self.horizontalLayout_3, 0, 0, 1, 1)
        self.input_area_verical_lyt.addWidget(self.gender_widget)
        self.general_date_instructions = QtWidgets.QLabel(self.GE_widget)
        self.general_date_instructions.setMinimumSize(QtCore.QSize(1168, 30))
        self.general_date_instructions.setMaximumSize(QtCore.QSize(1168, 30))
        self.general_date_instructions.setObjectName("general_date_instructions")
        self.input_area_verical_lyt.addWidget(self.general_date_instructions)
        self.dates_widget = QtWidgets.QWidget(self.GE_widget)
        self.dates_widget.setMinimumSize(QtCore.QSize(1168, 112))
        self.dates_widget.setMaximumSize(QtCore.QSize(1168, 112))
        self.dates_widget.setStyleSheet("")
        self.dates_widget.setObjectName("dates_widget")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.dates_widget)
        self.gridLayout_4.setContentsMargins(5, 5, 5, 5)
        self.gridLayout_4.setSpacing(5)
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setSpacing(20)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.general_dateofBirth_label = QtWidgets.QLabel(self.dates_widget)
        self.general_dateofBirth_label.setMinimumSize(QtCore.QSize(175, 50))
        self.general_dateofBirth_label.setMaximumSize(QtCore.QSize(175, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto ")
        font.setPointSize(-1)
        font.setBold(True)
        font.setWeight(75)
        self.general_dateofBirth_label.setFont(font)
        self.general_dateofBirth_label.setStyleSheet("")
        self.general_dateofBirth_label.setObjectName("general_dateofBirth_label")
        self.horizontalLayout_4.addWidget(self.general_dateofBirth_label)
        self.general_dateofBrith_Edit = QtWidgets.QDateEdit(self.dates_widget)
        self.general_dateofBrith_Edit.setMinimumSize(QtCore.QSize(180, 60))
        self.general_dateofBrith_Edit.setMaximumSize(QtCore.QSize(180, 60))
        self.general_dateofBrith_Edit.setStyleSheet("\n"
"")
        self.general_dateofBrith_Edit.setDate(QtCore.QDate(2008, 1, 1))
        self.general_dateofBrith_Edit.setObjectName("general_dateofBrith_Edit")
        self.horizontalLayout_4.addWidget(self.general_dateofBrith_Edit)
        self.dateofBirth_checkBox = QtWidgets.QCheckBox(self.dates_widget)
        self.dateofBirth_checkBox.setMinimumSize(QtCore.QSize(100, 100))
        self.dateofBirth_checkBox.setMaximumSize(QtCore.QSize(100, 100))
        self.dateofBirth_checkBox.setText("")
        self.dateofBirth_checkBox.setIconSize(QtCore.QSize(120, 120))
        self.dateofBirth_checkBox.setObjectName("dateofBirth_checkBox")
        self.horizontalLayout_4.addWidget(self.dateofBirth_checkBox)
        self.name_vertical_line_5 = QtWidgets.QFrame(self.dates_widget)
        self.name_vertical_line_5.setMinimumSize(QtCore.QSize(0, 100))
        self.name_vertical_line_5.setMaximumSize(QtCore.QSize(16777215, 100))
        self.name_vertical_line_5.setFrameShape(QtWidgets.QFrame.VLine)
        self.name_vertical_line_5.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.name_vertical_line_5.setObjectName("name_vertical_line_5")
        self.horizontalLayout_4.addWidget(self.name_vertical_line_5)
        spacerItem115 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_4.addItem(spacerItem115)
        self.general_todaysdate_label = QtWidgets.QLabel(self.dates_widget)
        self.general_todaysdate_label.setMinimumSize(QtCore.QSize(177, 50))
        self.general_todaysdate_label.setMaximumSize(QtCore.QSize(177, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto ")
        font.setPointSize(-1)
        font.setBold(True)
        font.setWeight(75)
        self.general_todaysdate_label.setFont(font)
        self.general_todaysdate_label.setStyleSheet("")
        self.general_todaysdate_label.setObjectName("general_todaysdate_label")
        self.horizontalLayout_4.addWidget(self.general_todaysdate_label)
        self.general_todaysDate_Edit = QtWidgets.QDateEdit(self.dates_widget)
        self.general_todaysDate_Edit.setMinimumSize(QtCore.QSize(180, 60))
        self.general_todaysDate_Edit.setMaximumSize(QtCore.QSize(180, 60))
        self.general_todaysDate_Edit.setStyleSheet("\n"
"")
        self.general_todaysDate_Edit.setDate(QtCore.QDate(2024, 2, 3))
        self.general_todaysDate_Edit.setObjectName("general_todaysDate_Edit")
        self.horizontalLayout_4.addWidget(self.general_todaysDate_Edit)
        self.todaysDate_checkBox = QtWidgets.QCheckBox(self.dates_widget)
        self.todaysDate_checkBox.setMinimumSize(QtCore.QSize(100, 100))
        self.todaysDate_checkBox.setMaximumSize(QtCore.QSize(100, 100))
        self.todaysDate_checkBox.setText("")
        self.todaysDate_checkBox.setIconSize(QtCore.QSize(120, 120))
        self.todaysDate_checkBox.setObjectName("todaysDate_checkBox")
        self.horizontalLayout_4.addWidget(self.todaysDate_checkBox)
        self.gridLayout_4.addLayout(self.horizontalLayout_4, 0, 0, 1, 1)
        self.input_area_verical_lyt.addWidget(self.dates_widget)
        self.gridLayout_9.addLayout(self.input_area_verical_lyt, 2, 0, 1, 1)
        self.general_savebutton = QtWidgets.QCheckBox(self.GE_widget)
        self.general_savebutton.setMinimumSize(QtCore.QSize(150, 80))
        self.general_savebutton.setMaximumSize(QtCore.QSize(150, 80))
        self.general_savebutton.setText("")
        self.general_savebutton.setIconSize(QtCore.QSize(100, 100))
        self.general_savebutton.setObjectName("general_savebutton")
        self.gridLayout_9.addWidget(self.general_savebutton, 3, 0, 1, 1)
        self.general_instructions = QtWidgets.QLabel(self.GE_widget)
        self.general_instructions.setMinimumSize(QtCore.QSize(1168, 60))
        self.general_instructions.setMaximumSize(QtCore.QSize(1168, 60))
        self.general_instructions.setObjectName("general_instructions")
        self.gridLayout_9.addWidget(self.general_instructions, 1, 0, 1, 1)
        self.General_Page_gridLayout.addWidget(self.GE_widget, 0, 1, 1, 1)
        self.stackedWidget.addWidget(self.General_Page)





        self.GE_Preview_Page = QtWidgets.QWidget()
        self.GE_Preview_Page.setObjectName("GE_Preview_Page")
        self.GE_Preview_Page_gridLayout = QtWidgets.QGridLayout(self.GE_Preview_Page)
        self.GE_Preview_Page_gridLayout.setObjectName("GE_Preview_Page_gridLayout")
        self.GE_Preview_Page_widget = QtWidgets.QWidget(self.GE_Preview_Page)
        self.GE_Preview_Page_widget.setStyleSheet("QLabel {\n"
"    font-family: \'Roboto \';\n"
"    font-size: 30px;\n"
"    font-weight: bold;\n"
"    color: white; /* Set the font color to white */\n"
"    background-color: transparent; /* Make the background transparent */\n"
"}\n"
"\n"
"#preview_instructions, #preview_date_instructions {\n"
"    font-family: \'Roboto \';\n"
"    font-size: 20px;\n"
"    font-weight: bold;\n"
"    color: rgb(24, 45, 83 ); /* Set the font color to white */\n"
"    background-color: transparent; /* Make the background transparent */\n"
"}\n"
"\n"
"#PreviewTabTitle_label {\n"
"    font-family: \'Roboto Cn\'; /* Specify the font family */\n"
"    font-size: 100px; /* Specify the font size */\n"
"    font-weight: bold; /* Make the font bold */\n"
"    color: white; /* Set the font color */\n"
"   border: 3px solid  rgb(24, 45, 83 ); /* This adds a 3px solid blue border around the name_widget */\n"
"    background-color: rgb(24, 45, 83 );\n"
"    border-radius: 20px; /* Optional: if you want rounded corners */\n"
"\n"
"}\n"
"\n"
"\n"
"\n"
"#preview_name_widget, #preview_school_widget, #preview_gender_widget, #preview_dates_widget   {\n"
"    color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"    border: 3px solid rgb(24, 45, 83); /* This adds a 3px solid blue border */\n"
"    background-color: rgb(31, 149, 239);\n"
"    border-radius: 40px; /* Optional: if you want rounded corners */\n"
"}\n"
"\n"
"Line { /* This applies to all Line objects within the name_widget */\n"
"    background-color: rgb(24, 45, 83 ); /* Change the color of the line */\n"
"   \n"
"}\n"
"\n"
"/*background-color: rgb(31, 149, 239);*/\n"
"\n"
"QLineEdit {\n"
"    /* General styling for the checkbox */\n"
"    font-family: \'Roboto Cn\';\n"
"    color: rgb(24, 45, 83 ); /* Text color */\n"
"    font-size: 25px; /* Font size */\n"
"    border: 2px solid  rgb(24, 45, 83 ); /* This adds a 3px solid blue border around the name_widget */\n"
"    background-color: white;\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"    padding-left: 15px; /* Space between the text and the left margin */\n"
"}\n"
"\n"
"\n"
"\n"
"QCheckBox {\n"
"    /* General styling for the checkbox */\n"
"    font-family: \'Roboto\';\n"
"    color: rgb(24, 45, 83); /* Text color */\n"
"    font-size: 16px; /* Font size */\n"
"    spacing: 5px; /* Space between the indicator and the text */\n"
"    background-color: transparent; /* Make the background transparent */\n"
"}\n"
"\n"
"QCheckBox::indicator {\n"
"    /* Styling for the indicator (the square part) */\n"
"    width: 100px; /* Width of the indicator */\n"
"    height: 100px; /* Height of the indicator */\n"
"}\n"
"\n"
"QCheckBox::indicator::unchecked {\n"
"    /* Styling for the indicator when the checkbox is unchecked */\n"
"    background-color: transparent; /* Background color */\n"
"    border: transparent; /* Border color and width */\n"
"    border-radius: 4px; /* Optional: if you want rounded corners for the square */\n"
"     image: url(:/icon/icon/tickhere.png); /* Absolute path to the checkmark image */\n"
"}\n"
"\n"
"\n"
"\n"
"QCheckBox::indicator::checked {\n"
"    /* Styling for the indicator when the checkbox is checked */\n"
"    background-color: transparent; /* Background color */\n"
"    border: transparent; /* Border color and width */\n"
"    border-radius: 4px; /* Optional: if you want rounded corners for the square */\n"
"    image: url(:/icon/icon/tickmark.png); /* Absolute path to the checkmark image */\n"
"    \n"
"}\n"
"\n"
"QDateEdit {\n"
"/* General styling for the checkbox */\n"
"    font-family: \'Roboto Cn\';\n"
"    color: rgb(24, 45, 83 ); /* Text color */\n"
"    font-size: 25px; /* Font size */\n"
"    background-color: white;\n"
"    color: black;\n"
"    border: 2px solid black;\n"
"    border-radius: 15px;\n"
"    padding-left: 20px; /* Adjust left padding to center text */\n"
"    margin: 2px;\n"
"}\n"
"\n"
"QDateEdit::up-button, QDateEdit::down-button {\n"
"    subcontrol-origin: border;\n"
"    width: 15px;\n"
"    border-left: 1px solid black;\n"
"}\n"
"\n"
"QDateEdit::up-button {\n"
"    subcontrol-position: top right;\n"
"    border-bottom: 1px solid black; /* Add border between the up-button and down-button */\n"
"}\n"
"\n"
"QDateEdit::down-button {\n"
"    subcontrol-position: bottom right;\n"
"}\n"
"\n"
"QDateEdit::up-arrow, QDateEdit::down-arrow {\n"
"    width: 7px;\n"
"    height: 7px;\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"QDateEdit::up-button:pressed, QDateEdit::down-button:pressed {\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QDateEdit::up-button:hover, QDateEdit::down-button:hover {\n"
"    background-color: #e0e0e0;\n"
"}\n"
"\n"
"\n"
"#preview_savebutton {\n"
"    /* General styling for the checkbox */\n"
"    font-family: \'Roboto\';\n"
"    color: rgb(24, 45, 83); /* Text color */\n"
"    font-size: 16px; /* Font size */\n"
"    spacing: 5px; /* Space between the indicator and the text */\n"
"    background-color: transparent; /* Make the background transparent */\n"
"}\n"
"\n"
"#preview_savebutton::indicator {\n"
"    /* Styling for the indicator (the square part) */\n"
"    width: 150px; /* Width of the indicator */\n"
"    height: 150px; /* Height of the indicator */\n"
"}\n"
"\n"
"#preview_savebutton::indicator::unchecked {\n"
"    /* Styling for the indicator when the checkbox is unchecked */\n"
"    background-color: transparent; /* Background color */\n"
"    border: transparent; /* Border color and width */\n"
"    border-radius: 4px; /* Optional: if you want rounded corners for the square */\n"
"     image: url(:/icon/icon/notsaved.png); /* Absolute path to the checkmark image */\n"
"}\n"
"\n"
"\n"
"\n"
"#preview_savebutton::indicator::checked {\n"
"    /* Styling for the indicator when the checkbox is checked */\n"
"    background-color: transparent; /* Background color */\n"
"    border: transparent; /* Border color and width */\n"
"    border-radius: 4px; /* Optional: if you want rounded corners for the square */\n"
"    image: url(:/icon/icon/saved.png); /* Absolute path to the checkmark image */\n"
"    \n"
"}\n"
"\n"
"\n"
"")
        self.GE_Preview_Page_widget.setObjectName("GE_Preview_Page_widget")
        self.gridLayout_14 = QtWidgets.QGridLayout(self.GE_Preview_Page_widget)
        self.gridLayout_14.setObjectName("gridLayout_14")
        self.TitleLayout_2 = QtWidgets.QHBoxLayout()
        self.TitleLayout_2.setObjectName("TitleLayout_2")
        spacerItem116 = QtWidgets.QSpacerItem(50, 97, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.TitleLayout_2.addItem(spacerItem116)
        self.PreviewTabTitle_label = QtWidgets.QLabel(self.GE_Preview_Page_widget)
        self.PreviewTabTitle_label.setMinimumSize(QtCore.QSize(830, 100))
        self.PreviewTabTitle_label.setMaximumSize(QtCore.QSize(830, 100))
        self.PreviewTabTitle_label.setObjectName("PreviewTabTitle_label")
        self.TitleLayout_2.addWidget(self.PreviewTabTitle_label)
        spacerItem117 = QtWidgets.QSpacerItem(50, 97, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.TitleLayout_2.addItem(spacerItem117)
        self.gridLayout_14.addLayout(self.TitleLayout_2, 0, 0, 1, 1)
        self.preview_instructions = QtWidgets.QLabel(self.GE_Preview_Page_widget)
        self.preview_instructions.setMinimumSize(QtCore.QSize(1168, 60))
        self.preview_instructions.setMaximumSize(QtCore.QSize(1168, 60))
        self.preview_instructions.setObjectName("preview_instructions")
        self.gridLayout_14.addWidget(self.preview_instructions, 1, 0, 1, 1)
        self.input_area_verical_lyt_2 = QtWidgets.QVBoxLayout()
        self.input_area_verical_lyt_2.setSpacing(30)
        self.input_area_verical_lyt_2.setObjectName("input_area_verical_lyt_2")
        self.preview_name_widget = QtWidgets.QWidget(self.GE_Preview_Page_widget)
        self.preview_name_widget.setMinimumSize(QtCore.QSize(1168, 112))
        self.preview_name_widget.setMaximumSize(QtCore.QSize(1168, 112))
        self.preview_name_widget.setStyleSheet("")
        self.preview_name_widget.setObjectName("preview_name_widget")
        self.gridLayout_10 = QtWidgets.QGridLayout(self.preview_name_widget)
        self.gridLayout_10.setContentsMargins(5, 5, 5, 5)
        self.gridLayout_10.setSpacing(5)
        self.gridLayout_10.setObjectName("gridLayout_10")
        self.horizontalLayout_9 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_9.setSpacing(3)
        self.horizontalLayout_9.setObjectName("horizontalLayout_9")
        spacerItem118 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_9.addItem(spacerItem118)
        self.preview_name_label = QtWidgets.QLabel(self.preview_name_widget)
        self.preview_name_label.setMinimumSize(QtCore.QSize(260, 50))
        self.preview_name_label.setMaximumSize(QtCore.QSize(260, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto ")
        font.setPointSize(-1)
        font.setBold(True)
        font.setWeight(75)
        self.preview_name_label.setFont(font)
        self.preview_name_label.setStyleSheet("")
        self.preview_name_label.setObjectName("preview_name_label")
        self.horizontalLayout_9.addWidget(self.preview_name_label)
        spacerItem119 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_9.addItem(spacerItem119)
        self.preview_name_display = QtWidgets.QLineEdit(self.preview_name_widget)
        self.preview_name_display.setMinimumSize(QtCore.QSize(300, 50))
        self.preview_name_display.setMaximumSize(QtCore.QSize(300, 50))
        self.preview_name_display.setText("")
        self.preview_name_display.setObjectName("preview_name_display")
        self.horizontalLayout_9.addWidget(self.preview_name_display)
        spacerItem120 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_9.addItem(spacerItem120)
        self.name_vertical_line_6 = QtWidgets.QFrame(self.preview_name_widget)
        self.name_vertical_line_6.setMinimumSize(QtCore.QSize(0, 100))
        self.name_vertical_line_6.setMaximumSize(QtCore.QSize(16777215, 100))
        self.name_vertical_line_6.setFrameShape(QtWidgets.QFrame.VLine)
        self.name_vertical_line_6.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.name_vertical_line_6.setObjectName("name_vertical_line_6")
        self.horizontalLayout_9.addWidget(self.name_vertical_line_6)
        spacerItem121 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_9.addItem(spacerItem121)
        self.preview_school_label = QtWidgets.QLabel(self.preview_name_widget)
        self.preview_school_label.setMinimumSize(QtCore.QSize(100, 50))
        self.preview_school_label.setMaximumSize(QtCore.QSize(100, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto ")
        font.setPointSize(-1)
        font.setBold(True)
        font.setWeight(75)
        self.preview_school_label.setFont(font)
        self.preview_school_label.setStyleSheet("")
        self.preview_school_label.setObjectName("preview_school_label")
        self.horizontalLayout_9.addWidget(self.preview_school_label)
        spacerItem122 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_9.addItem(spacerItem122)
        self.preview_school_display = QtWidgets.QLineEdit(self.preview_name_widget)
        self.preview_school_display.setMinimumSize(QtCore.QSize(300, 50))
        self.preview_school_display.setMaximumSize(QtCore.QSize(300, 50))
        self.preview_school_display.setText("")
        self.preview_school_display.setObjectName("preview_school_display")
        self.horizontalLayout_9.addWidget(self.preview_school_display)
        spacerItem123 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_9.addItem(spacerItem123)
        self.gridLayout_10.addLayout(self.horizontalLayout_9, 0, 0, 1, 1)
        self.input_area_verical_lyt_2.addWidget(self.preview_name_widget)
        self.preview_gender_widget = QtWidgets.QWidget(self.GE_Preview_Page_widget)
        self.preview_gender_widget.setMinimumSize(QtCore.QSize(1168, 112))
        self.preview_gender_widget.setMaximumSize(QtCore.QSize(1168, 112))
        self.preview_gender_widget.setStyleSheet("")
        self.preview_gender_widget.setObjectName("preview_gender_widget")
        self.gridLayout_12 = QtWidgets.QGridLayout(self.preview_gender_widget)
        self.gridLayout_12.setContentsMargins(5, 5, 5, 5)
        self.gridLayout_12.setSpacing(5)
        self.gridLayout_12.setObjectName("gridLayout_12")
        self.horizontalLayout_11 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_11.setSpacing(10)
        self.horizontalLayout_11.setObjectName("horizontalLayout_11")
        spacerItem124 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_11.addItem(spacerItem124)
        self.preview_gender_label = QtWidgets.QLabel(self.preview_gender_widget)
        self.preview_gender_label.setMinimumSize(QtCore.QSize(110, 50))
        self.preview_gender_label.setMaximumSize(QtCore.QSize(110, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto ")
        font.setPointSize(-1)
        font.setBold(True)
        font.setWeight(75)
        self.preview_gender_label.setFont(font)
        self.preview_gender_label.setStyleSheet("")
        self.preview_gender_label.setObjectName("preview_gender_label")
        self.horizontalLayout_11.addWidget(self.preview_gender_label)
        spacerItem125 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_11.addItem(spacerItem125)
        self.name_vertical_line_14 = QtWidgets.QFrame(self.preview_gender_widget)
        self.name_vertical_line_14.setMinimumSize(QtCore.QSize(0, 100))
        self.name_vertical_line_14.setMaximumSize(QtCore.QSize(16777215, 100))
        self.name_vertical_line_14.setFrameShape(QtWidgets.QFrame.VLine)
        self.name_vertical_line_14.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.name_vertical_line_14.setObjectName("name_vertical_line_14")
        self.horizontalLayout_11.addWidget(self.name_vertical_line_14)
        spacerItem126 = QtWidgets.QSpacerItem(300, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_11.addItem(spacerItem126)
        self.preview_gender_display = QtWidgets.QLineEdit(self.preview_gender_widget)
        self.preview_gender_display.setMinimumSize(QtCore.QSize(150, 50))
        self.preview_gender_display.setMaximumSize(QtCore.QSize(150, 50))
        self.preview_gender_display.setText("")
        self.preview_gender_display.setObjectName("preview_gender_display")
        self.horizontalLayout_11.addWidget(self.preview_gender_display)
        spacerItem127 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_11.addItem(spacerItem127)
        self.gridLayout_12.addLayout(self.horizontalLayout_11, 0, 0, 1, 1)
        self.input_area_verical_lyt_2.addWidget(self.preview_gender_widget)
        self.preview_date_instructions = QtWidgets.QLabel(self.GE_Preview_Page_widget)
        self.preview_date_instructions.setMinimumSize(QtCore.QSize(1168, 30))
        self.preview_date_instructions.setMaximumSize(QtCore.QSize(1168, 30))
        self.preview_date_instructions.setObjectName("preview_date_instructions")
        self.input_area_verical_lyt_2.addWidget(self.preview_date_instructions)
        self.preview_dates_widget = QtWidgets.QWidget(self.GE_Preview_Page_widget)
        self.preview_dates_widget.setMinimumSize(QtCore.QSize(1168, 112))
        self.preview_dates_widget.setMaximumSize(QtCore.QSize(1168, 112))
        self.preview_dates_widget.setStyleSheet("")
        self.preview_dates_widget.setObjectName("preview_dates_widget")
        self.gridLayout_13 = QtWidgets.QGridLayout(self.preview_dates_widget)
        self.gridLayout_13.setContentsMargins(5, 5, 5, 5)
        self.gridLayout_13.setSpacing(5)
        self.gridLayout_13.setObjectName("gridLayout_13")
        self.horizontalLayout_12 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_12.setSpacing(20)
        self.horizontalLayout_12.setObjectName("horizontalLayout_12")
        self.preview_dateofBirth_label_2 = QtWidgets.QLabel(self.preview_dates_widget)
        self.preview_dateofBirth_label_2.setMinimumSize(QtCore.QSize(175, 50))
        self.preview_dateofBirth_label_2.setMaximumSize(QtCore.QSize(175, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto ")
        font.setPointSize(-1)
        font.setBold(True)
        font.setWeight(75)
        self.preview_dateofBirth_label_2.setFont(font)
        self.preview_dateofBirth_label_2.setStyleSheet("")
        self.preview_dateofBirth_label_2.setObjectName("preview_dateofBirth_label_2")
        self.horizontalLayout_12.addWidget(self.preview_dateofBirth_label_2)
        self.preview_dateofBirth_display = QtWidgets.QLineEdit(self.preview_dates_widget)
        self.preview_dateofBirth_display.setMinimumSize(QtCore.QSize(150, 50))
        self.preview_dateofBirth_display.setMaximumSize(QtCore.QSize(150, 50))
        self.preview_dateofBirth_display.setText("")
        self.preview_dateofBirth_display.setObjectName("preview_dateofBirth_display")
        self.horizontalLayout_12.addWidget(self.preview_dateofBirth_display)
        self.name_vertical_line_16 = QtWidgets.QFrame(self.preview_dates_widget)
        self.name_vertical_line_16.setMinimumSize(QtCore.QSize(0, 100))
        self.name_vertical_line_16.setMaximumSize(QtCore.QSize(16777215, 100))
        self.name_vertical_line_16.setFrameShape(QtWidgets.QFrame.VLine)
        self.name_vertical_line_16.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.name_vertical_line_16.setObjectName("name_vertical_line_16")
        self.horizontalLayout_12.addWidget(self.name_vertical_line_16)
        spacerItem128 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_12.addItem(spacerItem128)
        self.preview_todaysdate_label = QtWidgets.QLabel(self.preview_dates_widget)
        self.preview_todaysdate_label.setMinimumSize(QtCore.QSize(177, 50))
        self.preview_todaysdate_label.setMaximumSize(QtCore.QSize(177, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto ")
        font.setPointSize(-1)
        font.setBold(True)
        font.setWeight(75)
        self.preview_todaysdate_label.setFont(font)
        self.preview_todaysdate_label.setStyleSheet("")
        self.preview_todaysdate_label.setObjectName("preview_todaysdate_label")
        self.horizontalLayout_12.addWidget(self.preview_todaysdate_label)
        self.preview_todaysdate_display = QtWidgets.QLineEdit(self.preview_dates_widget)
        self.preview_todaysdate_display.setMinimumSize(QtCore.QSize(150, 50))
        self.preview_todaysdate_display.setMaximumSize(QtCore.QSize(150, 50))
        self.preview_todaysdate_display.setText("")
        self.preview_todaysdate_display.setObjectName("preview_todaysdate_display")
        self.horizontalLayout_12.addWidget(self.preview_todaysdate_display)
        self.gridLayout_13.addLayout(self.horizontalLayout_12, 0, 0, 1, 1)
        self.input_area_verical_lyt_2.addWidget(self.preview_dates_widget)
        self.preview_school_widget = QtWidgets.QWidget(self.GE_Preview_Page_widget)
        self.preview_school_widget.setMinimumSize(QtCore.QSize(1168, 112))
        self.preview_school_widget.setMaximumSize(QtCore.QSize(1168, 112))
        self.preview_school_widget.setStyleSheet("")
        self.preview_school_widget.setObjectName("preview_school_widget")
        self.gridLayout_11 = QtWidgets.QGridLayout(self.preview_school_widget)
        self.gridLayout_11.setContentsMargins(5, 5, 5, 5)
        self.gridLayout_11.setSpacing(5)
        self.gridLayout_11.setObjectName("gridLayout_11")
        self.horizontalLayout_10 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_10.setSpacing(3)
        self.horizontalLayout_10.setObjectName("horizontalLayout_10")
        spacerItem129 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_10.addItem(spacerItem129)
        self.preview_stress_label = QtWidgets.QLabel(self.preview_school_widget)
        self.preview_stress_label.setMinimumSize(QtCore.QSize(100, 50))
        self.preview_stress_label.setMaximumSize(QtCore.QSize(100, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto ")
        font.setPointSize(-1)
        font.setBold(True)
        font.setWeight(75)
        self.preview_stress_label.setFont(font)
        self.preview_stress_label.setStyleSheet("")
        self.preview_stress_label.setObjectName("preview_stress_label")
        self.horizontalLayout_10.addWidget(self.preview_stress_label)
        spacerItem130 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_10.addItem(spacerItem130)
        self.preview_stress_display = QtWidgets.QLineEdit(self.preview_school_widget)
        self.preview_stress_display.setMinimumSize(QtCore.QSize(65, 50))
        self.preview_stress_display.setMaximumSize(QtCore.QSize(150, 50))
        self.preview_stress_display.setText("")
        self.preview_stress_display.setObjectName("preview_stress_display")
        self.horizontalLayout_10.addWidget(self.preview_stress_display)
        spacerItem131 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_10.addItem(spacerItem131)
        self.name_vertical_line_18 = QtWidgets.QFrame(self.preview_school_widget)
        self.name_vertical_line_18.setMinimumSize(QtCore.QSize(0, 100))
        self.name_vertical_line_18.setMaximumSize(QtCore.QSize(16777215, 100))
        self.name_vertical_line_18.setFrameShape(QtWidgets.QFrame.VLine)
        self.name_vertical_line_18.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.name_vertical_line_18.setObjectName("name_vertical_line_18")
        self.horizontalLayout_10.addWidget(self.name_vertical_line_18)
        spacerItem132 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_10.addItem(spacerItem132)
        self.preview_depression_label = QtWidgets.QLabel(self.preview_school_widget)
        self.preview_depression_label.setMinimumSize(QtCore.QSize(165, 50))
        self.preview_depression_label.setMaximumSize(QtCore.QSize(165, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto ")
        font.setPointSize(-1)
        font.setBold(True)
        font.setWeight(75)
        self.preview_depression_label.setFont(font)
        self.preview_depression_label.setStyleSheet("")
        self.preview_depression_label.setObjectName("preview_depression_label")
        self.horizontalLayout_10.addWidget(self.preview_depression_label)
        spacerItem133 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_10.addItem(spacerItem133)
        self.preview_depression_display = QtWidgets.QLineEdit(self.preview_school_widget)
        self.preview_depression_display.setMinimumSize(QtCore.QSize(65, 50))
        self.preview_depression_display.setMaximumSize(QtCore.QSize(150, 50))
        self.preview_depression_display.setText("")
        self.preview_depression_display.setObjectName("preview_depression_display")
        self.horizontalLayout_10.addWidget(self.preview_depression_display)
        spacerItem134 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_10.addItem(spacerItem134)
        self.name_vertical_line_13 = QtWidgets.QFrame(self.preview_school_widget)
        self.name_vertical_line_13.setMinimumSize(QtCore.QSize(0, 100))
        self.name_vertical_line_13.setMaximumSize(QtCore.QSize(16777215, 100))
        self.name_vertical_line_13.setFrameShape(QtWidgets.QFrame.VLine)
        self.name_vertical_line_13.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.name_vertical_line_13.setObjectName("name_vertical_line_13")
        self.horizontalLayout_10.addWidget(self.name_vertical_line_13)
        spacerItem135 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_10.addItem(spacerItem135)
        self.preview_selfEsteem_label = QtWidgets.QLabel(self.preview_school_widget)
        self.preview_selfEsteem_label.setMinimumSize(QtCore.QSize(165, 50))
        self.preview_selfEsteem_label.setMaximumSize(QtCore.QSize(165, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto ")
        font.setPointSize(-1)
        font.setBold(True)
        font.setWeight(75)
        self.preview_selfEsteem_label.setFont(font)
        self.preview_selfEsteem_label.setStyleSheet("")
        self.preview_selfEsteem_label.setObjectName("preview_selfEsteem_label")
        self.horizontalLayout_10.addWidget(self.preview_selfEsteem_label)
        spacerItem136 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_10.addItem(spacerItem136)
        self.preview_selfEsteem_display = QtWidgets.QLineEdit(self.preview_school_widget)
        self.preview_selfEsteem_display.setMinimumSize(QtCore.QSize(65, 50))
        self.preview_selfEsteem_display.setMaximumSize(QtCore.QSize(150, 50))
        self.preview_selfEsteem_display.setText("")
        self.preview_selfEsteem_display.setObjectName("preview_selfEsteem_display")
        self.horizontalLayout_10.addWidget(self.preview_selfEsteem_display)
        spacerItem137 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_10.addItem(spacerItem137)
        self.gridLayout_11.addLayout(self.horizontalLayout_10, 0, 0, 1, 1)
        self.input_area_verical_lyt_2.addWidget(self.preview_school_widget)
        self.gridLayout_14.addLayout(self.input_area_verical_lyt_2, 2, 0, 1, 1)
        self.preview_savebutton = QtWidgets.QCheckBox(self.GE_Preview_Page_widget)
        self.preview_savebutton.setMinimumSize(QtCore.QSize(150, 80))
        self.preview_savebutton.setMaximumSize(QtCore.QSize(150, 80))
        self.preview_savebutton.setText("")
        self.preview_savebutton.setIconSize(QtCore.QSize(100, 100))
        self.preview_savebutton.setObjectName("preview_savebutton")
        self.gridLayout_14.addWidget(self.preview_savebutton, 3, 0, 1, 1)
        self.GE_Preview_Page_gridLayout.addWidget(self.GE_Preview_Page_widget, 0, 0, 1, 1)
        self.stackedWidget.addWidget(self.GE_Preview_Page)







        self.Database = QtWidgets.QWidget()
        self.Database.setStyleSheet("#database_toolbar_widget{\n"
"\n"
"background-color: rgb(31, 149, 239);\n"
"}\n"
"QPushButton {\n"
"    color: white;\n"
"    text-align: left;\n"
"    height:70px;\n"
"    border: 1px;\n"
"    padding-left: 10px;\n"
"    border-radius: 5px; /* Round top left corner */\n"
"    \n"
"    background-color: rgb(31, 149, 239); /* Normal background color */\n"
"    font-size: 15px; /* Set the font size here */\n"
"    /* Other styles */\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: rgb(45, 45, 45); /* Darker background color on hover */\n"
"    color: rgb(220, 220, 220); /* Slightly lighter text color on hover */\n"
"}\n"
"\n"
"QPushButton:checked {\n"
" \n"
"     background-color: rgb(45, 45, 45); /* Darker background color on checked */\n"
"}\n"
"\n"
"#preview_savebutton {\n"
"    /* General styling for the checkbox */\n"
"    font-family: \'Roboto\';\n"
"    color: rgb(24, 45, 83); /* Text color */\n"
"    font-size: 16px; /* Font size */\n"
"    spacing: 5px; /* Space between the indicator and the text */\n"
"    background-color: transparent; /* Make the background transparent */\n"
"}\n"
"\n"
"#database_savebutton::indicator {\n"
"    /* Styling for the indicator (the square part) */\n"
"    width: 90px; /* Width of the indicator */\n"
"    height: 30px; /* Height of the indicator */\n"
"}\n"
"\n"
"#database_savebutton::indicator::unchecked {\n"
"    /* Styling for the indicator when the checkbox is unchecked */\n"
"    background-color: transparent; /* Background color */\n"
"    border: transparent; /* Border color and width */\n"
"    border-radius: 4px; /* Optional: if you want rounded corners for the square */\n"
"     image: url(:/icon/icon/notsaved.png); /* Absolute path to the checkmark image */\n"
"}\n"
"\n"
"\n"
"\n"
"#database_savebutton::indicator::checked {\n"
"    /* Styling for the indicator when the checkbox is checked */\n"
"    background-color: transparent; /* Background color */\n"
"    border: transparent; /* Border color and width */\n"
"    border-radius: 4px; /* Optional: if you want rounded corners for the square */\n"
"    image: url(:/icon/icon/saved.png); /* Absolute path to the checkmark image */\n"
"    \n"
"}")
        self.Database.setObjectName("Database")
        self.Database_gridLayout = QtWidgets.QGridLayout(self.Database)
        self.Database_gridLayout.setObjectName("Database_gridLayout")
        self.DatabaseTab = QtWidgets.QTableWidget(self.Database)
        self.DatabaseTab.setStyleSheet("QTableWidget {\n"
"    font-family: \"Roboto\"; /* Using the Roboto font */\n"
"    color: black; /* Text color */\n"
"    background-color: white; /* Background color */\n"
"    border: 1px solid #D6D6D6; /* Border color and width */\n"
"    gridline-color: #D6D6D6; /* Color of the grid lines */\n"
"    font-size: 18px; /* Increase font size */\n"
"}\n"
"\n"
"QTableWidget::item {\n"
"    padding: 10px; /* Increase padding inside cells */\n"
"    border: none; /* No borders for individual items */\n"
"}\n"
"\n"
"/* Hover effect for cells */\n"
"QTableWidget::item:hover {\n"
"    background-color: rgb(220, 240, 255); /* Light blue background for hover */\n"
"}\n"
"\n"
"QTableWidget::item:selected {\n"
"    background-color: #E0E0E0; /* Background color for selected items */\n"
"    color: black; /* Text color for selected items */\n"
"}\n"
"\n"
"QHeaderView::section {\n"
"    background-color: rgb(35, 155, 245); /* Slightly different blue */\n"
"    padding: 10px; /* Increase padding inside header cells */\n"
"    border: 1px solid #D6D6D6; /* Border for header cells */\n"
"    font-size: 18px; /* Larger font size for header text */\n"
"    font-weight: bold; /* Bold font weight for header text */\n"
"    color: white; /* Text color */\n"
"}\n"
"\n"
"/* Hover effect for headers */\n"
"QHeaderView::section:hover {\n"
"    background-color: rgb(25, 135, 220); /* A different blue for hover */\n"
"}\n"
"\n"
"QHeaderView::section:horizontal {\n"
"    font-family: \"Roboto Bk\";\n"
"}\n"
"\n"
"QHeaderView::section:vertical {\n"
"    font-family: \"Roboto Lt\";\n"
"}\n"
"\n"
"/* Scrollbar styling */\n"
"QScrollBar:vertical {\n"
"    width: 10px;\n"
"    background: #F5F5F5;\n"
"}\n"
"\n"
"QScrollBar::handle:vertical {\n"
"    background: #D6D6D6;\n"
"    min-height: 20px;\n"
"    border-radius: 5px;\n"
"}\n"
"\n"
"QScrollBar::handle:vertical:hover {\n"
"    background: #E0E0E0;\n"
"}\n"
"\n"
"QScrollBar::add-line:vertical, QScrollBar::sub-line:vertical {\n"
"    border: none;\n"
"    background: none;\n"
"}\n"
"\n"
"QScrollBar::add-page:vertical, QScrollBar::sub-page:vertical {\n"
"    background: none;\n"
"}\n"
"\n"
"QScrollBar::up-arrow:vertical, QScrollBar::down-arrow:vertical {\n"
"    width: 0px;\n"
"    height: 0px;\n"
"}\n"
"")
        self.DatabaseTab.setObjectName("DatabaseTab")
        self.DatabaseTab.setColumnCount(8)

        self.DatabaseTab.setRowCount(5)
        item = QtWidgets.QTableWidgetItem()
        self.DatabaseTab.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.DatabaseTab.setVerticalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.DatabaseTab.setVerticalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.DatabaseTab.setVerticalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.DatabaseTab.setVerticalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.DatabaseTab.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.DatabaseTab.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.DatabaseTab.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.DatabaseTab.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.DatabaseTab.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.DatabaseTab.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.DatabaseTab.setHorizontalHeaderItem(6, item)

        self.Database_gridLayout.addWidget(self.DatabaseTab, 1, 0, 1, 1)

        self.databasebutton_widget = QtWidgets.QWidget(self.Database)
        self.databasebutton_widget.setMinimumSize(QtCore.QSize(1550, 50))
        self.databasebutton_widget.setMaximumSize(QtCore.QSize(1200, 50))
        self.databasebutton_widget.setObjectName("databasebutton_widget")
        self.horizontalLayout_18 = QtWidgets.QHBoxLayout(self.databasebutton_widget)
        self.horizontalLayout_18.setObjectName("horizontalLayout_18")
        self.horizontalLayout_17 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_17.setObjectName("horizontalLayout_17")
        self.horizontalLayout_15 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_15.setObjectName("horizontalLayout_15")
        self.database_refresh_button = QtWidgets.QPushButton(self.databasebutton_widget)
        self.database_refresh_button.setMinimumSize(QtCore.QSize(90, 30))
        self.database_refresh_button.setMaximumSize(QtCore.QSize(90, 30))
        self.database_refresh_button.setObjectName("database_refresh_button")
        self.horizontalLayout_15.addWidget(self.database_refresh_button)
        spacerItem138 = QtWidgets.QSpacerItem(90, 30, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_15.addItem(spacerItem138)
        self.database_edit_button = QtWidgets.QPushButton(self.databasebutton_widget)
        self.database_edit_button.setMinimumSize(QtCore.QSize(90, 30))
        self.database_edit_button.setMaximumSize(QtCore.QSize(90, 30))
        self.database_edit_button.setObjectName("database_edit_button")
        self.horizontalLayout_15.addWidget(self.database_edit_button)
        self.database_undo_button = QtWidgets.QPushButton(self.databasebutton_widget)
        self.database_undo_button.setMinimumSize(QtCore.QSize(90, 30))
        self.database_undo_button.setMaximumSize(QtCore.QSize(90, 30))
        self.database_undo_button.setObjectName("database_undo_button")
        self.horizontalLayout_15.addWidget(self.database_undo_button)
        self.database_reset_button = QtWidgets.QPushButton(self.databasebutton_widget)
        self.database_reset_button.setMinimumSize(QtCore.QSize(90, 30))
        self.database_reset_button.setMaximumSize(QtCore.QSize(90, 30))
        self.database_reset_button.setObjectName("database_reset_button")
        self.horizontalLayout_15.addWidget(self.database_reset_button)
        self.database_savebutton = QtWidgets.QCheckBox(self.databasebutton_widget)
        self.database_savebutton.setMinimumSize(QtCore.QSize(90, 30))
        self.database_savebutton.setMaximumSize(QtCore.QSize(90, 30))
        self.database_savebutton.setText("")
        self.database_savebutton.setObjectName("database_savebutton")
        self.horizontalLayout_15.addWidget(self.database_savebutton)
        self.horizontalLayout_17.addLayout(self.horizontalLayout_15)
        spacerItem139 = QtWidgets.QSpacerItem(90, 30, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_17.addItem(spacerItem139)
        self.horizontalLayout_18.addLayout(self.horizontalLayout_17)
        self.Database_gridLayout.addWidget(self.databasebutton_widget, 0, 0, 1, 1)

        self.stackedWidget.addWidget(self.Database)









        self.Active_widget_vertical_lyt.addWidget(self.stackedWidget)
        self.MainWindow_2_verticalLayout.addWidget(self.Active_widget)
        self.MainWindow_gridLayout.addWidget(self.MainWindow_2, 0, 2, 1, 1)
        self.small_icon_widget = QtWidgets.QWidget(self.MainWindow_grid_lyt)
        self.small_icon_widget.setMinimumSize(QtCore.QSize(131, 0))
        self.small_icon_widget.setMaximumSize(QtCore.QSize(131, 16777215))
        self.small_icon_widget.setStyleSheet("QWidget{\n"
"\n"
"background-color: rgb(31, 149, 239);\n"
"}\n"
"\n"
"QPushButton {\n"
"    color: white;\n"
"    text-align: centre;\n"
"    height: 100px;\n"
"    border: none;\n"
"    \n"
"    border-radius: 10px; \n"
"    \n"
"    background-color: rgb(31, 149, 239); /* Normal background color */\n"
"    font-size: 14px; /* Set the font size here */\n"
"    /* Other styles */\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: rgb(45, 45, 45); /* Darker background color on hover */\n"
"    color: rgb(220, 220, 220); /* Slightly lighter text color on hover */\n"
"}\n"
"\n"
"\n"
"QPushButton:checked {\n"
" \n"
"    \n"
"     background-color: rgb(45, 45, 45); /* Darker background color on checked */\n"
"}\n"
"\n"
"\n"
"QLabel {\n"
"    color: white;\n"
"    qproperty-alignment: AlignCenter; /* This will center the text */\n"
"}\n"
"\n"
"\n"
"")
        self.small_icon_widget.setObjectName("small_icon_widget")
        self.small_icon_widget_verticalLayout = QtWidgets.QVBoxLayout(self.small_icon_widget)
        self.small_icon_widget_verticalLayout.setObjectName("small_icon_widget_verticalLayout")
        spacerItem140 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        self.small_icon_widget_verticalLayout.addItem(spacerItem140)
        self.General_pushButton = QtWidgets.QPushButton(self.small_icon_widget)
        self.General_pushButton.setText("")
        self.General_pushButton.setIcon(icon)
        self.General_pushButton.setIconSize(QtCore.QSize(100, 100))
        self.General_pushButton.setCheckable(True)
        self.General_pushButton.setAutoExclusive(True)
        self.General_pushButton.setObjectName("General_pushButton")
        self.small_icon_widget_verticalLayout.addWidget(self.General_pushButton)
        self.Stress_pushButton = QtWidgets.QPushButton(self.small_icon_widget)
        self.Stress_pushButton.setText("")
        self.Stress_pushButton.setIcon(icon1)
        self.Stress_pushButton.setIconSize(QtCore.QSize(100, 100))
        self.Stress_pushButton.setCheckable(True)
        self.Stress_pushButton.setAutoExclusive(True)
        self.Stress_pushButton.setObjectName("Stress_pushButton")
        self.small_icon_widget_verticalLayout.addWidget(self.Stress_pushButton)
        self.Depression_pushButton = QtWidgets.QPushButton(self.small_icon_widget)
        self.Depression_pushButton.setText("")
        self.Depression_pushButton.setIcon(icon2)
        self.Depression_pushButton.setIconSize(QtCore.QSize(100, 100))
        self.Depression_pushButton.setCheckable(True)
        self.Depression_pushButton.setAutoExclusive(True)
        self.Depression_pushButton.setObjectName("Depression_pushButton")
        self.small_icon_widget_verticalLayout.addWidget(self.Depression_pushButton)
        self.SelfEsteem_pushButton = QtWidgets.QPushButton(self.small_icon_widget)
        self.SelfEsteem_pushButton.setText("")
        self.SelfEsteem_pushButton.setIcon(icon3)
        self.SelfEsteem_pushButton.setIconSize(QtCore.QSize(100, 100))
        self.SelfEsteem_pushButton.setCheckable(True)
        self.SelfEsteem_pushButton.setAutoExclusive(True)
        self.SelfEsteem_pushButton.setObjectName("SelfEsteem_pushButton")
        self.small_icon_widget_verticalLayout.addWidget(self.SelfEsteem_pushButton)
        self.Preview_pushButton = QtWidgets.QPushButton(self.small_icon_widget)
        self.Preview_pushButton.setText("")
        self.Preview_pushButton.setIcon(icon4)
        self.Preview_pushButton.setIconSize(QtCore.QSize(100, 100))
        self.Preview_pushButton.setCheckable(True)
        self.Preview_pushButton.setAutoExclusive(True)
        self.Preview_pushButton.setObjectName("Preview_pushButton")
        self.small_icon_widget_verticalLayout.addWidget(self.Preview_pushButton)
        self.Database_pushButton = QtWidgets.QPushButton(self.small_icon_widget)
        self.Database_pushButton.setText("")
        self.Database_pushButton.setIcon(icon5)
        self.Database_pushButton.setIconSize(QtCore.QSize(100, 100))
        self.Database_pushButton.setCheckable(True)
        self.Database_pushButton.setAutoExclusive(True)
        self.Database_pushButton.setObjectName("Database_pushButton")
        self.small_icon_widget_verticalLayout.addWidget(self.Database_pushButton)
        self.Exit_pushButton = QtWidgets.QPushButton(self.small_icon_widget)
        self.Exit_pushButton.setText("")
        self.Exit_pushButton.setIcon(icon6)
        self.Exit_pushButton.setIconSize(QtCore.QSize(100, 100))
        self.Exit_pushButton.setObjectName("Exit_pushButton")
        self.small_icon_widget_verticalLayout.addWidget(self.Exit_pushButton)
        self.MainWindow_gridLayout.addWidget(self.small_icon_widget, 0, 0, 1, 1)
        PsycheEval_MainWindow.setCentralWidget(self.MainWindow_grid_lyt)
        self.menubar = QtWidgets.QMenuBar(PsycheEval_MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 2038, 26))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        PsycheEval_MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(PsycheEval_MainWindow)
        self.statusbar.setObjectName("statusbar")
        PsycheEval_MainWindow.setStatusBar(self.statusbar)
        self.actionPrint = QtWidgets.QAction(PsycheEval_MainWindow)
        self.actionPrint.setObjectName("actionPrint")
        self.menuFile.addAction(self.actionPrint)
        self.menubar.addAction(self.menuFile.menuAction())

        self.retranslateUi(PsycheEval_MainWindow)
        self.stackedWidget.setCurrentIndex(5)
        self.SelfEsteem_tabWidget.setCurrentIndex(0)
        self.Depression_Page_tabWidget.setCurrentIndex(0)
        self.Stress_tabWidget.setCurrentIndex(0)
        self.topbar_menu_button.toggled['bool'].connect(self.small_icon_widget.setHidden) # type: ignore
        self.topbar_menu_button.toggled['bool'].connect(self.expanded_icon_widget.setVisible) # type: ignore
        self.General_pushButton.toggled['bool'].connect(self.expanded_icon_General_pushButton.setChecked) # type: ignore
        self.Stress_pushButton.toggled['bool'].connect(self.expanded_icon_Stress_pushButton.setChecked) # type: ignore
        self.expanded_icon_General_pushButton.toggled['bool'].connect(self.General_pushButton.setChecked) # type: ignore
        self.expanded_icon_Stress_pushButton.toggled['bool'].connect(self.Stress_pushButton.setChecked) # type: ignore
        self.Depression_pushButton.toggled['bool'].connect(self.expanded_icon_Depression_pushButton.setChecked) # type: ignore
        self.expanded_icon_Depression_pushButton.toggled['bool'].connect(self.Depression_pushButton.setChecked) # type: ignore
        self.SelfEsteem_pushButton.toggled['bool'].connect(self.expanded_icon_SelfEsteem_pushButton.setChecked) # type: ignore
        self.expanded_icon_SelfEsteem_pushButton.toggled['bool'].connect(self.SelfEsteem_pushButton.setChecked) # type: ignore
        self.Preview_pushButton.toggled['bool'].connect(self.expanded_icon_Preview_pushButton.setChecked) # type: ignore
        self.expanded_icon_Preview_pushButton.toggled['bool'].connect(self.Preview_pushButton.setChecked) # type: ignore
        self.Database_pushButton.toggled['bool'].connect(self.expanded_icon_Database_pushButton.setChecked) # type: ignore
        self.expanded_icon_Database_pushButton.toggled['bool'].connect(self.Database_pushButton.setChecked) # type: ignore
        self.Exit_pushButton.toggled['bool'].connect(self.expanded_icon_Exit_pushButton.setChecked) # type: ignore
        self.expanded_icon_Exit_pushButton.toggled['bool'].connect(self.Exit_pushButton.setChecked) # type: ignore
        self.SE_Q11_horizontalSlider.sliderMoved['int'].connect(self.SE_11_spinBox.setValue) # type: ignore
        self.SE_11_spinBox.valueChanged['int'].connect(self.SE_Q11_horizontalSlider.setValue) # type: ignore
        self.SE_Q11_horizontalSlider.valueChanged['int'].connect(self.SE_11_spinBox.setValue) # type: ignore
        self.SE_Q12_horizontalSlider.sliderMoved['int'].connect(self.SE_12_spinBox.setValue) # type: ignore
        self.SE_12_spinBox.valueChanged['int'].connect(self.SE_Q12_horizontalSlider.setValue) # type: ignore
        self.SE_Q12_horizontalSlider.valueChanged['int'].connect(self.SE_12_spinBox.setValue) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(PsycheEval_MainWindow)

    def retranslateUi(self, PsycheEval_MainWindow):
        _translate = QtCore.QCoreApplication.translate
        PsycheEval_MainWindow.setWindowTitle(_translate("PsycheEval_MainWindow", "MainWindow"))
        self.logo_mainlabel.setText(_translate("PsycheEval_MainWindow", "PsycheEval"))
        self.expanded_icon_General_pushButton.setText(_translate("PsycheEval_MainWindow", "   General"))
        self.expanded_icon_Stress_pushButton.setText(_translate("PsycheEval_MainWindow", "   Stress "))
        self.expanded_icon_Depression_pushButton.setText(_translate("PsycheEval_MainWindow", "   Depression"))
        self.expanded_icon_SelfEsteem_pushButton.setText(_translate("PsycheEval_MainWindow", "   Self-Esteem"))
        self.expanded_icon_Preview_pushButton.setText(_translate("PsycheEval_MainWindow", "   Preview"))
        self.expanded_icon_Database_pushButton.setText(_translate("PsycheEval_MainWindow", "   Database"))
        self.expanded_icon_Exit_pushButton.setText(_translate("PsycheEval_MainWindow", "   Exit"))
        self.selfEsteem_instructions.setText(_translate("PsycheEval_MainWindow", "Rate how much you believe each statement from 1 to 5:"))
        self.SE_Q1_no_Label.setText(_translate("PsycheEval_MainWindow", "1"))
        self.SE_Q1_question.setText(_translate("PsycheEval_MainWindow", "I am a good and worthwhile person."))
        self.SE_Q2_no_Label.setText(_translate("PsycheEval_MainWindow", "2"))
        self.SE_Q2_question.setText(_translate("PsycheEval_MainWindow", "I am as valuable a person as anyone else."))
        self.SE_Q3_no_Label.setText(_translate("PsycheEval_MainWindow", "3"))
        self.SE_Q3_question.setText(_translate("PsycheEval_MainWindow", "I have good values that guide me in my life."))
        self.SE_Q4_no_Label.setText(_translate("PsycheEval_MainWindow", "4"))
        self.SE_Q4_question.setText(_translate("PsycheEval_MainWindow", "When I look at my eyes in the mirror, I feel good about myself."))
        self.SE_Q5_no_Label.setText(_translate("PsycheEval_MainWindow", "5"))
        self.SE_Q5_question.setText(_translate("PsycheEval_MainWindow", "I feel like I have done well in my life."))
        self.SE_Q6_no_Label.setText(_translate("PsycheEval_MainWindow", "6"))
        self.SE_Q6_question.setText(_translate("PsycheEval_MainWindow", "I can laugh at myself."))
        self.SE_Q7_no_Label.setText(_translate("PsycheEval_MainWindow", "7"))
        self.SE_Q7_question.setText(_translate("PsycheEval_MainWindow", "I like being me."))
        self.SE_Q8_no_Label.setText(_translate("PsycheEval_MainWindow", "8"))
        self.SE_Q8_question.setText(_translate("PsycheEval_MainWindow", "I like myself, even when others reject me."))
        self.SE_Q9_no_Label.setText(_translate("PsycheEval_MainWindow", "9"))
        self.SE_Q9_question.setText(_translate("PsycheEval_MainWindow", "Overall, I am pleased with how I am developing as a person."))
        self.SE_Q10_no_Label.setText(_translate("PsycheEval_MainWindow", "10"))
        self.SE_Q10_question.setText(_translate("PsycheEval_MainWindow", "I love and support myself, regardless of what happens."))
        self.SelfEsteem_tabWidget.setTabText(self.SelfEsteem_tabWidget.indexOf(self.SE_Tab_Page_1), _translate("PsycheEval_MainWindow", "Page 1"))
        self.SE_Q11_no_Label.setText(_translate("PsycheEval_MainWindow", "11"))
        self.SE_Q11_question.setText(_translate("PsycheEval_MainWindow", "I would rather be me than someone else."))
        self.SE_Q12_no_Label.setText(_translate("PsycheEval_MainWindow", "12"))
        self.SE_Q12_question.setText(_translate("PsycheEval_MainWindow", "I respect myself."))
        self.SE_Q13_no_Label.setText(_translate("PsycheEval_MainWindow", "13"))
        self.SE_Q13_question.setText(_translate("PsycheEval_MainWindow", "I continue to grow personally."))
        self.SE_Q14_no_Label.setText(_translate("PsycheEval_MainWindow", "14"))
        self.SE_Q14_question.setText(_translate("PsycheEval_MainWindow", "I feel confident about my abilities."))
        self.SE_Q15_question.setText(_translate("PsycheEval_MainWindow", "15"))
        self.SE_Q15_no_Label.setText(_translate("PsycheEval_MainWindow", "I have pride in who I am and what I do."))
        self.SE_Q16_no_Label.setText(_translate("PsycheEval_MainWindow", "16"))
        self.SE_Q16_question.setText(_translate("PsycheEval_MainWindow", "I am comfortable in expressing my thoughts and feelings."))
        self.SE_Q17_no_Label.setText(_translate("PsycheEval_MainWindow", "17"))
        self.SE_Q17_question.setText(_translate("PsycheEval_MainWindow", "I like my body."))
        self.SE_Q18_no_Label.setText(_translate("PsycheEval_MainWindow", "18"))
        self.SE_Q18_question.setText(_translate("PsycheEval_MainWindow", "I handle difficult situations well."))
        self.SE_Q19_no_Label.setText(_translate("PsycheEval_MainWindow", "19"))
        self.SE_Q19_question.setText(_translate("PsycheEval_MainWindow", "Overall, I make good decisions."))
        self.SE_Q20_no_Label.setText(_translate("PsycheEval_MainWindow", "20"))
        self.SE_Q20_question.setText(_translate("PsycheEval_MainWindow", "I am a good friend and people like to be with me."))
        self.SelfEsteem_tabWidget.setTabText(self.SelfEsteem_tabWidget.indexOf(self.SE_Tab_Page_2), _translate("PsycheEval_MainWindow", "Page 2"))
        self.depression_instructions.setText(_translate("PsycheEval_MainWindow", "Click the number that best describes you:"))
        self.DT_Q1.setText(_translate("PsycheEval_MainWindow", "1"))
        self.DT_Q1_A1_Label.setText(_translate("PsycheEval_MainWindow", "Low energy"))
        self.DT_1_pushButton_1.setText(_translate("PsycheEval_MainWindow", "1"))
        self.DT_1_pushButton_2.setText(_translate("PsycheEval_MainWindow", "2"))
        self.DT_1_pushButton_3.setText(_translate("PsycheEval_MainWindow", "3"))
        self.DT_1_pushButton_4.setText(_translate("PsycheEval_MainWindow", "4"))
        self.DT_1_pushButton_5.setText(_translate("PsycheEval_MainWindow", "5"))
        self.DT_Q1_A2_Label.setText(_translate("PsycheEval_MainWindow", "High Energy"))
        self.DT_Q2.setText(_translate("PsycheEval_MainWindow", "2"))
        self.DT_Q2_A1_Label.setText(_translate("PsycheEval_MainWindow", "Difficulty sleeping or sleep all the time"))
        self.DT_2_pushButton_1.setText(_translate("PsycheEval_MainWindow", "1"))
        self.DT_2_pushButton_2.setText(_translate("PsycheEval_MainWindow", "2"))
        self.DT_2_pushButton_3.setText(_translate("PsycheEval_MainWindow", "3"))
        self.DT_2_pushButton_4.setText(_translate("PsycheEval_MainWindow", "4"))
        self.DT_2_pushButton_5.setText(_translate("PsycheEval_MainWindow", "5"))
        self.DT_Q2_A2_Label.setText(_translate("PsycheEval_MainWindow", "Uninterrupted sleeping patterns"))
        self.DT_Q3.setText(_translate("PsycheEval_MainWindow", "3"))
        self.DT_Q3_A1_Label.setText(_translate("PsycheEval_MainWindow", "No desire to be involved in activities"))
        self.DT_3_pushButton_1.setText(_translate("PsycheEval_MainWindow", "1"))
        self.DT_3_pushButton_2.setText(_translate("PsycheEval_MainWindow", "2"))
        self.DT_3_pushButton_3.setText(_translate("PsycheEval_MainWindow", "3"))
        self.DT_3_pushButton_4.setText(_translate("PsycheEval_MainWindow", "4"))
        self.DT_3_pushButton_5.setText(_translate("PsycheEval_MainWindow", "5"))
        self.DT_Q3_A2_Label.setText(_translate("PsycheEval_MainWindow", "Very involved in activities"))
        self.DT_Q4.setText(_translate("PsycheEval_MainWindow", "4"))
        self.DT_Q4_A1_Label.setText(_translate("PsycheEval_MainWindow", "No desire for sex"))
        self.DT_4_pushButton_1.setText(_translate("PsycheEval_MainWindow", "1"))
        self.DT_4_pushButton_2.setText(_translate("PsycheEval_MainWindow", "2"))
        self.DT_4_pushButton_3.setText(_translate("PsycheEval_MainWindow", "3"))
        self.DT_4_pushButton_4.setText(_translate("PsycheEval_MainWindow", "4"))
        self.DT_4_pushButton_5.setText(_translate("PsycheEval_MainWindow", "5"))
        self.DT_Q4_A2_Label.setText(_translate("PsycheEval_MainWindow", "Healthy sex drive"))
        self.DT_Q5.setText(_translate("PsycheEval_MainWindow", "5"))
        self.DT_Q5_A1_Label.setText(_translate("PsycheEval_MainWindow", "Aches and pain"))
        self.DT_5_pushButton_1.setText(_translate("PsycheEval_MainWindow", "1"))
        self.DT_5_pushButton_2.setText(_translate("PsycheEval_MainWindow", "2"))
        self.DT_5_pushButton_3.setText(_translate("PsycheEval_MainWindow", "3"))
        self.DT_5_pushButton_4.setText(_translate("PsycheEval_MainWindow", "4"))
        self.DT_5_pushButton_5.setText(_translate("PsycheEval_MainWindow", "5"))
        self.DT_Q5_A2_Label.setText(_translate("PsycheEval_MainWindow", "Feel great"))
        self.DT_Q6.setText(_translate("PsycheEval_MainWindow", "6"))
        self.DT_Q6_A1_Label.setText(_translate("PsycheEval_MainWindow", "Loss of appetite"))
        self.DT_6_pushButton_1.setText(_translate("PsycheEval_MainWindow", "1"))
        self.DT_6_pushButton_2.setText(_translate("PsycheEval_MainWindow", "2"))
        self.DT_6_pushButton_3.setText(_translate("PsycheEval_MainWindow", "3"))
        self.DT_6_pushButton_4.setText(_translate("PsycheEval_MainWindow", "4"))
        self.DT_6_pushButton_5.setText(_translate("PsycheEval_MainWindow", "5"))
        self.DT_Q6_A2_Label.setText(_translate("PsycheEval_MainWindow", "Enjoy eating"))
        self.DT_Q7.setText(_translate("PsycheEval_MainWindow", "7"))
        self.DT_Q7_A1_Label.setText(_translate("PsycheEval_MainWindow", "Sad (tearful)"))
        self.DT_7_pushButton_1.setText(_translate("PsycheEval_MainWindow", "1"))
        self.DT_7_pushButton_2.setText(_translate("PsycheEval_MainWindow", "2"))
        self.DT_7_pushButton_3.setText(_translate("PsycheEval_MainWindow", "3"))
        self.DT_7_pushButton_4.setText(_translate("PsycheEval_MainWindow", "4"))
        self.DT_7_pushButton_5.setText(_translate("PsycheEval_MainWindow", "5"))
        self.DT_Q7_A2_Label.setText(_translate("PsycheEval_MainWindow", "Joyful"))
        self.DT_Q8.setText(_translate("PsycheEval_MainWindow", "8"))
        self.DT_Q8_A1_Label.setText(_translate("PsycheEval_MainWindow", "Despairing and hopeless"))
        self.DT_8_pushButton_1.setText(_translate("PsycheEval_MainWindow", "1"))
        self.DT_8_pushButton_2.setText(_translate("PsycheEval_MainWindow", "2"))
        self.DT_8_pushButton_3.setText(_translate("PsycheEval_MainWindow", "3"))
        self.DT_8_pushButton_4.setText(_translate("PsycheEval_MainWindow", "4"))
        self.DT_8_pushButton_5.setText(_translate("PsycheEval_MainWindow", "5"))
        self.DT_Q8_A2_Label.setText(_translate("PsycheEval_MainWindow", "Despairing and hopeless"))
        self.DT_Q9.setText(_translate("PsycheEval_MainWindow", "9"))
        self.DT_Q9_A1_Label.setText(_translate("PsycheEval_MainWindow", "Irritable (low frustration tolerance) "))
        self.DT_9_pushButton_1.setText(_translate("PsycheEval_MainWindow", "1"))
        self.DT_9_pushButton_2.setText(_translate("PsycheEval_MainWindow", "2"))
        self.DT_9_pushButton_3.setText(_translate("PsycheEval_MainWindow", "3"))
        self.DT_9_pushButton_4.setText(_translate("PsycheEval_MainWindow", "4"))
        self.DT_9_pushButton_5.setText(_translate("PsycheEval_MainWindow", "5"))
        self.DT_Q9_A2_Label.setText(_translate("PsycheEval_MainWindow", "Patient-high frustration tolerance"))
        self.DT_Q10.setText(_translate("PsycheEval_MainWindow", "10"))
        self.DT_Q10_A1_Label.setText(_translate("PsycheEval_MainWindow", "Withdrawn"))
        self.DT_10_pushButton_1.setText(_translate("PsycheEval_MainWindow", "1"))
        self.DT_10_pushButton_2.setText(_translate("PsycheEval_MainWindow", "2"))
        self.DT_10_pushButton_3.setText(_translate("PsycheEval_MainWindow", "3"))
        self.DT_10_pushButton_4.setText(_translate("PsycheEval_MainWindow", "4"))
        self.DT_10_pushButton_5.setText(_translate("PsycheEval_MainWindow", "5"))
        self.DT_Q10_A2_Label_2.setText(_translate("PsycheEval_MainWindow", " Involved"))
        self.Depression_Page_tabWidget.setTabText(self.Depression_Page_tabWidget.indexOf(self.DT_page_1), _translate("PsycheEval_MainWindow", "Page 1"))
        self.DT_Q11.setText(_translate("PsycheEval_MainWindow", "11"))
        self.DT_Q11_A1_Label.setText(_translate("PsycheEval_MainWindow", "Mental anguish"))
        self.DT_11_pushButton_1.setText(_translate("PsycheEval_MainWindow", "1"))
        self.DT_11_pushButton_2.setText(_translate("PsycheEval_MainWindow", "2"))
        self.DT_11_pushButton_3.setText(_translate("PsycheEval_MainWindow", "3"))
        self.DT_11_pushButton_4.setText(_translate("PsycheEval_MainWindow", "4"))
        self.DT_11_pushButton_5.setText(_translate("PsycheEval_MainWindow", "5"))
        self.DT_Q11_A2_Label.setText(_translate("PsycheEval_MainWindow", "Peace of mind"))
        self.DT_Q12.setText(_translate("PsycheEval_MainWindow", "12"))
        self.DT_Q12_A1_Label.setText(_translate("PsycheEval_MainWindow", "Low sense of self-worth"))
        self.DT_12_pushButton_1.setText(_translate("PsycheEval_MainWindow", "1"))
        self.DT_12_pushButton_2.setText(_translate("PsycheEval_MainWindow", "2"))
        self.DT_12_pushButton_3.setText(_translate("PsycheEval_MainWindow", "3"))
        self.DT_12_pushButton_4.setText(_translate("PsycheEval_MainWindow", "4"))
        self.DT_12_pushButton_5.setText(_translate("PsycheEval_MainWindow", "5"))
        self.DT_Q12_A2_Label.setText(_translate("PsycheEval_MainWindow", "High sense of self-worth"))
        self.DT_Q13.setText(_translate("PsycheEval_MainWindow", "13"))
        self.DT_Q13_A1_Label.setText(_translate("PsycheEval_MainWindow", "Pessimistic about the future"))
        self.DT_13_pushButton_1.setText(_translate("PsycheEval_MainWindow", "1"))
        self.DT_13_pushButton_2.setText(_translate("PsycheEval_MainWindow", "2"))
        self.DT_13_pushButton_3.setText(_translate("PsycheEval_MainWindow", "3"))
        self.DT_13_pushButton_4.setText(_translate("PsycheEval_MainWindow", "4"))
        self.DT_13_pushButton_5.setText(_translate("PsycheEval_MainWindow", "5"))
        self.DT_Q13_A2_Label.setText(_translate("PsycheEval_MainWindow", "Optimistic about the future"))
        self.DT_Q14.setText(_translate("PsycheEval_MainWindow", "14"))
        self.DT_Q14_A1_Label.setText(_translate("PsycheEval_MainWindow", "Perceive most circumstances as"))
        self.DT_Q14_A1_Label_2.setText(_translate("PsycheEval_MainWindow", "negative and harmful to self"))
        self.DT_14_pushButton_1.setText(_translate("PsycheEval_MainWindow", "1"))
        self.DT_14_pushButton_2.setText(_translate("PsycheEval_MainWindow", "2"))
        self.DT_14_pushButton_3.setText(_translate("PsycheEval_MainWindow", "3"))
        self.DT_14_pushButton_4.setText(_translate("PsycheEval_MainWindow", "4"))
        self.DT_14_pushButton_5.setText(_translate("PsycheEval_MainWindow", "5"))
        self.DT_Q14_A2_Label.setText(_translate("PsycheEval_MainWindow", "Perceive most circumstances "))
        self.DT_Q14_A2_Label_2.setText(_translate("PsycheEval_MainWindow", "as opportunities for growth"))
        self.DT_Q15.setText(_translate("PsycheEval_MainWindow", "15"))
        self.DT_Q15_A1_Label.setText(_translate("PsycheEval_MainWindow", "Self-destructive (I and others would"))
        self.DT_Q15_A1_Label_2.setText(_translate("PsycheEval_MainWindow", "be better off if I weren’t here"))
        self.DT_15_pushButton_1.setText(_translate("PsycheEval_MainWindow", "1"))
        self.DT_15_pushButton_2.setText(_translate("PsycheEval_MainWindow", "2"))
        self.DT_15_pushButton_3.setText(_translate("PsycheEval_MainWindow", "3"))
        self.DT_15_pushButton_4.setText(_translate("PsycheEval_MainWindow", "4"))
        self.DT_15_pushButton_5.setText(_translate("PsycheEval_MainWindow", "5"))
        self.DT_Q15_A2_Label.setText(_translate("PsycheEval_MainWindow", "Self-preserving (I’m glad "))
        self.DT_Q15_A2_Label_2.setText(_translate("PsycheEval_MainWindow", "I’m here)"))
        self.Depression_Page_tabWidget.setTabText(self.Depression_Page_tabWidget.indexOf(self.DT_page_2), _translate("PsycheEval_MainWindow", "Page 2"))
        self.stress_instructions.setText(_translate("PsycheEval_MainWindow", "In the last month, how often have you:"))
        self.Never_Label.setText(_translate("PsycheEval_MainWindow", "Never"))
        self.AlmostNever_label.setText(_translate("PsycheEval_MainWindow", "Almost Never"))
        self.Someyimes_label.setText(_translate("PsycheEval_MainWindow", "Sometimes"))
        self.FairlyOften_label.setText(_translate("PsycheEval_MainWindow", "Fairly Often"))
        self.VeryOften_label.setText(_translate("PsycheEval_MainWindow", "Very Often"))
        self.ST_Q1.setText(_translate("PsycheEval_MainWindow", "1"))
        self.ST_Q1_Label.setText(_translate("PsycheEval_MainWindow", "Been upset because of something that happened unexpectedly?"))
        self.ST_1_pushButton_1.setText(_translate("PsycheEval_MainWindow", "1"))
        self.ST_1_pushButton_2.setText(_translate("PsycheEval_MainWindow", "2"))
        self.ST_1_pushButton_3.setText(_translate("PsycheEval_MainWindow", "3"))
        self.ST_1_pushButton_4.setText(_translate("PsycheEval_MainWindow", "4"))
        self.ST_1_pushButton_5.setText(_translate("PsycheEval_MainWindow", "5"))
        self.ST_Q2.setText(_translate("PsycheEval_MainWindow", "2"))
        self.ST_Q2_Label.setText(_translate("PsycheEval_MainWindow", "Felt that you were unable to control the important things in your life?"))
        self.ST_2_pushButton_1.setText(_translate("PsycheEval_MainWindow", "1"))
        self.ST_2_pushButton_2.setText(_translate("PsycheEval_MainWindow", "2"))
        self.ST_2_pushButton_3.setText(_translate("PsycheEval_MainWindow", "3"))
        self.ST_2_pushButton_4.setText(_translate("PsycheEval_MainWindow", "4"))
        self.ST_2_pushButton_5.setText(_translate("PsycheEval_MainWindow", "5"))
        self.ST_Q3.setText(_translate("PsycheEval_MainWindow", "3"))
        self.ST_Q3_Label.setText(_translate("PsycheEval_MainWindow", "Felt nervous and \"stressed\"?"))
        self.ST_3_pushButton_1.setText(_translate("PsycheEval_MainWindow", "1"))
        self.ST_3_pushButton_2.setText(_translate("PsycheEval_MainWindow", "2"))
        self.ST_3_pushButton_3.setText(_translate("PsycheEval_MainWindow", "3"))
        self.ST_3_pushButton_4.setText(_translate("PsycheEval_MainWindow", "4"))
        self.ST_3_pushButton_5.setText(_translate("PsycheEval_MainWindow", "5"))
        self.ST_Q4.setText(_translate("PsycheEval_MainWindow", "4"))
        self.ST_Q4_Label.setText(_translate("PsycheEval_MainWindow", "Felt unsure about your ability to handle your personal problems?"))
        self.ST_4_pushButton_1.setText(_translate("PsycheEval_MainWindow", "1"))
        self.ST_4_pushButton_2.setText(_translate("PsycheEval_MainWindow", "2"))
        self.ST_4_pushButton_3.setText(_translate("PsycheEval_MainWindow", "3"))
        self.ST_4_pushButton_4.setText(_translate("PsycheEval_MainWindow", "4"))
        self.ST_4_pushButton_5.setText(_translate("PsycheEval_MainWindow", "5"))
        self.ST_Q5.setText(_translate("PsycheEval_MainWindow", "5"))
        self.ST_Q5_Label.setText(_translate("PsycheEval_MainWindow", "Felt that things weren\'t going your way?"))
        self.ST_5_pushButton_1.setText(_translate("PsycheEval_MainWindow", "1"))
        self.ST_5_pushButton_2.setText(_translate("PsycheEval_MainWindow", "2"))
        self.ST_5_pushButton_3.setText(_translate("PsycheEval_MainWindow", "3"))
        self.ST_5_pushButton_4.setText(_translate("PsycheEval_MainWindow", "4"))
        self.ST_5_pushButton_5.setText(_translate("PsycheEval_MainWindow", "5"))
        self.ST_Q6.setText(_translate("PsycheEval_MainWindow", "6"))
        self.ST_Q6_Label.setText(_translate("PsycheEval_MainWindow", "Found that you could not cope with all the things that you had to do?"))
        self.ST_6_pushButton_1.setText(_translate("PsycheEval_MainWindow", "1"))
        self.ST_6_pushButton_2.setText(_translate("PsycheEval_MainWindow", "2"))
        self.ST_6_pushButton_3.setText(_translate("PsycheEval_MainWindow", "3"))
        self.ST_6_pushButton_4.setText(_translate("PsycheEval_MainWindow", "4"))
        self.ST_6_pushButton_5.setText(_translate("PsycheEval_MainWindow", "5"))
        self.ST_Q7.setText(_translate("PsycheEval_MainWindow", "7"))
        self.ST_Q7_Label.setText(_translate("PsycheEval_MainWindow", "Been unable to control irritations in your life?"))
        self.ST_7_pushButton_1.setText(_translate("PsycheEval_MainWindow", "1"))
        self.ST_7_pushButton_2.setText(_translate("PsycheEval_MainWindow", "2"))
        self.ST_7_pushButton_3.setText(_translate("PsycheEval_MainWindow", "3"))
        self.ST_7_pushButton_4.setText(_translate("PsycheEval_MainWindow", "4"))
        self.ST_7_pushButton_5.setText(_translate("PsycheEval_MainWindow", "5"))
        self.ST_Q8.setText(_translate("PsycheEval_MainWindow", "8"))
        self.ST_Q8_Label.setText(_translate("PsycheEval_MainWindow", "Felt that you weren\'t on top of things?"))
        self.ST_8_pushButton_1.setText(_translate("PsycheEval_MainWindow", "1"))
        self.ST_8_pushButton_2.setText(_translate("PsycheEval_MainWindow", "2"))
        self.ST_8_pushButton_3.setText(_translate("PsycheEval_MainWindow", "3"))
        self.ST_8_pushButton_4.setText(_translate("PsycheEval_MainWindow", "4"))
        self.ST_8_pushButton_5.setText(_translate("PsycheEval_MainWindow", "5"))
        self.ST_Q9.setText(_translate("PsycheEval_MainWindow", "9"))
        self.ST_Q9_Label.setText(_translate("PsycheEval_MainWindow", "Been angered because of things that were outside of your control?"))
        self.ST_9_pushButton_1.setText(_translate("PsycheEval_MainWindow", "1"))
        self.ST_9_pushButton_2.setText(_translate("PsycheEval_MainWindow", "2"))
        self.ST_9_pushButton_3.setText(_translate("PsycheEval_MainWindow", "3"))
        self.ST_9_pushButton_4.setText(_translate("PsycheEval_MainWindow", "4"))
        self.ST_9_pushButton_5.setText(_translate("PsycheEval_MainWindow", "5"))
        self.ST_Q10.setText(_translate("PsycheEval_MainWindow", "10"))
        self.ST_Q10_Label.setText(_translate("PsycheEval_MainWindow", "Felt difficulties were piling up so high that you could not overcome them?"))
        self.ST_10_pushButton_1.setText(_translate("PsycheEval_MainWindow", "1"))
        self.ST_10_pushButton_2.setText(_translate("PsycheEval_MainWindow", "2"))
        self.ST_10_pushButton_3.setText(_translate("PsycheEval_MainWindow", "3"))
        self.ST_10_pushButton_4.setText(_translate("PsycheEval_MainWindow", "4"))
        self.ST_10_pushButton_5.setText(_translate("PsycheEval_MainWindow", "5"))
        self.Stress_tabWidget.setTabText(self.Stress_tabWidget.indexOf(self.ST_Tab), _translate("PsycheEval_MainWindow", "Page 1"))
        self.GeneralTabTitle_label.setText(_translate("PsycheEval_MainWindow", "General Information"))
        self.general_name_label.setText(_translate("PsycheEval_MainWindow", "Full Student Name:"))
        self.general_school_label.setText(_translate("PsycheEval_MainWindow", "School:"))
        self.general_gender_label.setText(_translate("PsycheEval_MainWindow", "Gender :"))
        self.general_male_label.setText(_translate("PsycheEval_MainWindow", "Male"))
        self.general_female_label.setText(_translate("PsycheEval_MainWindow", "Female"))
        self.general_date_instructions.setText(_translate("PsycheEval_MainWindow", "(month/day/year)"))
        self.general_dateofBirth_label.setText(_translate("PsycheEval_MainWindow", "Date of Birth:"))
        self.general_todaysdate_label.setText(_translate("PsycheEval_MainWindow", "Today\'s Date:"))
        self.general_instructions.setText(_translate("PsycheEval_MainWindow", "Fill out the information below then tick:"))
        self.PreviewTabTitle_label.setText(_translate("PsycheEval_MainWindow", "Preview Information"))
        self.preview_instructions.setText(_translate("PsycheEval_MainWindow", "Click the \"Not Saved\" button when you ensure that the information is correct:"))
        self.preview_name_label.setText(_translate("PsycheEval_MainWindow", "Full Student Name:"))
        self.preview_school_label.setText(_translate("PsycheEval_MainWindow", "School:"))
        self.preview_gender_label.setText(_translate("PsycheEval_MainWindow", "Gender :"))
        self.preview_date_instructions.setText(_translate("PsycheEval_MainWindow", "(month/day/year)"))
        self.preview_dateofBirth_label_2.setText(_translate("PsycheEval_MainWindow", "Date of Birth:"))
        self.preview_todaysdate_label.setText(_translate("PsycheEval_MainWindow", "Today\'s Date:"))
        self.preview_stress_label.setText(_translate("PsycheEval_MainWindow", "Stress:"))
        self.preview_depression_label.setText(_translate("PsycheEval_MainWindow", "Depression:"))
        self.preview_selfEsteem_label.setText(_translate("PsycheEval_MainWindow", "SelfEsteem:"))
        item = self.DatabaseTab.verticalHeaderItem(0)
        item.setText(_translate("PsycheEval_MainWindow", "1"))
        item = self.DatabaseTab.verticalHeaderItem(1)
        item.setText(_translate("PsycheEval_MainWindow", "2"))
        item = self.DatabaseTab.verticalHeaderItem(2)
        item.setText(_translate("PsycheEval_MainWindow", "3"))
        item = self.DatabaseTab.verticalHeaderItem(3)
        item.setText(_translate("PsycheEval_MainWindow", "4"))
        item = self.DatabaseTab.verticalHeaderItem(4)
        item.setText(_translate("PsycheEval_MainWindow", "5"))
        item = self.DatabaseTab.horizontalHeaderItem(0)
        item.setText(_translate("PsycheEval_MainWindow", "Name"))
        item = self.DatabaseTab.horizontalHeaderItem(1)
        item.setText(_translate("PsycheEval_MainWindow", "New Column"))
        item = self.DatabaseTab.horizontalHeaderItem(2)
        item.setText(_translate("PsycheEval_MainWindow", "School"))
        item = self.DatabaseTab.horizontalHeaderItem(3)
        item.setText(_translate("PsycheEval_MainWindow", "Sex"))
        item = self.DatabaseTab.horizontalHeaderItem(4)
        item.setText(_translate("PsycheEval_MainWindow", "New Column"))
        item = self.DatabaseTab.horizontalHeaderItem(5)
        item.setText(_translate("PsycheEval_MainWindow", "Stress Test"))
        item = self.DatabaseTab.horizontalHeaderItem(6)
        item.setText(_translate("PsycheEval_MainWindow", "Self Esteem Test"))
        self.database_refresh_button.setText(_translate("PsycheEval_MainWindow", "Refresh"))
        self.database_edit_button.setText(_translate("PsycheEval_MainWindow", "Edit"))
        self.database_undo_button.setText(_translate("PsycheEval_MainWindow", "Undo"))
        self.database_reset_button.setText(_translate("PsycheEval_MainWindow", "Reset"))
        self.menuFile.setTitle(_translate("PsycheEval_MainWindow", "File"))
        self.actionPrint.setText(_translate("PsycheEval_MainWindow", "Print"))
import resource_rc


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    PsycheEval_MainWindow = QtWidgets.QMainWindow()
    ui = Ui_PsycheEval_MainWindow()
    ui.setupUi(PsycheEval_MainWindow)
    PsycheEval_MainWindow.show()
    sys.exit(app.exec_())
