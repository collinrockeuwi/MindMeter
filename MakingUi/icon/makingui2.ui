<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>MainWindow</class>
 <widget class="QMainWindow" name="MainWindow">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>1920</width>
    <height>1083</height>
   </rect>
  </property>
  <property name="windowTitle">
   <string>MainWindow</string>
  </property>
  <property name="styleSheet">
   <string notr="true">background-color: rgb(245, 250, 254);</string>
  </property>
  <widget class="QWidget" name="centralwidget">
   <layout class="QGridLayout" name="gridLayout_2">
    <property name="leftMargin">
     <number>0</number>
    </property>
    <property name="horizontalSpacing">
     <number>0</number>
    </property>
    <item row="0" column="1">
     <widget class="QWidget" name="widget_2" native="true">
      <property name="minimumSize">
       <size>
        <width>281</width>
        <height>0</height>
       </size>
      </property>
      <property name="maximumSize">
       <size>
        <width>281</width>
        <height>16777215</height>
       </size>
      </property>
      <property name="styleSheet">
       <string notr="true">QWidget{

background-color: rgb(31, 149, 239);
}
QPushButton {
    color: white;
    text-align: left;
    height:70px;
    border: 1px;
    padding-left: 10px;
    border-top-left-radius: 5px; /* Round top left corner */
    border-bottom-left-radius: 5px; /* Round bottom left corner */
    background-color: rgb(31, 149, 239); /* Normal background color */
    font-size: 30px; /* Set the font size here */
    /* Other styles */
}

QPushButton:hover {
    background-color: rgb(45, 45, 45); /* Darker background color on hover */
    color: rgb(220, 220, 220); /* Slightly lighter text color on hover */
}

QPushButton:checked {
 
	 background-color: rgb(45, 45, 45); /* Darker background color on checked */
}

QLabel {
    color: white;
}

</string>
      </property>
      <layout class="QGridLayout" name="gridLayout">
       <property name="rightMargin">
        <number>0</number>
       </property>
       <item row="0" column="0">
        <layout class="QVBoxLayout" name="verticalLayout_4">
         <item>
          <widget class="QSplitter" name="splitter">
           <property name="orientation">
            <enum>Qt::Horizontal</enum>
           </property>
           <widget class="QLabel" name="label_3">
            <property name="minimumSize">
             <size>
              <width>40</width>
              <height>40</height>
             </size>
            </property>
            <property name="maximumSize">
             <size>
              <width>50</width>
              <height>50</height>
             </size>
            </property>
            <property name="text">
             <string/>
            </property>
            <property name="pixmap">
             <pixmap resource="resource.qrc">:/icon/icon/group-48.ico</pixmap>
            </property>
            <property name="scaledContents">
             <bool>true</bool>
            </property>
           </widget>
           <widget class="QLabel" name="label_2">
            <property name="font">
             <font>
              <family>Roboto</family>
              <pointsize>28</pointsize>
              <weight>50</weight>
              <bold>false</bold>
             </font>
            </property>
            <property name="text">
             <string> Sidebar</string>
            </property>
           </widget>
          </widget>
         </item>
         <item>
          <spacer name="verticalSpacer_3">
           <property name="orientation">
            <enum>Qt::Vertical</enum>
           </property>
           <property name="sizeType">
            <enum>QSizePolicy::Fixed</enum>
           </property>
           <property name="sizeHint" stdset="0">
            <size>
             <width>20</width>
             <height>40</height>
            </size>
           </property>
          </spacer>
         </item>
         <item>
          <layout class="QVBoxLayout" name="verticalLayout_2">
           <property name="spacing">
            <number>40</number>
           </property>
           <item>
            <widget class="QPushButton" name="pushButton_8">
             <property name="font">
              <font>
               <family>Roboto</family>
               <pointsize>-1</pointsize>
               <weight>75</weight>
               <bold>true</bold>
              </font>
             </property>
             <property name="text">
              <string>   General</string>
             </property>
             <property name="icon">
              <iconset resource="resource.qrc">
               <normaloff>:/icon/icon/home-4-48.ico</normaloff>:/icon/icon/home-4-48.ico</iconset>
             </property>
             <property name="iconSize">
              <size>
               <width>50</width>
               <height>50</height>
              </size>
             </property>
             <property name="checkable">
              <bool>true</bool>
             </property>
             <property name="autoExclusive">
              <bool>true</bool>
             </property>
            </widget>
           </item>
           <item>
            <widget class="QPushButton" name="pushButton_11">
             <property name="font">
              <font>
               <family>Roboto</family>
               <pointsize>-1</pointsize>
               <weight>75</weight>
               <bold>true</bold>
              </font>
             </property>
             <property name="text">
              <string>   Stress </string>
             </property>
             <property name="icon">
              <iconset resource="resource.qrc">
               <normaloff>:/icon/icon/dashboard-5-48.ico</normaloff>:/icon/icon/dashboard-5-48.ico</iconset>
             </property>
             <property name="iconSize">
              <size>
               <width>50</width>
               <height>50</height>
              </size>
             </property>
             <property name="checkable">
              <bool>true</bool>
             </property>
             <property name="autoExclusive">
              <bool>true</bool>
             </property>
            </widget>
           </item>
           <item>
            <widget class="QPushButton" name="pushButton_7">
             <property name="font">
              <font>
               <family>Roboto</family>
               <pointsize>-1</pointsize>
               <weight>75</weight>
               <bold>true</bold>
              </font>
             </property>
             <property name="text">
              <string>   Depression</string>
             </property>
             <property name="icon">
              <iconset resource="resource.qrc">
               <normaloff>:/icon/icon/product-48.ico</normaloff>:/icon/icon/product-48.ico</iconset>
             </property>
             <property name="iconSize">
              <size>
               <width>50</width>
               <height>50</height>
              </size>
             </property>
             <property name="checkable">
              <bool>true</bool>
             </property>
             <property name="autoExclusive">
              <bool>true</bool>
             </property>
            </widget>
           </item>
           <item>
            <widget class="QPushButton" name="pushButton_10">
             <property name="font">
              <font>
               <family>Roboto</family>
               <pointsize>-1</pointsize>
               <weight>75</weight>
               <bold>true</bold>
              </font>
             </property>
             <property name="text">
              <string>   Self-Esteem</string>
             </property>
             <property name="icon">
              <iconset resource="resource.qrc">
               <normaloff>:/icon/icon/user-48-white.ico</normaloff>:/icon/icon/user-48-white.ico</iconset>
             </property>
             <property name="iconSize">
              <size>
               <width>50</width>
               <height>50</height>
              </size>
             </property>
             <property name="checkable">
              <bool>true</bool>
             </property>
             <property name="autoExclusive">
              <bool>true</bool>
             </property>
            </widget>
           </item>
           <item>
            <widget class="QPushButton" name="pushButton_9">
             <property name="font">
              <font>
               <family>Roboto</family>
               <pointsize>-1</pointsize>
               <weight>75</weight>
               <bold>true</bold>
              </font>
             </property>
             <property name="text">
              <string>   Preview</string>
             </property>
             <property name="icon">
              <iconset resource="resource.qrc">
               <normaloff>:/icon/icon/activity-feed-48.ico</normaloff>:/icon/icon/activity-feed-48.ico</iconset>
             </property>
             <property name="iconSize">
              <size>
               <width>50</width>
               <height>50</height>
              </size>
             </property>
             <property name="checkable">
              <bool>true</bool>
             </property>
             <property name="autoExclusive">
              <bool>true</bool>
             </property>
            </widget>
           </item>
           <item>
            <widget class="QPushButton" name="pushButton_14">
             <property name="font">
              <font>
               <family>Roboto</family>
               <pointsize>-1</pointsize>
               <weight>75</weight>
               <bold>true</bold>
              </font>
             </property>
             <property name="text">
              <string>   Database</string>
             </property>
             <property name="icon">
              <iconset resource="resource.qrc">
               <normaloff>:/icon/icon/search-13.ico</normaloff>:/icon/icon/search-13.ico</iconset>
             </property>
             <property name="iconSize">
              <size>
               <width>50</width>
               <height>50</height>
              </size>
             </property>
             <property name="checkable">
              <bool>true</bool>
             </property>
             <property name="autoExclusive">
              <bool>true</bool>
             </property>
            </widget>
           </item>
           <item>
            <spacer name="verticalSpacer_2">
             <property name="orientation">
              <enum>Qt::Vertical</enum>
             </property>
             <property name="sizeHint" stdset="0">
              <size>
               <width>20</width>
               <height>188</height>
              </size>
             </property>
            </spacer>
           </item>
           <item>
            <widget class="QPushButton" name="pushButton_12">
             <property name="font">
              <font>
               <family>Roboto</family>
               <pointsize>-1</pointsize>
               <weight>75</weight>
               <bold>true</bold>
              </font>
             </property>
             <property name="text">
              <string>   Exit</string>
             </property>
             <property name="icon">
              <iconset resource="resource.qrc">
               <normaloff>:/icon/icon/close-window-64-white.ico</normaloff>:/icon/icon/close-window-64-white.ico</iconset>
             </property>
             <property name="iconSize">
              <size>
               <width>50</width>
               <height>50</height>
              </size>
             </property>
            </widget>
           </item>
          </layout>
         </item>
        </layout>
       </item>
      </layout>
     </widget>
    </item>
    <item row="0" column="3">
     <widget class="QScrollBar" name="verticalScrollBar">
      <property name="minimumSize">
       <size>
        <width>21</width>
        <height>1001</height>
       </size>
      </property>
      <property name="maximumSize">
       <size>
        <width>21</width>
        <height>1001</height>
       </size>
      </property>
      <property name="styleSheet">
       <string notr="true">QScrollBar:vertical {
    border: none;
    background: white; /* Inverted scrollbar background to white */
    width: 10px; /* Width of the scrollbar */
    margin: 0px 0px 0px 0px; /* Margins around the scrollbar */
}

QScrollBar::handle:vertical {
    background: rgb(31, 149, 239); /* Inverted handle color to blue */
    min-height: 20px; /* Minimum handle height */
    border-radius: 5px; /* Handle border radius */
}

QScrollBar::handle:vertical:hover {
    background: rgb(45, 45, 45); /* Darker color for hover, can be adjusted */
}

QScrollBar::add-line:vertical {
    border: none;
    background: white; /* Inverted button background to white */
    height: 0px; /* Hide the button */
    subcontrol-position: bottom;
    subcontrol-origin: margin;
}

QScrollBar::sub-line:vertical {
    border: none;
    background: white; /* Inverted button background to white */
    height: 0px; /* Hide the button */
    subcontrol-position: top;
    subcontrol-origin: margin;
}

QScrollBar::up-arrow:vertical, QScrollBar::down-arrow:vertical {
    background: none; /* Arrow background */
    color: none; /* Arrow color */
    width: 0px; /* Arrow width */
    height: 0px; /* Arrow height */
}

QScrollBar::add-page:vertical, QScrollBar::sub-page:vertical {
    background: none; /* Page background when clicking above/below the handle */
}
</string>
      </property>
      <property name="orientation">
       <enum>Qt::Vertical</enum>
      </property>
     </widget>
    </item>
    <item row="0" column="0">
     <widget class="QWidget" name="widget" native="true">
      <property name="minimumSize">
       <size>
        <width>131</width>
        <height>0</height>
       </size>
      </property>
      <property name="maximumSize">
       <size>
        <width>131</width>
        <height>16777215</height>
       </size>
      </property>
      <property name="styleSheet">
       <string notr="true">QWidget{

background-color: rgb(31, 149, 239);
}

QPushButton {
    color: white;
    text-align: centre;
    height: 100px;
    border: none;
    
    border-radius: 5px; 
    
    background-color: rgb(31, 149, 239); /* Normal background color */
    font-size: 14px; /* Set the font size here */
    /* Other styles */
}

QPushButton:hover {
    background-color: rgb(45, 45, 45); /* Darker background color on hover */
    color: rgb(220, 220, 220); /* Slightly lighter text color on hover */
}


QPushButton:checked {
 
	
	 background-color: rgb(45, 45, 45); /* Darker background color on checked */
}


QLabel {
    color: white;
    qproperty-alignment: AlignCenter; /* This will center the text */
}


</string>
      </property>
      <layout class="QVBoxLayout" name="verticalLayout">
       <item>
        <spacer name="verticalSpacer">
         <property name="orientation">
          <enum>Qt::Vertical</enum>
         </property>
         <property name="sizeType">
          <enum>QSizePolicy::Fixed</enum>
         </property>
         <property name="sizeHint" stdset="0">
          <size>
           <width>20</width>
           <height>40</height>
          </size>
         </property>
        </spacer>
       </item>
       <item>
        <widget class="QPushButton" name="pushButton">
         <property name="text">
          <string/>
         </property>
         <property name="icon">
          <iconset resource="resource.qrc">
           <normaloff>:/icon/icon/home-4-48.ico</normaloff>:/icon/icon/home-4-48.ico</iconset>
         </property>
         <property name="iconSize">
          <size>
           <width>100</width>
           <height>100</height>
          </size>
         </property>
         <property name="checkable">
          <bool>true</bool>
         </property>
         <property name="autoExclusive">
          <bool>true</bool>
         </property>
        </widget>
       </item>
       <item>
        <widget class="QPushButton" name="pushButton_2">
         <property name="text">
          <string/>
         </property>
         <property name="icon">
          <iconset resource="resource.qrc">
           <normaloff>:/icon/icon/dashboard-5-48.ico</normaloff>:/icon/icon/dashboard-5-48.ico</iconset>
         </property>
         <property name="iconSize">
          <size>
           <width>100</width>
           <height>100</height>
          </size>
         </property>
         <property name="checkable">
          <bool>true</bool>
         </property>
         <property name="autoExclusive">
          <bool>true</bool>
         </property>
        </widget>
       </item>
       <item>
        <widget class="QPushButton" name="pushButton_3">
         <property name="text">
          <string/>
         </property>
         <property name="icon">
          <iconset resource="resource.qrc">
           <normaloff>:/icon/icon/product-48.ico</normaloff>:/icon/icon/product-48.ico</iconset>
         </property>
         <property name="iconSize">
          <size>
           <width>100</width>
           <height>100</height>
          </size>
         </property>
         <property name="checkable">
          <bool>true</bool>
         </property>
         <property name="autoExclusive">
          <bool>true</bool>
         </property>
        </widget>
       </item>
       <item>
        <widget class="QPushButton" name="pushButton_4">
         <property name="text">
          <string/>
         </property>
         <property name="icon">
          <iconset resource="resource.qrc">
           <normaloff>:/icon/icon/user-48-white.ico</normaloff>:/icon/icon/user-48-white.ico</iconset>
         </property>
         <property name="iconSize">
          <size>
           <width>100</width>
           <height>100</height>
          </size>
         </property>
         <property name="checkable">
          <bool>true</bool>
         </property>
         <property name="autoExclusive">
          <bool>true</bool>
         </property>
        </widget>
       </item>
       <item>
        <widget class="QPushButton" name="pushButton_5">
         <property name="text">
          <string/>
         </property>
         <property name="icon">
          <iconset resource="resource.qrc">
           <normaloff>:/icon/icon/activity-feed-48.ico</normaloff>:/icon/icon/activity-feed-48.ico</iconset>
         </property>
         <property name="iconSize">
          <size>
           <width>100</width>
           <height>100</height>
          </size>
         </property>
         <property name="checkable">
          <bool>true</bool>
         </property>
         <property name="autoExclusive">
          <bool>true</bool>
         </property>
        </widget>
       </item>
       <item>
        <widget class="QPushButton" name="pushButton_13">
         <property name="text">
          <string/>
         </property>
         <property name="icon">
          <iconset resource="resource.qrc">
           <normaloff>:/icon/icon/search-13.ico</normaloff>:/icon/icon/search-13.ico</iconset>
         </property>
         <property name="iconSize">
          <size>
           <width>100</width>
           <height>100</height>
          </size>
         </property>
         <property name="checkable">
          <bool>true</bool>
         </property>
         <property name="autoExclusive">
          <bool>true</bool>
         </property>
        </widget>
       </item>
       <item>
        <widget class="QPushButton" name="pushButton_6">
         <property name="text">
          <string/>
         </property>
         <property name="icon">
          <iconset resource="resource.qrc">
           <normaloff>:/icon/icon/close-window-64-white.ico</normaloff>:/icon/icon/close-window-64-white.ico</iconset>
         </property>
         <property name="iconSize">
          <size>
           <width>100</width>
           <height>100</height>
          </size>
         </property>
        </widget>
       </item>
      </layout>
     </widget>
    </item>
    <item row="0" column="2">
     <widget class="QWidget" name="MainWindow_2" native="true">
      <layout class="QVBoxLayout" name="verticalLayout_3">
       <property name="leftMargin">
        <number>0</number>
       </property>
       <property name="topMargin">
        <number>0</number>
       </property>
       <item>
        <widget class="QWidget" name="widget_4" native="true">
         <property name="minimumSize">
          <size>
           <width>0</width>
           <height>61</height>
          </size>
         </property>
         <property name="maximumSize">
          <size>
           <width>16777215</width>
           <height>61</height>
          </size>
         </property>
         <property name="styleSheet">
          <string notr="true">QWidget{

background-color: rgb(31, 149, 239);
}

QPushButton {
    color: white;
    text-align: centre;
    height: 30px;
    border: none;
    
    border-radius: 5px; 
    
    background-color: rgb(31, 149, 239); /* Normal background color */
    font-size: 14px; /* Set the font size here */
    /* Other styles */
}

QPushButton:hover {
    background-color: rgb(45, 45, 45); /* Darker background color on hover */
    color: rgb(220, 220, 220); /* Slightly lighter text color on hover */
}

QPushButton:checked {
 
	 background-color: rgb(45, 45, 45); /* Darker background color on checked */
}

QLabel {
    color: white;
    qproperty-alignment: AlignCenter; /* This will center the text */
}


</string>
         </property>
         <layout class="QGridLayout" name="gridLayout_3">
          <property name="leftMargin">
           <number>3</number>
          </property>
          <property name="topMargin">
           <number>3</number>
          </property>
          <property name="rightMargin">
           <number>3</number>
          </property>
          <property name="bottomMargin">
           <number>3</number>
          </property>
          <item row="0" column="0">
           <layout class="QHBoxLayout" name="horizontalLayout">
            <item>
             <widget class="QPushButton" name="pushButton_15">
              <property name="minimumSize">
               <size>
                <width>50</width>
                <height>50</height>
               </size>
              </property>
              <property name="maximumSize">
               <size>
                <width>50</width>
                <height>50</height>
               </size>
              </property>
              <property name="text">
               <string/>
              </property>
              <property name="icon">
               <iconset resource="resource.qrc">
                <normaloff>:/icon/icon/menu-4-32-white.ico</normaloff>:/icon/icon/menu-4-32-white.ico</iconset>
              </property>
              <property name="iconSize">
               <size>
                <width>30</width>
                <height>30</height>
               </size>
              </property>
              <property name="checkable">
               <bool>true</bool>
              </property>
              <property name="autoExclusive">
               <bool>true</bool>
              </property>
             </widget>
            </item>
            <item>
             <spacer name="horizontalSpacer">
              <property name="orientation">
               <enum>Qt::Horizontal</enum>
              </property>
              <property name="sizeHint" stdset="0">
               <size>
                <width>40</width>
                <height>20</height>
               </size>
              </property>
             </spacer>
            </item>
           </layout>
          </item>
         </layout>
        </widget>
       </item>
       <item>
        <widget class="QWidget" name="widget_3" native="true">
         <widget class="QTabWidget" name="tabWidget">
          <property name="geometry">
           <rect>
            <x>0</x>
            <y>-30</y>
            <width>1451</width>
            <height>963</height>
           </rect>
          </property>
          <property name="font">
           <font>
            <family>Roboto Cn</family>
            <pointsize>10</pointsize>
            <weight>75</weight>
            <bold>true</bold>
           </font>
          </property>
          <property name="styleSheet">
           <string notr="true">QTabWidget::pane {
    /* The tab widget frame */
    border-top: 2px solid rgb(31, 149, 239);
    border-radius: 5px; /* Rounded corners for the pane */
}

QTabWidget::tab-bar {
    /* The tab bar */
    left: 5px; /* Move the bar to the right */
}

QTabBar::tab {
    /* The tab */
    background-color: rgb(31, 149, 239);
    color: white;
    padding: 5px;
    border: none;
    min-width: 80px; /* Set the minimum width of the tab */
    min-height: 30px; /* Set the minimum height of the tab */
    margin-right: 2px; /* Space between tabs */
    border-top-left-radius: 5px; /* Rounded top-left corner */
    border-top-right-radius: 5px; /* Rounded top-right corner */
}

QTabBar::tab:selected {
    /* The selected tab */
    background-color: rgb(45, 45, 45);
    border-top-left-radius: 5px; /* Maintain rounded corner when selected */
    border-top-right-radius: 5px; /* Maintain rounded corner when selected */
}

QTabBar::tab:hover {
    /* The tab when hovered over */
    background-color: rgb(51, 169, 259);
}
</string>
          </property>
          <property name="currentIndex">
           <number>3</number>
          </property>
          <widget class="QWidget" name="GeneralTab">
           <attribute name="title">
            <string>General</string>
           </attribute>
          </widget>
          <widget class="QWidget" name="StressTab">
           <attribute name="title">
            <string>Stress</string>
           </attribute>
          </widget>
          <widget class="QWidget" name="DepressionTab">
           <attribute name="title">
            <string>Depression</string>
           </attribute>
          </widget>
          <widget class="QWidget" name="SelfEsteemTab">
           <attribute name="title">
            <string>Self-Esteem</string>
           </attribute>
           <layout class="QGridLayout" name="gridLayout_4">
            <item row="0" column="0">
             <widget class="QStackedWidget" name="stackedWidget">
              <property name="currentIndex">
               <number>0</number>
              </property>
              <widget class="QWidget" name="page">
               <layout class="QVBoxLayout" name="verticalLayout_5">
                <item>
                 <layout class="QHBoxLayout" name="horizontalLayout_2">
                  <item>
                   <widget class="QLabel" name="label_4">
                    <property name="minimumSize">
                     <size>
                      <width>861</width>
                      <height>50</height>
                     </size>
                    </property>
                    <property name="maximumSize">
                     <size>
                      <width>861</width>
                      <height>50</height>
                     </size>
                    </property>
                    <property name="font">
                     <font>
                      <family>Roboto</family>
                      <pointsize>16</pointsize>
                     </font>
                    </property>
                    <property name="text">
                     <string>TextLabel</string>
                    </property>
                   </widget>
                  </item>
                  <item>
                   <widget class="QSlider" name="horizontalSlider_2">
                    <property name="minimumSize">
                     <size>
                      <width>351</width>
                      <height>71</height>
                     </size>
                    </property>
                    <property name="maximumSize">
                     <size>
                      <width>351</width>
                      <height>71</height>
                     </size>
                    </property>
                    <property name="styleSheet">
                     <string notr="true">QSlider::groove:horizontal {
    border: 1px solid #999999;
    height: 30px; /* Set the height of the groove */
    background: white;
    margin: 2px 0;
    border-radius: 4px; /* Setting border radius for groove */
}

QSlider::handle:horizontal {
    background: rgb(31, 149, 239); /* Handle color */
    border: none; /* No border for handle */
    width: 60px; /* Width of the handle */
    margin: -2px 0; /* Expand outside the groove */
    border-radius: 5px; /* Rounded corners for handle */
    position: absolute; /* Necessary for proper handle positioning */
}

QSlider::handle:horizontal:hover {
    background: rgb(45, 45, 45); /* Handle color when hovered */
}

/* Style for when the handle is pressed */
QSlider::handle:horizontal:pressed {
    background: rgb(31, 149, 239); /* You might want to change this color */
}

/* Ticks styling */
QSlider::sub-page:horizontal {
    background: rgb(31, 149, 239); /* Color of the part before the handle */
    border-radius: 4px;
}

QSlider::add-page:horizontal {
    background: white; /* Color of the part after the handle */
    border-radius: 4px;
}
</string>
                    </property>
                    <property name="maximum">
                     <number>20</number>
                    </property>
                    <property name="pageStep">
                     <number>5</number>
                    </property>
                    <property name="orientation">
                     <enum>Qt::Horizontal</enum>
                    </property>
                   </widget>
                  </item>
                  <item>
                   <widget class="QSpinBox" name="spinBox_4">
                    <property name="minimumSize">
                     <size>
                      <width>90</width>
                      <height>60</height>
                     </size>
                    </property>
                    <property name="maximumSize">
                     <size>
                      <width>90</width>
                      <height>60</height>
                     </size>
                    </property>
                    <property name="font">
                     <font>
                      <family>Roboto Bk</family>
                      <pointsize>20</pointsize>
                     </font>
                    </property>
                    <property name="styleSheet">
                     <string notr="true">QSpinBox {
    background-color: white;
    color: black;
    border: 2px solid black;
    border-radius: 5px;

    padding-left: 20px; /* Adjust left padding to center text */
  
    margin: 2px;
}

QSpinBox::up-button {
    /* Styling for the up-button */
    subcontrol-origin: border; /* Position within the border */
    subcontrol-position: top right; /* Position at the top right */
    width: 15px; /* Width of the up-button */
    border-left: 1px solid black; /* Border between the up-button and the spin box */
}

QSpinBox::down-button {
    /* Styling for the down-button */
    subcontrol-origin: border;
    subcontrol-position: bottom right;
    width: 15px;
    border-left: 1px solid black;
}

QSpinBox::up-arrow {
    /* Arrow styling within the up-button */
    width: 7px; /* Width of the arrow */
    height: 7px; /* Height of the arrow */
	image: url(:/icon/icon/menu-4-32.ico);
}

QSpinBox::down-arrow {
    /* Arrow styling within the down-button */
    width: 7px;
    height: 7px;
	image: url(:/icon/icon/menu-4-32.ico);
}


QSpinBox::up-button {
    subcontrol-origin: border;
    subcontrol-position: top right;
    width: 15px;
    border-bottom: 1px solid black; /* Add border between the up-button and down-button */
}

QSpinBox::down-button {
    subcontrol-origin: border;
    subcontrol-position: bottom right;
    width: 15px;
}


QSpinBox::up-button:pressed {
    /* Styling for the up-button when pressed */
    background-color: lightgray;
}

QSpinBox::down-button:pressed {
    /* Styling for the down-button when pressed */
    background-color: lightgray;
}

QSpinBox::up-button:hover, QSpinBox::down-button:hover {
    /* Styling for the buttons when hovered */
    background-color: #e0e0e0;
}</string>
                    </property>
                    <property name="buttonSymbols">
                     <enum>QAbstractSpinBox::UpDownArrows</enum>
                    </property>
                    <property name="maximum">
                     <number>20</number>
                    </property>
                   </widget>
                  </item>
                 </layout>
                </item>
                <item>
                 <layout class="QHBoxLayout" name="horizontalLayout_3">
                  <item>
                   <widget class="QLabel" name="label_6">
                    <property name="minimumSize">
                     <size>
                      <width>861</width>
                      <height>50</height>
                     </size>
                    </property>
                    <property name="maximumSize">
                     <size>
                      <width>861</width>
                      <height>50</height>
                     </size>
                    </property>
                    <property name="font">
                     <font>
                      <family>Roboto</family>
                      <pointsize>16</pointsize>
                     </font>
                    </property>
                    <property name="text">
                     <string>TextLabel</string>
                    </property>
                   </widget>
                  </item>
                  <item>
                   <widget class="QSlider" name="horizontalSlider_4">
                    <property name="minimumSize">
                     <size>
                      <width>351</width>
                      <height>71</height>
                     </size>
                    </property>
                    <property name="maximumSize">
                     <size>
                      <width>351</width>
                      <height>71</height>
                     </size>
                    </property>
                    <property name="styleSheet">
                     <string notr="true">QSlider::groove:horizontal {
    border: 1px solid #999999;
    height: 30px; /* Set the height of the groove */
    background: white;
    margin: 2px 0;
    border-radius: 4px; /* Setting border radius for groove */
}

QSlider::handle:horizontal {
    background: rgb(31, 149, 239); /* Handle color */
    border: none; /* No border for handle */
    width: 60px; /* Width of the handle */
    margin: -2px 0; /* Expand outside the groove */
    border-radius: 5px; /* Rounded corners for handle */
    position: absolute; /* Necessary for proper handle positioning */
}

QSlider::handle:horizontal:hover {
    background: rgb(45, 45, 45); /* Handle color when hovered */
}

/* Style for when the handle is pressed */
QSlider::handle:horizontal:pressed {
    background: rgb(31, 149, 239); /* You might want to change this color */
}

/* Ticks styling */
QSlider::sub-page:horizontal {
    background: rgb(31, 149, 239); /* Color of the part before the handle */
    border-radius: 4px;
}

QSlider::add-page:horizontal {
    background: white; /* Color of the part after the handle */
    border-radius: 4px;
}
</string>
                    </property>
                    <property name="maximum">
                     <number>20</number>
                    </property>
                    <property name="pageStep">
                     <number>5</number>
                    </property>
                    <property name="orientation">
                     <enum>Qt::Horizontal</enum>
                    </property>
                   </widget>
                  </item>
                  <item>
                   <widget class="QSpinBox" name="spinBox_6">
                    <property name="minimumSize">
                     <size>
                      <width>90</width>
                      <height>60</height>
                     </size>
                    </property>
                    <property name="maximumSize">
                     <size>
                      <width>90</width>
                      <height>60</height>
                     </size>
                    </property>
                    <property name="font">
                     <font>
                      <family>Roboto Bk</family>
                      <pointsize>20</pointsize>
                     </font>
                    </property>
                    <property name="styleSheet">
                     <string notr="true">QSpinBox {
    background-color: white;
    color: black;
    border: 2px solid black;
    border-radius: 5px;

    padding-left: 20px; /* Adjust left padding to center text */
  
    margin: 2px;
}

QSpinBox::up-button {
    /* Styling for the up-button */
    subcontrol-origin: border; /* Position within the border */
    subcontrol-position: top right; /* Position at the top right */
    width: 15px; /* Width of the up-button */
    border-left: 1px solid black; /* Border between the up-button and the spin box */
}

QSpinBox::down-button {
    /* Styling for the down-button */
    subcontrol-origin: border;
    subcontrol-position: bottom right;
    width: 15px;
    border-left: 1px solid black;
}

QSpinBox::up-arrow {
    /* Arrow styling within the up-button */
    width: 7px; /* Width of the arrow */
    height: 7px; /* Height of the arrow */
	image: url(:/icon/icon/menu-4-32.ico);
}

QSpinBox::down-arrow {
    /* Arrow styling within the down-button */
    width: 7px;
    height: 7px;
	image: url(:/icon/icon/menu-4-32.ico);
}


QSpinBox::up-button {
    subcontrol-origin: border;
    subcontrol-position: top right;
    width: 15px;
    border-bottom: 1px solid black; /* Add border between the up-button and down-button */
}

QSpinBox::down-button {
    subcontrol-origin: border;
    subcontrol-position: bottom right;
    width: 15px;
}


QSpinBox::up-button:pressed {
    /* Styling for the up-button when pressed */
    background-color: lightgray;
}

QSpinBox::down-button:pressed {
    /* Styling for the down-button when pressed */
    background-color: lightgray;
}

QSpinBox::up-button:hover, QSpinBox::down-button:hover {
    /* Styling for the buttons when hovered */
    background-color: #e0e0e0;
}</string>
                    </property>
                    <property name="buttonSymbols">
                     <enum>QAbstractSpinBox::UpDownArrows</enum>
                    </property>
                    <property name="maximum">
                     <number>20</number>
                    </property>
                   </widget>
                  </item>
                 </layout>
                </item>
                <item>
                 <layout class="QHBoxLayout" name="horizontalLayout_28">
                  <item>
                   <widget class="QLabel" name="label_30">
                    <property name="minimumSize">
                     <size>
                      <width>861</width>
                      <height>50</height>
                     </size>
                    </property>
                    <property name="maximumSize">
                     <size>
                      <width>861</width>
                      <height>50</height>
                     </size>
                    </property>
                    <property name="font">
                     <font>
                      <family>Roboto</family>
                      <pointsize>16</pointsize>
                     </font>
                    </property>
                    <property name="text">
                     <string>TextLabel</string>
                    </property>
                   </widget>
                  </item>
                  <item>
                   <widget class="QSlider" name="horizontalSlider_28">
                    <property name="minimumSize">
                     <size>
                      <width>351</width>
                      <height>71</height>
                     </size>
                    </property>
                    <property name="maximumSize">
                     <size>
                      <width>351</width>
                      <height>71</height>
                     </size>
                    </property>
                    <property name="styleSheet">
                     <string notr="true">QSlider::groove:horizontal {
    border: 1px solid #999999;
    height: 30px; /* Set the height of the groove */
    background: white;
    margin: 2px 0;
    border-radius: 4px; /* Setting border radius for groove */
}

QSlider::handle:horizontal {
    background: rgb(31, 149, 239); /* Handle color */
    border: none; /* No border for handle */
    width: 60px; /* Width of the handle */
    margin: -2px 0; /* Expand outside the groove */
    border-radius: 5px; /* Rounded corners for handle */
    position: absolute; /* Necessary for proper handle positioning */
}

QSlider::handle:horizontal:hover {
    background: rgb(45, 45, 45); /* Handle color when hovered */
}

/* Style for when the handle is pressed */
QSlider::handle:horizontal:pressed {
    background: rgb(31, 149, 239); /* You might want to change this color */
}

/* Ticks styling */
QSlider::sub-page:horizontal {
    background: rgb(31, 149, 239); /* Color of the part before the handle */
    border-radius: 4px;
}

QSlider::add-page:horizontal {
    background: white; /* Color of the part after the handle */
    border-radius: 4px;
}
</string>
                    </property>
                    <property name="maximum">
                     <number>20</number>
                    </property>
                    <property name="pageStep">
                     <number>5</number>
                    </property>
                    <property name="orientation">
                     <enum>Qt::Horizontal</enum>
                    </property>
                   </widget>
                  </item>
                  <item>
                   <widget class="QSpinBox" name="spinBox_30">
                    <property name="minimumSize">
                     <size>
                      <width>90</width>
                      <height>60</height>
                     </size>
                    </property>
                    <property name="maximumSize">
                     <size>
                      <width>90</width>
                      <height>60</height>
                     </size>
                    </property>
                    <property name="font">
                     <font>
                      <family>Roboto Bk</family>
                      <pointsize>20</pointsize>
                     </font>
                    </property>
                    <property name="styleSheet">
                     <string notr="true">QSpinBox {
    background-color: white;
    color: black;
    border: 2px solid black;
    border-radius: 5px;

    padding-left: 20px; /* Adjust left padding to center text */
  
    margin: 2px;
}

QSpinBox::up-button {
    /* Styling for the up-button */
    subcontrol-origin: border; /* Position within the border */
    subcontrol-position: top right; /* Position at the top right */
    width: 15px; /* Width of the up-button */
    border-left: 1px solid black; /* Border between the up-button and the spin box */
}

QSpinBox::down-button {
    /* Styling for the down-button */
    subcontrol-origin: border;
    subcontrol-position: bottom right;
    width: 15px;
    border-left: 1px solid black;
}

QSpinBox::up-arrow {
    /* Arrow styling within the up-button */
    width: 7px; /* Width of the arrow */
    height: 7px; /* Height of the arrow */
	image: url(:/icon/icon/menu-4-32.ico);
}

QSpinBox::down-arrow {
    /* Arrow styling within the down-button */
    width: 7px;
    height: 7px;
	image: url(:/icon/icon/menu-4-32.ico);
}


QSpinBox::up-button {
    subcontrol-origin: border;
    subcontrol-position: top right;
    width: 15px;
    border-bottom: 1px solid black; /* Add border between the up-button and down-button */
}

QSpinBox::down-button {
    subcontrol-origin: border;
    subcontrol-position: bottom right;
    width: 15px;
}


QSpinBox::up-button:pressed {
    /* Styling for the up-button when pressed */
    background-color: lightgray;
}

QSpinBox::down-button:pressed {
    /* Styling for the down-button when pressed */
    background-color: lightgray;
}

QSpinBox::up-button:hover, QSpinBox::down-button:hover {
    /* Styling for the buttons when hovered */
    background-color: #e0e0e0;
}</string>
                    </property>
                    <property name="buttonSymbols">
                     <enum>QAbstractSpinBox::UpDownArrows</enum>
                    </property>
                    <property name="maximum">
                     <number>20</number>
                    </property>
                   </widget>
                  </item>
                 </layout>
                </item>
                <item>
                 <layout class="QHBoxLayout" name="horizontalLayout_29">
                  <item>
                   <widget class="QLabel" name="label_31">
                    <property name="minimumSize">
                     <size>
                      <width>861</width>
                      <height>50</height>
                     </size>
                    </property>
                    <property name="maximumSize">
                     <size>
                      <width>861</width>
                      <height>50</height>
                     </size>
                    </property>
                    <property name="font">
                     <font>
                      <family>Roboto</family>
                      <pointsize>16</pointsize>
                     </font>
                    </property>
                    <property name="text">
                     <string>TextLabel</string>
                    </property>
                   </widget>
                  </item>
                  <item>
                   <widget class="QSlider" name="horizontalSlider_29">
                    <property name="minimumSize">
                     <size>
                      <width>351</width>
                      <height>71</height>
                     </size>
                    </property>
                    <property name="maximumSize">
                     <size>
                      <width>351</width>
                      <height>71</height>
                     </size>
                    </property>
                    <property name="styleSheet">
                     <string notr="true">QSlider::groove:horizontal {
    border: 1px solid #999999;
    height: 30px; /* Set the height of the groove */
    background: white;
    margin: 2px 0;
    border-radius: 4px; /* Setting border radius for groove */
}

QSlider::handle:horizontal {
    background: rgb(31, 149, 239); /* Handle color */
    border: none; /* No border for handle */
    width: 60px; /* Width of the handle */
    margin: -2px 0; /* Expand outside the groove */
    border-radius: 5px; /* Rounded corners for handle */
    position: absolute; /* Necessary for proper handle positioning */
}

QSlider::handle:horizontal:hover {
    background: rgb(45, 45, 45); /* Handle color when hovered */
}

/* Style for when the handle is pressed */
QSlider::handle:horizontal:pressed {
    background: rgb(31, 149, 239); /* You might want to change this color */
}

/* Ticks styling */
QSlider::sub-page:horizontal {
    background: rgb(31, 149, 239); /* Color of the part before the handle */
    border-radius: 4px;
}

QSlider::add-page:horizontal {
    background: white; /* Color of the part after the handle */
    border-radius: 4px;
}
</string>
                    </property>
                    <property name="maximum">
                     <number>20</number>
                    </property>
                    <property name="pageStep">
                     <number>5</number>
                    </property>
                    <property name="orientation">
                     <enum>Qt::Horizontal</enum>
                    </property>
                   </widget>
                  </item>
                  <item>
                   <widget class="QSpinBox" name="spinBox_31">
                    <property name="minimumSize">
                     <size>
                      <width>90</width>
                      <height>60</height>
                     </size>
                    </property>
                    <property name="maximumSize">
                     <size>
                      <width>90</width>
                      <height>60</height>
                     </size>
                    </property>
                    <property name="font">
                     <font>
                      <family>Roboto Bk</family>
                      <pointsize>20</pointsize>
                     </font>
                    </property>
                    <property name="styleSheet">
                     <string notr="true">QSpinBox {
    background-color: white;
    color: black;
    border: 2px solid black;
    border-radius: 5px;

    padding-left: 20px; /* Adjust left padding to center text */
  
    margin: 2px;
}

QSpinBox::up-button {
    /* Styling for the up-button */
    subcontrol-origin: border; /* Position within the border */
    subcontrol-position: top right; /* Position at the top right */
    width: 15px; /* Width of the up-button */
    border-left: 1px solid black; /* Border between the up-button and the spin box */
}

QSpinBox::down-button {
    /* Styling for the down-button */
    subcontrol-origin: border;
    subcontrol-position: bottom right;
    width: 15px;
    border-left: 1px solid black;
}

QSpinBox::up-arrow {
    /* Arrow styling within the up-button */
    width: 7px; /* Width of the arrow */
    height: 7px; /* Height of the arrow */
	image: url(:/icon/icon/menu-4-32.ico);
}

QSpinBox::down-arrow {
    /* Arrow styling within the down-button */
    width: 7px;
    height: 7px;
	image: url(:/icon/icon/menu-4-32.ico);
}


QSpinBox::up-button {
    subcontrol-origin: border;
    subcontrol-position: top right;
    width: 15px;
    border-bottom: 1px solid black; /* Add border between the up-button and down-button */
}

QSpinBox::down-button {
    subcontrol-origin: border;
    subcontrol-position: bottom right;
    width: 15px;
}


QSpinBox::up-button:pressed {
    /* Styling for the up-button when pressed */
    background-color: lightgray;
}

QSpinBox::down-button:pressed {
    /* Styling for the down-button when pressed */
    background-color: lightgray;
}

QSpinBox::up-button:hover, QSpinBox::down-button:hover {
    /* Styling for the buttons when hovered */
    background-color: #e0e0e0;
}</string>
                    </property>
                    <property name="buttonSymbols">
                     <enum>QAbstractSpinBox::UpDownArrows</enum>
                    </property>
                    <property name="maximum">
                     <number>20</number>
                    </property>
                   </widget>
                  </item>
                 </layout>
                </item>
                <item>
                 <layout class="QHBoxLayout" name="horizontalLayout_30">
                  <item>
                   <widget class="QLabel" name="label_32">
                    <property name="minimumSize">
                     <size>
                      <width>861</width>
                      <height>50</height>
                     </size>
                    </property>
                    <property name="maximumSize">
                     <size>
                      <width>861</width>
                      <height>50</height>
                     </size>
                    </property>
                    <property name="font">
                     <font>
                      <family>Roboto</family>
                      <pointsize>16</pointsize>
                     </font>
                    </property>
                    <property name="text">
                     <string>TextLabel</string>
                    </property>
                   </widget>
                  </item>
                  <item>
                   <widget class="QSlider" name="horizontalSlider_30">
                    <property name="minimumSize">
                     <size>
                      <width>351</width>
                      <height>71</height>
                     </size>
                    </property>
                    <property name="maximumSize">
                     <size>
                      <width>351</width>
                      <height>71</height>
                     </size>
                    </property>
                    <property name="styleSheet">
                     <string notr="true">QSlider::groove:horizontal {
    border: 1px solid #999999;
    height: 30px; /* Set the height of the groove */
    background: white;
    margin: 2px 0;
    border-radius: 4px; /* Setting border radius for groove */
}

QSlider::handle:horizontal {
    background: rgb(31, 149, 239); /* Handle color */
    border: none; /* No border for handle */
    width: 60px; /* Width of the handle */
    margin: -2px 0; /* Expand outside the groove */
    border-radius: 5px; /* Rounded corners for handle */
    position: absolute; /* Necessary for proper handle positioning */
}

QSlider::handle:horizontal:hover {
    background: rgb(45, 45, 45); /* Handle color when hovered */
}

/* Style for when the handle is pressed */
QSlider::handle:horizontal:pressed {
    background: rgb(31, 149, 239); /* You might want to change this color */
}

/* Ticks styling */
QSlider::sub-page:horizontal {
    background: rgb(31, 149, 239); /* Color of the part before the handle */
    border-radius: 4px;
}

QSlider::add-page:horizontal {
    background: white; /* Color of the part after the handle */
    border-radius: 4px;
}
</string>
                    </property>
                    <property name="maximum">
                     <number>20</number>
                    </property>
                    <property name="pageStep">
                     <number>5</number>
                    </property>
                    <property name="orientation">
                     <enum>Qt::Horizontal</enum>
                    </property>
                   </widget>
                  </item>
                  <item>
                   <widget class="QSpinBox" name="spinBox_32">
                    <property name="minimumSize">
                     <size>
                      <width>90</width>
                      <height>60</height>
                     </size>
                    </property>
                    <property name="maximumSize">
                     <size>
                      <width>90</width>
                      <height>60</height>
                     </size>
                    </property>
                    <property name="font">
                     <font>
                      <family>Roboto Bk</family>
                      <pointsize>20</pointsize>
                     </font>
                    </property>
                    <property name="styleSheet">
                     <string notr="true">QSpinBox {
    background-color: white;
    color: black;
    border: 2px solid black;
    border-radius: 5px;

    padding-left: 20px; /* Adjust left padding to center text */
  
    margin: 2px;
}

QSpinBox::up-button {
    /* Styling for the up-button */
    subcontrol-origin: border; /* Position within the border */
    subcontrol-position: top right; /* Position at the top right */
    width: 15px; /* Width of the up-button */
    border-left: 1px solid black; /* Border between the up-button and the spin box */
}

QSpinBox::down-button {
    /* Styling for the down-button */
    subcontrol-origin: border;
    subcontrol-position: bottom right;
    width: 15px;
    border-left: 1px solid black;
}

QSpinBox::up-arrow {
    /* Arrow styling within the up-button */
    width: 7px; /* Width of the arrow */
    height: 7px; /* Height of the arrow */
	image: url(:/icon/icon/menu-4-32.ico);
}

QSpinBox::down-arrow {
    /* Arrow styling within the down-button */
    width: 7px;
    height: 7px;
	image: url(:/icon/icon/menu-4-32.ico);
}


QSpinBox::up-button {
    subcontrol-origin: border;
    subcontrol-position: top right;
    width: 15px;
    border-bottom: 1px solid black; /* Add border between the up-button and down-button */
}

QSpinBox::down-button {
    subcontrol-origin: border;
    subcontrol-position: bottom right;
    width: 15px;
}


QSpinBox::up-button:pressed {
    /* Styling for the up-button when pressed */
    background-color: lightgray;
}

QSpinBox::down-button:pressed {
    /* Styling for the down-button when pressed */
    background-color: lightgray;
}

QSpinBox::up-button:hover, QSpinBox::down-button:hover {
    /* Styling for the buttons when hovered */
    background-color: #e0e0e0;
}</string>
                    </property>
                    <property name="buttonSymbols">
                     <enum>QAbstractSpinBox::UpDownArrows</enum>
                    </property>
                    <property name="maximum">
                     <number>20</number>
                    </property>
                   </widget>
                  </item>
                 </layout>
                </item>
                <item>
                 <layout class="QHBoxLayout" name="horizontalLayout_36">
                  <item>
                   <widget class="QLabel" name="label_38">
                    <property name="minimumSize">
                     <size>
                      <width>861</width>
                      <height>50</height>
                     </size>
                    </property>
                    <property name="maximumSize">
                     <size>
                      <width>861</width>
                      <height>50</height>
                     </size>
                    </property>
                    <property name="font">
                     <font>
                      <family>Roboto</family>
                      <pointsize>16</pointsize>
                     </font>
                    </property>
                    <property name="text">
                     <string>TextLabel</string>
                    </property>
                   </widget>
                  </item>
                  <item>
                   <widget class="QSlider" name="horizontalSlider_36">
                    <property name="minimumSize">
                     <size>
                      <width>351</width>
                      <height>71</height>
                     </size>
                    </property>
                    <property name="maximumSize">
                     <size>
                      <width>351</width>
                      <height>71</height>
                     </size>
                    </property>
                    <property name="styleSheet">
                     <string notr="true">QSlider::groove:horizontal {
    border: 1px solid #999999;
    height: 30px; /* Set the height of the groove */
    background: white;
    margin: 2px 0;
    border-radius: 4px; /* Setting border radius for groove */
}

QSlider::handle:horizontal {
    background: rgb(31, 149, 239); /* Handle color */
    border: none; /* No border for handle */
    width: 60px; /* Width of the handle */
    margin: -2px 0; /* Expand outside the groove */
    border-radius: 5px; /* Rounded corners for handle */
    position: absolute; /* Necessary for proper handle positioning */
}

QSlider::handle:horizontal:hover {
    background: rgb(45, 45, 45); /* Handle color when hovered */
}

/* Style for when the handle is pressed */
QSlider::handle:horizontal:pressed {
    background: rgb(31, 149, 239); /* You might want to change this color */
}

/* Ticks styling */
QSlider::sub-page:horizontal {
    background: rgb(31, 149, 239); /* Color of the part before the handle */
    border-radius: 4px;
}

QSlider::add-page:horizontal {
    background: white; /* Color of the part after the handle */
    border-radius: 4px;
}
</string>
                    </property>
                    <property name="maximum">
                     <number>20</number>
                    </property>
                    <property name="pageStep">
                     <number>5</number>
                    </property>
                    <property name="orientation">
                     <enum>Qt::Horizontal</enum>
                    </property>
                   </widget>
                  </item>
                  <item>
                   <widget class="QSpinBox" name="spinBox_38">
                    <property name="minimumSize">
                     <size>
                      <width>90</width>
                      <height>60</height>
                     </size>
                    </property>
                    <property name="maximumSize">
                     <size>
                      <width>90</width>
                      <height>60</height>
                     </size>
                    </property>
                    <property name="font">
                     <font>
                      <family>Roboto Bk</family>
                      <pointsize>20</pointsize>
                     </font>
                    </property>
                    <property name="styleSheet">
                     <string notr="true">QSpinBox {
    background-color: white;
    color: black;
    border: 2px solid black;
    border-radius: 5px;

    padding-left: 20px; /* Adjust left padding to center text */
  
    margin: 2px;
}

QSpinBox::up-button {
    /* Styling for the up-button */
    subcontrol-origin: border; /* Position within the border */
    subcontrol-position: top right; /* Position at the top right */
    width: 15px; /* Width of the up-button */
    border-left: 1px solid black; /* Border between the up-button and the spin box */
}

QSpinBox::down-button {
    /* Styling for the down-button */
    subcontrol-origin: border;
    subcontrol-position: bottom right;
    width: 15px;
    border-left: 1px solid black;
}

QSpinBox::up-arrow {
    /* Arrow styling within the up-button */
    width: 7px; /* Width of the arrow */
    height: 7px; /* Height of the arrow */
	image: url(:/icon/icon/menu-4-32.ico);
}

QSpinBox::down-arrow {
    /* Arrow styling within the down-button */
    width: 7px;
    height: 7px;
	image: url(:/icon/icon/menu-4-32.ico);
}


QSpinBox::up-button {
    subcontrol-origin: border;
    subcontrol-position: top right;
    width: 15px;
    border-bottom: 1px solid black; /* Add border between the up-button and down-button */
}

QSpinBox::down-button {
    subcontrol-origin: border;
    subcontrol-position: bottom right;
    width: 15px;
}


QSpinBox::up-button:pressed {
    /* Styling for the up-button when pressed */
    background-color: lightgray;
}

QSpinBox::down-button:pressed {
    /* Styling for the down-button when pressed */
    background-color: lightgray;
}

QSpinBox::up-button:hover, QSpinBox::down-button:hover {
    /* Styling for the buttons when hovered */
    background-color: #e0e0e0;
}</string>
                    </property>
                    <property name="buttonSymbols">
                     <enum>QAbstractSpinBox::UpDownArrows</enum>
                    </property>
                    <property name="maximum">
                     <number>20</number>
                    </property>
                   </widget>
                  </item>
                 </layout>
                </item>
                <item>
                 <layout class="QHBoxLayout" name="horizontalLayout_37">
                  <item>
                   <widget class="QLabel" name="label_39">
                    <property name="minimumSize">
                     <size>
                      <width>861</width>
                      <height>50</height>
                     </size>
                    </property>
                    <property name="maximumSize">
                     <size>
                      <width>861</width>
                      <height>50</height>
                     </size>
                    </property>
                    <property name="font">
                     <font>
                      <family>Roboto</family>
                      <pointsize>16</pointsize>
                     </font>
                    </property>
                    <property name="text">
                     <string>TextLabel</string>
                    </property>
                   </widget>
                  </item>
                  <item>
                   <widget class="QSlider" name="horizontalSlider_37">
                    <property name="minimumSize">
                     <size>
                      <width>351</width>
                      <height>71</height>
                     </size>
                    </property>
                    <property name="maximumSize">
                     <size>
                      <width>351</width>
                      <height>71</height>
                     </size>
                    </property>
                    <property name="styleSheet">
                     <string notr="true">QSlider::groove:horizontal {
    border: 1px solid #999999;
    height: 30px; /* Set the height of the groove */
    background: white;
    margin: 2px 0;
    border-radius: 4px; /* Setting border radius for groove */
}

QSlider::handle:horizontal {
    background: rgb(31, 149, 239); /* Handle color */
    border: none; /* No border for handle */
    width: 60px; /* Width of the handle */
    margin: -2px 0; /* Expand outside the groove */
    border-radius: 5px; /* Rounded corners for handle */
    position: absolute; /* Necessary for proper handle positioning */
}

QSlider::handle:horizontal:hover {
    background: rgb(45, 45, 45); /* Handle color when hovered */
}

/* Style for when the handle is pressed */
QSlider::handle:horizontal:pressed {
    background: rgb(31, 149, 239); /* You might want to change this color */
}

/* Ticks styling */
QSlider::sub-page:horizontal {
    background: rgb(31, 149, 239); /* Color of the part before the handle */
    border-radius: 4px;
}

QSlider::add-page:horizontal {
    background: white; /* Color of the part after the handle */
    border-radius: 4px;
}
</string>
                    </property>
                    <property name="maximum">
                     <number>20</number>
                    </property>
                    <property name="pageStep">
                     <number>5</number>
                    </property>
                    <property name="orientation">
                     <enum>Qt::Horizontal</enum>
                    </property>
                   </widget>
                  </item>
                  <item>
                   <widget class="QSpinBox" name="spinBox_39">
                    <property name="minimumSize">
                     <size>
                      <width>90</width>
                      <height>60</height>
                     </size>
                    </property>
                    <property name="maximumSize">
                     <size>
                      <width>90</width>
                      <height>60</height>
                     </size>
                    </property>
                    <property name="font">
                     <font>
                      <family>Roboto Bk</family>
                      <pointsize>20</pointsize>
                     </font>
                    </property>
                    <property name="styleSheet">
                     <string notr="true">QSpinBox {
    background-color: white;
    color: black;
    border: 2px solid black;
    border-radius: 5px;

    padding-left: 20px; /* Adjust left padding to center text */
  
    margin: 2px;
}

QSpinBox::up-button {
    /* Styling for the up-button */
    subcontrol-origin: border; /* Position within the border */
    subcontrol-position: top right; /* Position at the top right */
    width: 15px; /* Width of the up-button */
    border-left: 1px solid black; /* Border between the up-button and the spin box */
}

QSpinBox::down-button {
    /* Styling for the down-button */
    subcontrol-origin: border;
    subcontrol-position: bottom right;
    width: 15px;
    border-left: 1px solid black;
}

QSpinBox::up-arrow {
    /* Arrow styling within the up-button */
    width: 7px; /* Width of the arrow */
    height: 7px; /* Height of the arrow */
	image: url(:/icon/icon/menu-4-32.ico);
}

QSpinBox::down-arrow {
    /* Arrow styling within the down-button */
    width: 7px;
    height: 7px;
	image: url(:/icon/icon/menu-4-32.ico);
}


QSpinBox::up-button {
    subcontrol-origin: border;
    subcontrol-position: top right;
    width: 15px;
    border-bottom: 1px solid black; /* Add border between the up-button and down-button */
}

QSpinBox::down-button {
    subcontrol-origin: border;
    subcontrol-position: bottom right;
    width: 15px;
}


QSpinBox::up-button:pressed {
    /* Styling for the up-button when pressed */
    background-color: lightgray;
}

QSpinBox::down-button:pressed {
    /* Styling for the down-button when pressed */
    background-color: lightgray;
}

QSpinBox::up-button:hover, QSpinBox::down-button:hover {
    /* Styling for the buttons when hovered */
    background-color: #e0e0e0;
}</string>
                    </property>
                    <property name="buttonSymbols">
                     <enum>QAbstractSpinBox::UpDownArrows</enum>
                    </property>
                    <property name="maximum">
                     <number>20</number>
                    </property>
                   </widget>
                  </item>
                 </layout>
                </item>
                <item>
                 <layout class="QHBoxLayout" name="horizontalLayout_38">
                  <item>
                   <widget class="QLabel" name="label_40">
                    <property name="minimumSize">
                     <size>
                      <width>861</width>
                      <height>50</height>
                     </size>
                    </property>
                    <property name="maximumSize">
                     <size>
                      <width>861</width>
                      <height>50</height>
                     </size>
                    </property>
                    <property name="font">
                     <font>
                      <family>Roboto</family>
                      <pointsize>16</pointsize>
                     </font>
                    </property>
                    <property name="text">
                     <string>TextLabel</string>
                    </property>
                   </widget>
                  </item>
                  <item>
                   <widget class="QSlider" name="horizontalSlider_38">
                    <property name="minimumSize">
                     <size>
                      <width>351</width>
                      <height>71</height>
                     </size>
                    </property>
                    <property name="maximumSize">
                     <size>
                      <width>351</width>
                      <height>71</height>
                     </size>
                    </property>
                    <property name="styleSheet">
                     <string notr="true">QSlider::groove:horizontal {
    border: 1px solid #999999;
    height: 30px; /* Set the height of the groove */
    background: white;
    margin: 2px 0;
    border-radius: 4px; /* Setting border radius for groove */
}

QSlider::handle:horizontal {
    background: rgb(31, 149, 239); /* Handle color */
    border: none; /* No border for handle */
    width: 60px; /* Width of the handle */
    margin: -2px 0; /* Expand outside the groove */
    border-radius: 5px; /* Rounded corners for handle */
    position: absolute; /* Necessary for proper handle positioning */
}

QSlider::handle:horizontal:hover {
    background: rgb(45, 45, 45); /* Handle color when hovered */
}

/* Style for when the handle is pressed */
QSlider::handle:horizontal:pressed {
    background: rgb(31, 149, 239); /* You might want to change this color */
}

/* Ticks styling */
QSlider::sub-page:horizontal {
    background: rgb(31, 149, 239); /* Color of the part before the handle */
    border-radius: 4px;
}

QSlider::add-page:horizontal {
    background: white; /* Color of the part after the handle */
    border-radius: 4px;
}
</string>
                    </property>
                    <property name="maximum">
                     <number>20</number>
                    </property>
                    <property name="pageStep">
                     <number>5</number>
                    </property>
                    <property name="orientation">
                     <enum>Qt::Horizontal</enum>
                    </property>
                   </widget>
                  </item>
                  <item>
                   <widget class="QSpinBox" name="spinBox_40">
                    <property name="minimumSize">
                     <size>
                      <width>90</width>
                      <height>60</height>
                     </size>
                    </property>
                    <property name="maximumSize">
                     <size>
                      <width>90</width>
                      <height>60</height>
                     </size>
                    </property>
                    <property name="font">
                     <font>
                      <family>Roboto Bk</family>
                      <pointsize>20</pointsize>
                     </font>
                    </property>
                    <property name="styleSheet">
                     <string notr="true">QSpinBox {
    background-color: white;
    color: black;
    border: 2px solid black;
    border-radius: 5px;

    padding-left: 20px; /* Adjust left padding to center text */
  
    margin: 2px;
}

QSpinBox::up-button {
    /* Styling for the up-button */
    subcontrol-origin: border; /* Position within the border */
    subcontrol-position: top right; /* Position at the top right */
    width: 15px; /* Width of the up-button */
    border-left: 1px solid black; /* Border between the up-button and the spin box */
}

QSpinBox::down-button {
    /* Styling for the down-button */
    subcontrol-origin: border;
    subcontrol-position: bottom right;
    width: 15px;
    border-left: 1px solid black;
}

QSpinBox::up-arrow {
    /* Arrow styling within the up-button */
    width: 7px; /* Width of the arrow */
    height: 7px; /* Height of the arrow */
	image: url(:/icon/icon/menu-4-32.ico);
}

QSpinBox::down-arrow {
    /* Arrow styling within the down-button */
    width: 7px;
    height: 7px;
	image: url(:/icon/icon/menu-4-32.ico);
}


QSpinBox::up-button {
    subcontrol-origin: border;
    subcontrol-position: top right;
    width: 15px;
    border-bottom: 1px solid black; /* Add border between the up-button and down-button */
}

QSpinBox::down-button {
    subcontrol-origin: border;
    subcontrol-position: bottom right;
    width: 15px;
}


QSpinBox::up-button:pressed {
    /* Styling for the up-button when pressed */
    background-color: lightgray;
}

QSpinBox::down-button:pressed {
    /* Styling for the down-button when pressed */
    background-color: lightgray;
}

QSpinBox::up-button:hover, QSpinBox::down-button:hover {
    /* Styling for the buttons when hovered */
    background-color: #e0e0e0;
}</string>
                    </property>
                    <property name="buttonSymbols">
                     <enum>QAbstractSpinBox::UpDownArrows</enum>
                    </property>
                    <property name="maximum">
                     <number>20</number>
                    </property>
                   </widget>
                  </item>
                 </layout>
                </item>
                <item>
                 <layout class="QHBoxLayout" name="horizontalLayout_39">
                  <item>
                   <widget class="QLabel" name="label_41">
                    <property name="minimumSize">
                     <size>
                      <width>861</width>
                      <height>50</height>
                     </size>
                    </property>
                    <property name="maximumSize">
                     <size>
                      <width>861</width>
                      <height>50</height>
                     </size>
                    </property>
                    <property name="font">
                     <font>
                      <family>Roboto</family>
                      <pointsize>16</pointsize>
                     </font>
                    </property>
                    <property name="text">
                     <string>TextLabel</string>
                    </property>
                   </widget>
                  </item>
                  <item>
                   <widget class="QSlider" name="horizontalSlider_39">
                    <property name="minimumSize">
                     <size>
                      <width>351</width>
                      <height>71</height>
                     </size>
                    </property>
                    <property name="maximumSize">
                     <size>
                      <width>351</width>
                      <height>71</height>
                     </size>
                    </property>
                    <property name="styleSheet">
                     <string notr="true">QSlider::groove:horizontal {
    border: 1px solid #999999;
    height: 30px; /* Set the height of the groove */
    background: white;
    margin: 2px 0;
    border-radius: 4px; /* Setting border radius for groove */
}

QSlider::handle:horizontal {
    background: rgb(31, 149, 239); /* Handle color */
    border: none; /* No border for handle */
    width: 60px; /* Width of the handle */
    margin: -2px 0; /* Expand outside the groove */
    border-radius: 5px; /* Rounded corners for handle */
    position: absolute; /* Necessary for proper handle positioning */
}

QSlider::handle:horizontal:hover {
    background: rgb(45, 45, 45); /* Handle color when hovered */
}

/* Style for when the handle is pressed */
QSlider::handle:horizontal:pressed {
    background: rgb(31, 149, 239); /* You might want to change this color */
}

/* Ticks styling */
QSlider::sub-page:horizontal {
    background: rgb(31, 149, 239); /* Color of the part before the handle */
    border-radius: 4px;
}

QSlider::add-page:horizontal {
    background: white; /* Color of the part after the handle */
    border-radius: 4px;
}
</string>
                    </property>
                    <property name="maximum">
                     <number>20</number>
                    </property>
                    <property name="pageStep">
                     <number>5</number>
                    </property>
                    <property name="orientation">
                     <enum>Qt::Horizontal</enum>
                    </property>
                   </widget>
                  </item>
                  <item>
                   <widget class="QSpinBox" name="spinBox_41">
                    <property name="minimumSize">
                     <size>
                      <width>90</width>
                      <height>60</height>
                     </size>
                    </property>
                    <property name="maximumSize">
                     <size>
                      <width>90</width>
                      <height>60</height>
                     </size>
                    </property>
                    <property name="font">
                     <font>
                      <family>Roboto Bk</family>
                      <pointsize>20</pointsize>
                     </font>
                    </property>
                    <property name="styleSheet">
                     <string notr="true">QSpinBox {
    background-color: white;
    color: black;
    border: 2px solid black;
    border-radius: 5px;

    padding-left: 20px; /* Adjust left padding to center text */
  
    margin: 2px;
}

QSpinBox::up-button {
    /* Styling for the up-button */
    subcontrol-origin: border; /* Position within the border */
    subcontrol-position: top right; /* Position at the top right */
    width: 15px; /* Width of the up-button */
    border-left: 1px solid black; /* Border between the up-button and the spin box */
}

QSpinBox::down-button {
    /* Styling for the down-button */
    subcontrol-origin: border;
    subcontrol-position: bottom right;
    width: 15px;
    border-left: 1px solid black;
}

QSpinBox::up-arrow {
    /* Arrow styling within the up-button */
    width: 7px; /* Width of the arrow */
    height: 7px; /* Height of the arrow */
	image: url(:/icon/icon/menu-4-32.ico);
}

QSpinBox::down-arrow {
    /* Arrow styling within the down-button */
    width: 7px;
    height: 7px;
	image: url(:/icon/icon/menu-4-32.ico);
}


QSpinBox::up-button {
    subcontrol-origin: border;
    subcontrol-position: top right;
    width: 15px;
    border-bottom: 1px solid black; /* Add border between the up-button and down-button */
}

QSpinBox::down-button {
    subcontrol-origin: border;
    subcontrol-position: bottom right;
    width: 15px;
}


QSpinBox::up-button:pressed {
    /* Styling for the up-button when pressed */
    background-color: lightgray;
}

QSpinBox::down-button:pressed {
    /* Styling for the down-button when pressed */
    background-color: lightgray;
}

QSpinBox::up-button:hover, QSpinBox::down-button:hover {
    /* Styling for the buttons when hovered */
    background-color: #e0e0e0;
}</string>
                    </property>
                    <property name="buttonSymbols">
                     <enum>QAbstractSpinBox::UpDownArrows</enum>
                    </property>
                    <property name="maximum">
                     <number>20</number>
                    </property>
                   </widget>
                  </item>
                 </layout>
                </item>
                <item>
                 <layout class="QHBoxLayout" name="horizontalLayout_52">
                  <item>
                   <widget class="QLabel" name="label_54">
                    <property name="minimumSize">
                     <size>
                      <width>861</width>
                      <height>50</height>
                     </size>
                    </property>
                    <property name="maximumSize">
                     <size>
                      <width>861</width>
                      <height>50</height>
                     </size>
                    </property>
                    <property name="font">
                     <font>
                      <family>Roboto</family>
                      <pointsize>16</pointsize>
                     </font>
                    </property>
                    <property name="text">
                     <string>TextLabel</string>
                    </property>
                   </widget>
                  </item>
                  <item>
                   <widget class="QSlider" name="horizontalSlider_52">
                    <property name="minimumSize">
                     <size>
                      <width>351</width>
                      <height>71</height>
                     </size>
                    </property>
                    <property name="maximumSize">
                     <size>
                      <width>351</width>
                      <height>71</height>
                     </size>
                    </property>
                    <property name="styleSheet">
                     <string notr="true">QSlider::groove:horizontal {
    border: 1px solid #999999;
    height: 30px; /* Set the height of the groove */
    background: white;
    margin: 2px 0;
    border-radius: 4px; /* Setting border radius for groove */
}

QSlider::handle:horizontal {
    background: rgb(31, 149, 239); /* Handle color */
    border: none; /* No border for handle */
    width: 60px; /* Width of the handle */
    margin: -2px 0; /* Expand outside the groove */
    border-radius: 5px; /* Rounded corners for handle */
    position: absolute; /* Necessary for proper handle positioning */
}

QSlider::handle:horizontal:hover {
    background: rgb(45, 45, 45); /* Handle color when hovered */
}

/* Style for when the handle is pressed */
QSlider::handle:horizontal:pressed {
    background: rgb(31, 149, 239); /* You might want to change this color */
}

/* Ticks styling */
QSlider::sub-page:horizontal {
    background: rgb(31, 149, 239); /* Color of the part before the handle */
    border-radius: 4px;
}

QSlider::add-page:horizontal {
    background: white; /* Color of the part after the handle */
    border-radius: 4px;
}
</string>
                    </property>
                    <property name="maximum">
                     <number>20</number>
                    </property>
                    <property name="pageStep">
                     <number>5</number>
                    </property>
                    <property name="orientation">
                     <enum>Qt::Horizontal</enum>
                    </property>
                   </widget>
                  </item>
                  <item>
                   <widget class="QSpinBox" name="spinBox_54">
                    <property name="minimumSize">
                     <size>
                      <width>90</width>
                      <height>60</height>
                     </size>
                    </property>
                    <property name="maximumSize">
                     <size>
                      <width>90</width>
                      <height>60</height>
                     </size>
                    </property>
                    <property name="font">
                     <font>
                      <family>Roboto Bk</family>
                      <pointsize>20</pointsize>
                     </font>
                    </property>
                    <property name="styleSheet">
                     <string notr="true">QSpinBox {
    background-color: white;
    color: black;
    border: 2px solid black;
    border-radius: 5px;

    padding-left: 20px; /* Adjust left padding to center text */
  
    margin: 2px;
}

QSpinBox::up-button {
    /* Styling for the up-button */
    subcontrol-origin: border; /* Position within the border */
    subcontrol-position: top right; /* Position at the top right */
    width: 15px; /* Width of the up-button */
    border-left: 1px solid black; /* Border between the up-button and the spin box */
}

QSpinBox::down-button {
    /* Styling for the down-button */
    subcontrol-origin: border;
    subcontrol-position: bottom right;
    width: 15px;
    border-left: 1px solid black;
}

QSpinBox::up-arrow {
    /* Arrow styling within the up-button */
    width: 7px; /* Width of the arrow */
    height: 7px; /* Height of the arrow */
	image: url(:/icon/icon/menu-4-32.ico);
}

QSpinBox::down-arrow {
    /* Arrow styling within the down-button */
    width: 7px;
    height: 7px;
	image: url(:/icon/icon/menu-4-32.ico);
}


QSpinBox::up-button {
    subcontrol-origin: border;
    subcontrol-position: top right;
    width: 15px;
    border-bottom: 1px solid black; /* Add border between the up-button and down-button */
}

QSpinBox::down-button {
    subcontrol-origin: border;
    subcontrol-position: bottom right;
    width: 15px;
}


QSpinBox::up-button:pressed {
    /* Styling for the up-button when pressed */
    background-color: lightgray;
}

QSpinBox::down-button:pressed {
    /* Styling for the down-button when pressed */
    background-color: lightgray;
}

QSpinBox::up-button:hover, QSpinBox::down-button:hover {
    /* Styling for the buttons when hovered */
    background-color: #e0e0e0;
}</string>
                    </property>
                    <property name="buttonSymbols">
                     <enum>QAbstractSpinBox::UpDownArrows</enum>
                    </property>
                    <property name="maximum">
                     <number>20</number>
                    </property>
                   </widget>
                  </item>
                 </layout>
                </item>
                <item>
                 <layout class="QHBoxLayout" name="horizontalLayout_40">
                  <item>
                   <widget class="QLabel" name="label_42">
                    <property name="minimumSize">
                     <size>
                      <width>861</width>
                      <height>50</height>
                     </size>
                    </property>
                    <property name="maximumSize">
                     <size>
                      <width>861</width>
                      <height>50</height>
                     </size>
                    </property>
                    <property name="font">
                     <font>
                      <family>Roboto</family>
                      <pointsize>16</pointsize>
                     </font>
                    </property>
                    <property name="text">
                     <string>TextLabel</string>
                    </property>
                   </widget>
                  </item>
                  <item>
                   <widget class="QSlider" name="horizontalSlider_40">
                    <property name="minimumSize">
                     <size>
                      <width>351</width>
                      <height>71</height>
                     </size>
                    </property>
                    <property name="maximumSize">
                     <size>
                      <width>351</width>
                      <height>71</height>
                     </size>
                    </property>
                    <property name="styleSheet">
                     <string notr="true">QSlider::groove:horizontal {
    border: 1px solid #999999;
    height: 30px; /* Set the height of the groove */
    background: white;
    margin: 2px 0;
    border-radius: 4px; /* Setting border radius for groove */
}

QSlider::handle:horizontal {
    background: rgb(31, 149, 239); /* Handle color */
    border: none; /* No border for handle */
    width: 60px; /* Width of the handle */
    margin: -2px 0; /* Expand outside the groove */
    border-radius: 5px; /* Rounded corners for handle */
    position: absolute; /* Necessary for proper handle positioning */
}

QSlider::handle:horizontal:hover {
    background: rgb(45, 45, 45); /* Handle color when hovered */
}

/* Style for when the handle is pressed */
QSlider::handle:horizontal:pressed {
    background: rgb(31, 149, 239); /* You might want to change this color */
}

/* Ticks styling */
QSlider::sub-page:horizontal {
    background: rgb(31, 149, 239); /* Color of the part before the handle */
    border-radius: 4px;
}

QSlider::add-page:horizontal {
    background: white; /* Color of the part after the handle */
    border-radius: 4px;
}
</string>
                    </property>
                    <property name="maximum">
                     <number>20</number>
                    </property>
                    <property name="pageStep">
                     <number>5</number>
                    </property>
                    <property name="orientation">
                     <enum>Qt::Horizontal</enum>
                    </property>
                   </widget>
                  </item>
                  <item>
                   <widget class="QSpinBox" name="spinBox_42">
                    <property name="minimumSize">
                     <size>
                      <width>90</width>
                      <height>60</height>
                     </size>
                    </property>
                    <property name="maximumSize">
                     <size>
                      <width>90</width>
                      <height>60</height>
                     </size>
                    </property>
                    <property name="font">
                     <font>
                      <family>Roboto Bk</family>
                      <pointsize>20</pointsize>
                     </font>
                    </property>
                    <property name="styleSheet">
                     <string notr="true">QSpinBox {
    background-color: white;
    color: black;
    border: 2px solid black;
    border-radius: 5px;

    padding-left: 20px; /* Adjust left padding to center text */
  
    margin: 2px;
}

QSpinBox::up-button {
    /* Styling for the up-button */
    subcontrol-origin: border; /* Position within the border */
    subcontrol-position: top right; /* Position at the top right */
    width: 15px; /* Width of the up-button */
    border-left: 1px solid black; /* Border between the up-button and the spin box */
}

QSpinBox::down-button {
    /* Styling for the down-button */
    subcontrol-origin: border;
    subcontrol-position: bottom right;
    width: 15px;
    border-left: 1px solid black;
}

QSpinBox::up-arrow {
    /* Arrow styling within the up-button */
    width: 7px; /* Width of the arrow */
    height: 7px; /* Height of the arrow */
	image: url(:/icon/icon/menu-4-32.ico);
}

QSpinBox::down-arrow {
    /* Arrow styling within the down-button */
    width: 7px;
    height: 7px;
	image: url(:/icon/icon/menu-4-32.ico);
}


QSpinBox::up-button {
    subcontrol-origin: border;
    subcontrol-position: top right;
    width: 15px;
    border-bottom: 1px solid black; /* Add border between the up-button and down-button */
}

QSpinBox::down-button {
    subcontrol-origin: border;
    subcontrol-position: bottom right;
    width: 15px;
}


QSpinBox::up-button:pressed {
    /* Styling for the up-button when pressed */
    background-color: lightgray;
}

QSpinBox::down-button:pressed {
    /* Styling for the down-button when pressed */
    background-color: lightgray;
}

QSpinBox::up-button:hover, QSpinBox::down-button:hover {
    /* Styling for the buttons when hovered */
    background-color: #e0e0e0;
}</string>
                    </property>
                    <property name="buttonSymbols">
                     <enum>QAbstractSpinBox::UpDownArrows</enum>
                    </property>
                    <property name="maximum">
                     <number>20</number>
                    </property>
                   </widget>
                  </item>
                 </layout>
                </item>
                <item>
                 <layout class="QHBoxLayout" name="horizontalLayout_46">
                  <item>
                   <widget class="QPushButton" name="pushButton_22">
                    <property name="text">
                     <string>PushButton</string>
                    </property>
                   </widget>
                  </item>
                 </layout>
                </item>
               </layout>
              </widget>
              <widget class="QWidget" name="page_2">
               <widget class="QPushButton" name="pushButton_16">
                <property name="geometry">
                 <rect>
                  <x>1250</x>
                  <y>30</y>
                  <width>93</width>
                  <height>28</height>
                 </rect>
                </property>
                <property name="text">
                 <string>PushButton</string>
                </property>
               </widget>
               <widget class="QPushButton" name="pushButton_17">
                <property name="geometry">
                 <rect>
                  <x>1240</x>
                  <y>100</y>
                  <width>93</width>
                  <height>28</height>
                 </rect>
                </property>
                <property name="text">
                 <string>PushButton</string>
                </property>
               </widget>
               <widget class="QPushButton" name="pushButton_18">
                <property name="geometry">
                 <rect>
                  <x>1210</x>
                  <y>170</y>
                  <width>93</width>
                  <height>28</height>
                 </rect>
                </property>
                <property name="text">
                 <string>PushButton</string>
                </property>
               </widget>
              </widget>
             </widget>
            </item>
           </layout>
          </widget>
          <widget class="QWidget" name="PrieviewTab">
           <attribute name="title">
            <string>Preview</string>
           </attribute>
          </widget>
          <widget class="QWidget" name="DatabaseTab">
           <attribute name="title">
            <string>Database</string>
           </attribute>
          </widget>
         </widget>
        </widget>
       </item>
      </layout>
     </widget>
    </item>
   </layout>
  </widget>
  <widget class="QMenuBar" name="menubar">
   <property name="geometry">
    <rect>
     <x>0</x>
     <y>0</y>
     <width>1920</width>
     <height>26</height>
    </rect>
   </property>
  </widget>
  <widget class="QStatusBar" name="statusbar"/>
 </widget>
 <resources>
  <include location="resource.qrc"/>
  <include location="resource.qrc"/>
 </resources>
 <connections>
  <connection>
   <sender>pushButton_15</sender>
   <signal>toggled(bool)</signal>
   <receiver>widget</receiver>
   <slot>setHidden(bool)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>452</x>
     <y>53</y>
    </hint>
    <hint type="destinationlabel">
     <x>130</x>
     <y>90</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>pushButton_15</sender>
   <signal>toggled(bool)</signal>
   <receiver>widget_2</receiver>
   <slot>setVisible(bool)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>465</x>
     <y>91</y>
    </hint>
    <hint type="destinationlabel">
     <x>411</x>
     <y>117</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>pushButton</sender>
   <signal>toggled(bool)</signal>
   <receiver>pushButton_8</receiver>
   <slot>setChecked(bool)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>88</x>
     <y>212</y>
    </hint>
    <hint type="destinationlabel">
     <x>201</x>
     <y>200</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>pushButton_2</sender>
   <signal>toggled(bool)</signal>
   <receiver>pushButton_11</receiver>
   <slot>setChecked(bool)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>101</x>
     <y>316</y>
    </hint>
    <hint type="destinationlabel">
     <x>219</x>
     <y>326</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>pushButton_8</sender>
   <signal>toggled(bool)</signal>
   <receiver>pushButton</receiver>
   <slot>setChecked(bool)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>249</x>
     <y>216</y>
    </hint>
    <hint type="destinationlabel">
     <x>84</x>
     <y>210</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>pushButton_11</sender>
   <signal>toggled(bool)</signal>
   <receiver>pushButton_2</receiver>
   <slot>setChecked(bool)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>293</x>
     <y>321</y>
    </hint>
    <hint type="destinationlabel">
     <x>104</x>
     <y>313</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>pushButton_3</sender>
   <signal>toggled(bool)</signal>
   <receiver>pushButton_7</receiver>
   <slot>setChecked(bool)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>99</x>
     <y>456</y>
    </hint>
    <hint type="destinationlabel">
     <x>218</x>
     <y>436</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>pushButton_7</sender>
   <signal>toggled(bool)</signal>
   <receiver>pushButton_3</receiver>
   <slot>setChecked(bool)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>259</x>
     <y>431</y>
    </hint>
    <hint type="destinationlabel">
     <x>107</x>
     <y>436</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>pushButton_4</sender>
   <signal>toggled(bool)</signal>
   <receiver>pushButton_10</receiver>
   <slot>setChecked(bool)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>96</x>
     <y>582</y>
    </hint>
    <hint type="destinationlabel">
     <x>208</x>
     <y>535</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>pushButton_10</sender>
   <signal>toggled(bool)</signal>
   <receiver>pushButton_4</receiver>
   <slot>setChecked(bool)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>220</x>
     <y>523</y>
    </hint>
    <hint type="destinationlabel">
     <x>105</x>
     <y>552</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>pushButton_5</sender>
   <signal>toggled(bool)</signal>
   <receiver>pushButton_9</receiver>
   <slot>setChecked(bool)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>106</x>
     <y>711</y>
    </hint>
    <hint type="destinationlabel">
     <x>258</x>
     <y>651</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>pushButton_9</sender>
   <signal>toggled(bool)</signal>
   <receiver>pushButton_5</receiver>
   <slot>setChecked(bool)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>186</x>
     <y>642</y>
    </hint>
    <hint type="destinationlabel">
     <x>105</x>
     <y>692</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>pushButton_13</sender>
   <signal>toggled(bool)</signal>
   <receiver>pushButton_14</receiver>
   <slot>setChecked(bool)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>101</x>
     <y>846</y>
    </hint>
    <hint type="destinationlabel">
     <x>275</x>
     <y>763</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>pushButton_14</sender>
   <signal>toggled(bool)</signal>
   <receiver>pushButton_13</receiver>
   <slot>setChecked(bool)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>286</x>
     <y>766</y>
    </hint>
    <hint type="destinationlabel">
     <x>86</x>
     <y>838</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>pushButton_6</sender>
   <signal>toggled(bool)</signal>
   <receiver>pushButton_12</receiver>
   <slot>setChecked(bool)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>109</x>
     <y>953</y>
    </hint>
    <hint type="destinationlabel">
     <x>232</x>
     <y>995</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>pushButton_12</sender>
   <signal>toggled(bool)</signal>
   <receiver>pushButton_6</receiver>
   <slot>setChecked(bool)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>242</x>
     <y>1006</y>
    </hint>
    <hint type="destinationlabel">
     <x>119</x>
     <y>1012</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>horizontalSlider_2</sender>
   <signal>sliderMoved(int)</signal>
   <receiver>spinBox_4</receiver>
   <slot>setValue(int)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>1387</x>
     <y>189</y>
    </hint>
    <hint type="destinationlabel">
     <x>1674</x>
     <y>203</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>spinBox_4</sender>
   <signal>valueChanged(int)</signal>
   <receiver>horizontalSlider_2</receiver>
   <slot>setValue(int)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>1692</x>
     <y>179</y>
    </hint>
    <hint type="destinationlabel">
     <x>1596</x>
     <y>183</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>horizontalSlider_2</sender>
   <signal>valueChanged(int)</signal>
   <receiver>spinBox_4</receiver>
   <slot>setValue(int)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>1540</x>
     <y>180</y>
    </hint>
    <hint type="destinationlabel">
     <x>1675</x>
     <y>191</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>horizontalSlider_4</sender>
   <signal>sliderMoved(int)</signal>
   <receiver>spinBox_6</receiver>
   <slot>setValue(int)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>1467</x>
     <y>264</y>
    </hint>
    <hint type="destinationlabel">
     <x>1664</x>
     <y>265</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>spinBox_6</sender>
   <signal>valueChanged(int)</signal>
   <receiver>horizontalSlider_4</receiver>
   <slot>setValue(int)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>1683</x>
     <y>274</y>
    </hint>
    <hint type="destinationlabel">
     <x>1620</x>
     <y>274</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>horizontalSlider_4</sender>
   <signal>valueChanged(int)</signal>
   <receiver>spinBox_6</receiver>
   <slot>setValue(int)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>1522</x>
     <y>290</y>
    </hint>
    <hint type="destinationlabel">
     <x>1682</x>
     <y>279</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>horizontalSlider_28</sender>
   <signal>sliderMoved(int)</signal>
   <receiver>spinBox_30</receiver>
   <slot>setValue(int)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>1621</x>
     <y>338</y>
    </hint>
    <hint type="destinationlabel">
     <x>1681</x>
     <y>339</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>spinBox_30</sender>
   <signal>valueChanged(int)</signal>
   <receiver>horizontalSlider_28</receiver>
   <slot>setValue(int)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>1677</x>
     <y>353</y>
    </hint>
    <hint type="destinationlabel">
     <x>1623</x>
     <y>353</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>horizontalSlider_28</sender>
   <signal>valueChanged(int)</signal>
   <receiver>spinBox_30</receiver>
   <slot>setValue(int)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>1548</x>
     <y>353</y>
    </hint>
    <hint type="destinationlabel">
     <x>1699</x>
     <y>351</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>horizontalSlider_29</sender>
   <signal>sliderMoved(int)</signal>
   <receiver>spinBox_31</receiver>
   <slot>setValue(int)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>1609</x>
     <y>413</y>
    </hint>
    <hint type="destinationlabel">
     <x>1704</x>
     <y>414</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>spinBox_31</sender>
   <signal>valueChanged(int)</signal>
   <receiver>horizontalSlider_29</receiver>
   <slot>setValue(int)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>1703</x>
     <y>415</y>
    </hint>
    <hint type="destinationlabel">
     <x>1626</x>
     <y>414</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>horizontalSlider_29</sender>
   <signal>valueChanged(int)</signal>
   <receiver>spinBox_31</receiver>
   <slot>setValue(int)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>1590</x>
     <y>425</y>
    </hint>
    <hint type="destinationlabel">
     <x>1712</x>
     <y>425</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>horizontalSlider_30</sender>
   <signal>sliderMoved(int)</signal>
   <receiver>spinBox_32</receiver>
   <slot>setValue(int)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>1600</x>
     <y>499</y>
    </hint>
    <hint type="destinationlabel">
     <x>1675</x>
     <y>499</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>spinBox_32</sender>
   <signal>valueChanged(int)</signal>
   <receiver>horizontalSlider_30</receiver>
   <slot>setValue(int)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>1686</x>
     <y>492</y>
    </hint>
    <hint type="destinationlabel">
     <x>1632</x>
     <y>492</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>horizontalSlider_30</sender>
   <signal>valueChanged(int)</signal>
   <receiver>spinBox_32</receiver>
   <slot>setValue(int)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>1557</x>
     <y>494</y>
    </hint>
    <hint type="destinationlabel">
     <x>1695</x>
     <y>496</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>horizontalSlider_36</sender>
   <signal>sliderMoved(int)</signal>
   <receiver>spinBox_38</receiver>
   <slot>setValue(int)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>1609</x>
     <y>556</y>
    </hint>
    <hint type="destinationlabel">
     <x>1692</x>
     <y>559</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>spinBox_38</sender>
   <signal>valueChanged(int)</signal>
   <receiver>horizontalSlider_36</receiver>
   <slot>setValue(int)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>1711</x>
     <y>558</y>
    </hint>
    <hint type="destinationlabel">
     <x>1612</x>
     <y>559</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>horizontalSlider_36</sender>
   <signal>valueChanged(int)</signal>
   <receiver>spinBox_38</receiver>
   <slot>setValue(int)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>1598</x>
     <y>559</y>
    </hint>
    <hint type="destinationlabel">
     <x>1715</x>
     <y>558</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>horizontalSlider_37</sender>
   <signal>sliderMoved(int)</signal>
   <receiver>spinBox_39</receiver>
   <slot>setValue(int)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>1600</x>
     <y>646</y>
    </hint>
    <hint type="destinationlabel">
     <x>1703</x>
     <y>645</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>spinBox_39</sender>
   <signal>valueChanged(int)</signal>
   <receiver>horizontalSlider_37</receiver>
   <slot>setValue(int)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>1707</x>
     <y>634</y>
    </hint>
    <hint type="destinationlabel">
     <x>1623</x>
     <y>634</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>horizontalSlider_37</sender>
   <signal>valueChanged(int)</signal>
   <receiver>spinBox_39</receiver>
   <slot>setValue(int)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>1639</x>
     <y>644</y>
    </hint>
    <hint type="destinationlabel">
     <x>1680</x>
     <y>644</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>horizontalSlider_38</sender>
   <signal>sliderMoved(int)</signal>
   <receiver>spinBox_40</receiver>
   <slot>setValue(int)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>1618</x>
     <y>706</y>
    </hint>
    <hint type="destinationlabel">
     <x>1686</x>
     <y>714</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>spinBox_40</sender>
   <signal>valueChanged(int)</signal>
   <receiver>horizontalSlider_38</receiver>
   <slot>setValue(int)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>1685</x>
     <y>715</y>
    </hint>
    <hint type="destinationlabel">
     <x>1622</x>
     <y>714</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>horizontalSlider_38</sender>
   <signal>valueChanged(int)</signal>
   <receiver>spinBox_40</receiver>
   <slot>setValue(int)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>1615</x>
     <y>720</y>
    </hint>
    <hint type="destinationlabel">
     <x>1682</x>
     <y>720</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>horizontalSlider_39</sender>
   <signal>sliderMoved(int)</signal>
   <receiver>spinBox_41</receiver>
   <slot>setValue(int)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>1618</x>
     <y>777</y>
    </hint>
    <hint type="destinationlabel">
     <x>1680</x>
     <y>781</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>spinBox_41</sender>
   <signal>valueChanged(int)</signal>
   <receiver>horizontalSlider_39</receiver>
   <slot>setValue(int)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>1701</x>
     <y>755</y>
    </hint>
    <hint type="destinationlabel">
     <x>1631</x>
     <y>756</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>horizontalSlider_39</sender>
   <signal>valueChanged(int)</signal>
   <receiver>spinBox_41</receiver>
   <slot>setValue(int)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>1624</x>
     <y>772</y>
    </hint>
    <hint type="destinationlabel">
     <x>1676</x>
     <y>779</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>horizontalSlider_52</sender>
   <signal>sliderMoved(int)</signal>
   <receiver>spinBox_54</receiver>
   <slot>setValue(int)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>1617</x>
     <y>854</y>
    </hint>
    <hint type="destinationlabel">
     <x>1675</x>
     <y>855</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>spinBox_54</sender>
   <signal>valueChanged(int)</signal>
   <receiver>horizontalSlider_52</receiver>
   <slot>setValue(int)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>1693</x>
     <y>840</y>
    </hint>
    <hint type="destinationlabel">
     <x>1630</x>
     <y>840</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>horizontalSlider_52</sender>
   <signal>valueChanged(int)</signal>
   <receiver>spinBox_54</receiver>
   <slot>setValue(int)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>1624</x>
     <y>846</y>
    </hint>
    <hint type="destinationlabel">
     <x>1676</x>
     <y>849</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>horizontalSlider_40</sender>
   <signal>sliderMoved(int)</signal>
   <receiver>spinBox_42</receiver>
   <slot>setValue(int)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>1628</x>
     <y>905</y>
    </hint>
    <hint type="destinationlabel">
     <x>1682</x>
     <y>906</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>spinBox_42</sender>
   <signal>valueChanged(int)</signal>
   <receiver>horizontalSlider_40</receiver>
   <slot>setValue(int)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>1697</x>
     <y>931</y>
    </hint>
    <hint type="destinationlabel">
     <x>1644</x>
     <y>931</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>horizontalSlider_40</sender>
   <signal>valueChanged(int)</signal>
   <receiver>spinBox_42</receiver>
   <slot>setValue(int)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>1590</x>
     <y>921</y>
    </hint>
    <hint type="destinationlabel">
     <x>1683</x>
     <y>928</y>
    </hint>
   </hints>
  </connection>
 </connections>
</ui>
