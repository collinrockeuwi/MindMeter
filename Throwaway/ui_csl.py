# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'makingui3.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(2059, 1083)
        MainWindow.setStyleSheet("background-color: rgb(245, 250, 254);")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout_2.setContentsMargins(0, -1, -1, -1)
        self.gridLayout_2.setHorizontalSpacing(0)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.widget_2 = QtWidgets.QWidget(self.centralwidget)
        self.widget_2.setMinimumSize(QtCore.QSize(281, 0))
        self.widget_2.setMaximumSize(QtCore.QSize(281, 16777215))
        self.widget_2.setStyleSheet("QWidget{\n"
"\n"
"background-color: rgb(31, 149, 239);\n"
"}\n"
"QPushButton {\n"
"    color: white;\n"
"    text-align: left;\n"
"    height:70px;\n"
"    border: 1px;\n"
"    padding-left: 10px;\n"
"    border-top-left-radius: 10px; /* Round top left corner */\n"
"    border-bottom-left-radius: 10px; /* Round bottom left corner */\n"
"    background-color: rgb(31, 149, 239); /* Normal background color */\n"
"    font-size: 30px; /* Set the font size here */\n"
"    /* Other styles */\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: rgb(45, 45, 45); /* Darker background color on hover */\n"
"    color: rgb(220, 220, 220); /* Slightly lighter text color on hover */\n"
"}\n"
"\n"
"QPushButton:checked {\n"
" \n"
"     background-color: rgb(45, 45, 45); /* Darker background color on checked */\n"
"}\n"
"\n"
"QLabel {\n"
"    color: white;\n"
"}\n"
"\n"
"")
        self.widget_2.setObjectName("widget_2")
        self.gridLayout = QtWidgets.QGridLayout(self.widget_2)
        self.gridLayout.setContentsMargins(-1, -1, 0, -1)
        self.gridLayout.setObjectName("gridLayout")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout()
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.splitter = QtWidgets.QSplitter(self.widget_2)
        self.splitter.setOrientation(QtCore.Qt.Horizontal)
        self.splitter.setObjectName("splitter")
        self.label_3 = QtWidgets.QLabel(self.splitter)
        self.label_3.setMinimumSize(QtCore.QSize(40, 40))
        self.label_3.setMaximumSize(QtCore.QSize(50, 50))
        self.label_3.setText("")
        self.label_3.setPixmap(QtGui.QPixmap(":/icon/icon/group-48.ico"))
        self.label_3.setScaledContents(True)
        self.label_3.setObjectName("label_3")
        self.label_2 = QtWidgets.QLabel(self.splitter)
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(24)
        font.setBold(False)
        font.setWeight(50)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.verticalLayout_4.addWidget(self.splitter)
        spacerItem = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        self.verticalLayout_4.addItem(spacerItem)
        self.verticalLayout_2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_2.setSpacing(40)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.pushButton_8 = QtWidgets.QPushButton(self.widget_2)
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(-1)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_8.setFont(font)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/icon/icon/home-4-48.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_8.setIcon(icon)
        self.pushButton_8.setIconSize(QtCore.QSize(50, 50))
        self.pushButton_8.setCheckable(True)
        self.pushButton_8.setAutoExclusive(True)
        self.pushButton_8.setObjectName("pushButton_8")
        self.verticalLayout_2.addWidget(self.pushButton_8)
        self.pushButton_11 = QtWidgets.QPushButton(self.widget_2)
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(-1)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_11.setFont(font)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/icon/icon/dashboard-5-48.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_11.setIcon(icon1)
        self.pushButton_11.setIconSize(QtCore.QSize(50, 50))
        self.pushButton_11.setCheckable(True)
        self.pushButton_11.setAutoExclusive(True)
        self.pushButton_11.setObjectName("pushButton_11")
        self.verticalLayout_2.addWidget(self.pushButton_11)
        self.pushButton_7 = QtWidgets.QPushButton(self.widget_2)
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(-1)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_7.setFont(font)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/icon/icon/product-48.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_7.setIcon(icon2)
        self.pushButton_7.setIconSize(QtCore.QSize(50, 50))
        self.pushButton_7.setCheckable(True)
        self.pushButton_7.setAutoExclusive(True)
        self.pushButton_7.setObjectName("pushButton_7")
        self.verticalLayout_2.addWidget(self.pushButton_7)
        self.pushButton_10 = QtWidgets.QPushButton(self.widget_2)
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(-1)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_10.setFont(font)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/icon/icon/user-48-white.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_10.setIcon(icon3)
        self.pushButton_10.setIconSize(QtCore.QSize(50, 50))
        self.pushButton_10.setCheckable(True)
        self.pushButton_10.setAutoExclusive(True)
        self.pushButton_10.setObjectName("pushButton_10")
        self.verticalLayout_2.addWidget(self.pushButton_10)
        self.pushButton_9 = QtWidgets.QPushButton(self.widget_2)
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(-1)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_9.setFont(font)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(":/icon/icon/activity-feed-48.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_9.setIcon(icon4)
        self.pushButton_9.setIconSize(QtCore.QSize(50, 50))
        self.pushButton_9.setCheckable(True)
        self.pushButton_9.setAutoExclusive(True)
        self.pushButton_9.setObjectName("pushButton_9")
        self.verticalLayout_2.addWidget(self.pushButton_9)
        self.pushButton_14 = QtWidgets.QPushButton(self.widget_2)
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(-1)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_14.setFont(font)
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap(":/icon/icon/search-13.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_14.setIcon(icon5)
        self.pushButton_14.setIconSize(QtCore.QSize(50, 50))
        self.pushButton_14.setCheckable(True)
        self.pushButton_14.setAutoExclusive(True)
        self.pushButton_14.setObjectName("pushButton_14")
        self.verticalLayout_2.addWidget(self.pushButton_14)
        spacerItem1 = QtWidgets.QSpacerItem(20, 188, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_2.addItem(spacerItem1)
        self.pushButton_12 = QtWidgets.QPushButton(self.widget_2)
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(-1)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_12.setFont(font)
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap(":/icon/icon/close-window-64-white.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_12.setIcon(icon6)
        self.pushButton_12.setIconSize(QtCore.QSize(50, 50))
        self.pushButton_12.setObjectName("pushButton_12")
        self.verticalLayout_2.addWidget(self.pushButton_12)
        self.verticalLayout_4.addLayout(self.verticalLayout_2)
        self.gridLayout.addLayout(self.verticalLayout_4, 0, 0, 1, 1)
        self.gridLayout_2.addWidget(self.widget_2, 0, 1, 1, 1)
        self.widget = QtWidgets.QWidget(self.centralwidget)
        self.widget.setMinimumSize(QtCore.QSize(131, 0))
        self.widget.setMaximumSize(QtCore.QSize(131, 16777215))
        self.widget.setStyleSheet("QWidget{\n"
"\n"
"background-color: rgb(31, 149, 239);\n"
"}\n"
"\n"
"QPushButton {\n"
"    color: white;\n"
"    text-align: centre;\n"
"    height: 100px;\n"
"    border: none;\n"
"    \n"
"    border-radius: 10px; \n"
"    \n"
"    background-color: rgb(31, 149, 239); /* Normal background color */\n"
"    font-size: 14px; /* Set the font size here */\n"
"    /* Other styles */\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: rgb(45, 45, 45); /* Darker background color on hover */\n"
"    color: rgb(220, 220, 220); /* Slightly lighter text color on hover */\n"
"}\n"
"\n"
"\n"
"QPushButton:checked {\n"
" \n"
"    \n"
"     background-color: rgb(45, 45, 45); /* Darker background color on checked */\n"
"}\n"
"\n"
"\n"
"QLabel {\n"
"    color: white;\n"
"    qproperty-alignment: AlignCenter; /* This will center the text */\n"
"}\n"
"\n"
"\n"
"")
        self.widget.setObjectName("widget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.widget)
        self.verticalLayout.setObjectName("verticalLayout")
        spacerItem2 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        self.verticalLayout.addItem(spacerItem2)
        self.pushButton = QtWidgets.QPushButton(self.widget)
        self.pushButton.setText("")
        self.pushButton.setIcon(icon)
        self.pushButton.setIconSize(QtCore.QSize(100, 100))
        self.pushButton.setCheckable(True)
        self.pushButton.setAutoExclusive(True)
        self.pushButton.setObjectName("pushButton")
        self.verticalLayout.addWidget(self.pushButton)
        self.pushButton_2 = QtWidgets.QPushButton(self.widget)
        self.pushButton_2.setText("")
        self.pushButton_2.setIcon(icon1)
        self.pushButton_2.setIconSize(QtCore.QSize(100, 100))
        self.pushButton_2.setCheckable(True)
        self.pushButton_2.setAutoExclusive(True)
        self.pushButton_2.setObjectName("pushButton_2")
        self.verticalLayout.addWidget(self.pushButton_2)
        self.pushButton_3 = QtWidgets.QPushButton(self.widget)
        self.pushButton_3.setText("")
        self.pushButton_3.setIcon(icon2)
        self.pushButton_3.setIconSize(QtCore.QSize(100, 100))
        self.pushButton_3.setCheckable(True)
        self.pushButton_3.setAutoExclusive(True)
        self.pushButton_3.setObjectName("pushButton_3")
        self.verticalLayout.addWidget(self.pushButton_3)
        self.pushButton_4 = QtWidgets.QPushButton(self.widget)
        self.pushButton_4.setText("")
        self.pushButton_4.setIcon(icon3)
        self.pushButton_4.setIconSize(QtCore.QSize(100, 100))
        self.pushButton_4.setCheckable(True)
        self.pushButton_4.setAutoExclusive(True)
        self.pushButton_4.setObjectName("pushButton_4")
        self.verticalLayout.addWidget(self.pushButton_4)
        self.pushButton_5 = QtWidgets.QPushButton(self.widget)
        self.pushButton_5.setText("")
        self.pushButton_5.setIcon(icon4)
        self.pushButton_5.setIconSize(QtCore.QSize(100, 100))
        self.pushButton_5.setCheckable(True)
        self.pushButton_5.setAutoExclusive(True)
        self.pushButton_5.setObjectName("pushButton_5")
        self.verticalLayout.addWidget(self.pushButton_5)
        self.pushButton_13 = QtWidgets.QPushButton(self.widget)
        self.pushButton_13.setText("")
        self.pushButton_13.setIcon(icon5)
        self.pushButton_13.setIconSize(QtCore.QSize(100, 100))
        self.pushButton_13.setCheckable(True)
        self.pushButton_13.setAutoExclusive(True)
        self.pushButton_13.setObjectName("pushButton_13")
        self.verticalLayout.addWidget(self.pushButton_13)
        self.pushButton_6 = QtWidgets.QPushButton(self.widget)
        self.pushButton_6.setText("")
        self.pushButton_6.setIcon(icon6)
        self.pushButton_6.setIconSize(QtCore.QSize(100, 100))
        self.pushButton_6.setObjectName("pushButton_6")
        self.verticalLayout.addWidget(self.pushButton_6)
        self.gridLayout_2.addWidget(self.widget, 0, 0, 1, 1)
        self.verticalScrollBar = QtWidgets.QScrollBar(self.centralwidget)
        self.verticalScrollBar.setMinimumSize(QtCore.QSize(21, 1001))
        self.verticalScrollBar.setMaximumSize(QtCore.QSize(21, 1001))
        self.verticalScrollBar.setStyleSheet("QScrollBar:vertical {\n"
"    border: none;\n"
"    background: white; /* Inverted scrollbar background to white */\n"
"    width: 10px; /* Width of the scrollbar */\n"
"    margin: 0px 0px 0px 0px; /* Margins around the scrollbar */\n"
"}\n"
"\n"
"QScrollBar::handle:vertical {\n"
"    background: rgb(31, 149, 239); /* Inverted handle color to blue */\n"
"    min-height: 20px; /* Minimum handle height */\n"
"    border-radius: 5px; /* Handle border radius */\n"
"}\n"
"\n"
"QScrollBar::handle:vertical:hover {\n"
"    background: rgb(45, 45, 45); /* Darker color for hover, can be adjusted */\n"
"}\n"
"\n"
"QScrollBar::add-line:vertical {\n"
"    border: none;\n"
"    background: white; /* Inverted button background to white */\n"
"    height: 0px; /* Hide the button */\n"
"    subcontrol-position: bottom;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"QScrollBar::sub-line:vertical {\n"
"    border: none;\n"
"    background: white; /* Inverted button background to white */\n"
"    height: 0px; /* Hide the button */\n"
"    subcontrol-position: top;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"QScrollBar::up-arrow:vertical, QScrollBar::down-arrow:vertical {\n"
"    background: none; /* Arrow background */\n"
"    color: none; /* Arrow color */\n"
"    width: 0px; /* Arrow width */\n"
"    height: 0px; /* Arrow height */\n"
"}\n"
"\n"
"QScrollBar::add-page:vertical, QScrollBar::sub-page:vertical {\n"
"    background: none; /* Page background when clicking above/below the handle */\n"
"}\n"
"")
        self.verticalScrollBar.setOrientation(QtCore.Qt.Vertical)
        self.verticalScrollBar.setObjectName("verticalScrollBar")
        self.gridLayout_2.addWidget(self.verticalScrollBar, 0, 3, 1, 1)
        self.MainWindow_2 = QtWidgets.QWidget(self.centralwidget)
        self.MainWindow_2.setObjectName("MainWindow_2")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.MainWindow_2)
        self.verticalLayout_3.setContentsMargins(0, 0, -1, -1)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.widget_4 = QtWidgets.QWidget(self.MainWindow_2)
        self.widget_4.setMinimumSize(QtCore.QSize(0, 61))
        self.widget_4.setMaximumSize(QtCore.QSize(16777215, 61))
        self.widget_4.setStyleSheet("QWidget{\n"
"\n"
"background-color: rgb(31, 149, 239);\n"
"}\n"
"\n"
"QPushButton {\n"
"    color: white;\n"
"    text-align: centre;\n"
"    height: 30px;\n"
"    border: none;\n"
"    \n"
"    border-radius: 5px; \n"
"    \n"
"    background-color: rgb(31, 149, 239); /* Normal background color */\n"
"    font-size: 14px; /* Set the font size here */\n"
"    /* Other styles */\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: rgb(45, 45, 45); /* Darker background color on hover */\n"
"    color: rgb(220, 220, 220); /* Slightly lighter text color on hover */\n"
"}\n"
"\n"
"QPushButton:checked {\n"
" \n"
"     background-color: rgb(45, 45, 45); /* Darker background color on checked */\n"
"}\n"
"\n"
"QLabel {\n"
"    color: white;\n"
"    qproperty-alignment: AlignCenter; /* This will center the text */\n"
"}\n"
"\n"
"\n"
"")
        self.widget_4.setObjectName("widget_4")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.widget_4)
        self.gridLayout_3.setContentsMargins(3, 3, 3, 3)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.pushButton_15 = QtWidgets.QPushButton(self.widget_4)
        self.pushButton_15.setMinimumSize(QtCore.QSize(50, 50))
        self.pushButton_15.setMaximumSize(QtCore.QSize(50, 50))
        self.pushButton_15.setText("")
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap(":/icon/icon/menu-4-32-white.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_15.setIcon(icon7)
        self.pushButton_15.setIconSize(QtCore.QSize(30, 30))
        self.pushButton_15.setCheckable(True)
        self.pushButton_15.setAutoExclusive(True)
        self.pushButton_15.setObjectName("pushButton_15")
        self.horizontalLayout.addWidget(self.pushButton_15)
        spacerItem3 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem3)
        self.gridLayout_3.addLayout(self.horizontalLayout, 0, 0, 1, 1)
        self.verticalLayout_3.addWidget(self.widget_4)
        self.widget_3 = QtWidgets.QWidget(self.MainWindow_2)
        self.widget_3.setObjectName("widget_3")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.widget_3)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.stackedWidget = QtWidgets.QStackedWidget(self.widget_3)
        self.stackedWidget.setStyleSheet("QLabel {\n"
" \n"
"    qproperty-alignment: \'AlignVCenter | AlignLeft\'; /* Vertically centered and left-aligned */\n"
"  \n"
"}\n"
"")
        self.stackedWidget.setObjectName("stackedWidget")
        self.SelfEsteem_Page = QtWidgets.QWidget()
        self.SelfEsteem_Page.setObjectName("SelfEsteem_Page")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.SelfEsteem_Page)
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.tabWidget = QtWidgets.QTabWidget(self.SelfEsteem_Page)
        font = QtGui.QFont()
        font.setFamily("Roboto Cn")
        font.setPointSize(11)
        self.tabWidget.setFont(font)
        self.tabWidget.setStyleSheet("QTabWidget::pane {\n"
"    /* The tab widget frame */\n"
"    border-top: 2px solid rgb(31, 149, 239);\n"
"    border-radius: 5px; /* Rounded corners for the pane */\n"
"}\n"
"\n"
"QTabWidget::tab-bar {\n"
"    /* The tab bar */\n"
"    left: 5px; /* Move the bar to the right */\n"
"}\n"
"\n"
"QTabBar::tab {\n"
"    /* The tab */\n"
"    background-color: rgb(31, 149, 239);\n"
"    color: white;\n"
"    padding: 5px;\n"
"    border: none;\n"
"    min-width: 80px; /* Set the minimum width of the tab */\n"
"    min-height: 30px; /* Set the minimum height of the tab */\n"
"    margin-right: 2px; /* Space between tabs */\n"
"    border-top-left-radius: 5px; /* Rounded top-left corner */\n"
"    border-top-right-radius: 5px; /* Rounded top-right corner */\n"
"}\n"
"\n"
"QTabBar::tab:selected {\n"
"    /* The selected tab */\n"
"    background-color: rgb(45, 45, 45);\n"
"    border-top-left-radius: 5px; /* Maintain rounded corner when selected */\n"
"    border-top-right-radius: 5px; /* Maintain rounded corner when selected */\n"
"}\n"
"\n"
"QTabBar::tab:hover {\n"
"    /* The tab when hovered over */\n"
"    background-color: rgb(51, 169, 259);\n"
"}\n"
"")
        self.tabWidget.setObjectName("tabWidget")
        self.SE_Tab_Page_1 = QtWidgets.QWidget()
        self.SE_Tab_Page_1.setStyleSheet("QLabel {\n"
"\n"
" \n"
"   \n"
"    \n"
"}\n"
"")
        self.SE_Tab_Page_1.setObjectName("SE_Tab_Page_1")
        self.verticalLayout_7 = QtWidgets.QVBoxLayout(self.SE_Tab_Page_1)
        self.verticalLayout_7.setObjectName("verticalLayout_7")
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.label = QtWidgets.QLabel(self.SE_Tab_Page_1)
        self.label.setMinimumSize(QtCore.QSize(60, 60))
        self.label.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.label.setFont(font)
        self.label.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.label.setObjectName("label")
        self.horizontalLayout_6.addWidget(self.label)
        spacerItem4 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_6.addItem(spacerItem4)
        self.label_8 = QtWidgets.QLabel(self.SE_Tab_Page_1)
        self.label_8.setMinimumSize(QtCore.QSize(800, 50))
        self.label_8.setMaximumSize(QtCore.QSize(800, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.label_8.setFont(font)
        self.label_8.setObjectName("label_8")
        self.horizontalLayout_6.addWidget(self.label_8)
        self.horizontalSlider_6 = QtWidgets.QSlider(self.SE_Tab_Page_1)
        self.horizontalSlider_6.setMinimumSize(QtCore.QSize(351, 71))
        self.horizontalSlider_6.setMaximumSize(QtCore.QSize(351, 71))
        self.horizontalSlider_6.setStyleSheet("QSlider::groove:horizontal {\n"
"    border: 1px solid #999999;\n"
"    height: 30px; /* Set the height of the groove */\n"
"    background: white;\n"
"    margin: 2px 0;\n"
"    border-radius: 4px; /* Setting border radius for groove */\n"
"}\n"
"\n"
"QSlider::handle:horizontal {\n"
"    background: rgb(31, 149, 239); /* Handle color */\n"
"    border: none; /* No border for handle */\n"
"    width: 60px; /* Width of the handle */\n"
"    margin: -2px 0; /* Expand outside the groove */\n"
"    border-radius: 5px; /* Rounded corners for handle */\n"
"    position: absolute; /* Necessary for proper handle positioning */\n"
"}\n"
"\n"
"QSlider::handle:horizontal:hover {\n"
"    background: rgb(45, 45, 45); /* Handle color when hovered */\n"
"}\n"
"\n"
"/* Style for when the handle is pressed */\n"
"QSlider::handle:horizontal:pressed {\n"
"    background: rgb(31, 149, 239); /* You might want to change this color */\n"
"}\n"
"\n"
"/* Ticks styling */\n"
"QSlider::sub-page:horizontal {\n"
"    background: rgb(31, 149, 239); /* Color of the part before the handle */\n"
"    border-radius: 4px;\n"
"}\n"
"\n"
"QSlider::add-page:horizontal {\n"
"    background: white; /* Color of the part after the handle */\n"
"    border-radius: 4px;\n"
"}\n"
"")
        self.horizontalSlider_6.setMaximum(20)
        self.horizontalSlider_6.setPageStep(5)
        self.horizontalSlider_6.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider_6.setObjectName("horizontalSlider_6")
        self.horizontalLayout_6.addWidget(self.horizontalSlider_6)
        self.spinBox_8 = QtWidgets.QSpinBox(self.SE_Tab_Page_1)
        self.spinBox_8.setMinimumSize(QtCore.QSize(90, 60))
        self.spinBox_8.setMaximumSize(QtCore.QSize(90, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(20)
        self.spinBox_8.setFont(font)
        self.spinBox_8.setStyleSheet("QSpinBox {\n"
"    background-color: white;\n"
"    color: black;\n"
"    border: 2px solid black;\n"
"    border-radius: 5px;\n"
"\n"
"    padding-left: 20px; /* Adjust left padding to center text */\n"
"  \n"
"    margin: 2px;\n"
"}\n"
"\n"
"QSpinBox::up-button {\n"
"    /* Styling for the up-button */\n"
"    subcontrol-origin: border; /* Position within the border */\n"
"    subcontrol-position: top right; /* Position at the top right */\n"
"    width: 15px; /* Width of the up-button */\n"
"    border-left: 1px solid black; /* Border between the up-button and the spin box */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    /* Styling for the down-button */\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"    border-left: 1px solid black;\n"
"}\n"
"\n"
"QSpinBox::up-arrow {\n"
"    /* Arrow styling within the up-button */\n"
"    width: 7px; /* Width of the arrow */\n"
"    height: 7px; /* Height of the arrow */\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"QSpinBox::down-arrow {\n"
"    /* Arrow styling within the down-button */\n"
"    width: 7px;\n"
"    height: 7px;\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: top right;\n"
"    width: 15px;\n"
"    border-bottom: 1px solid black; /* Add border between the up-button and down-button */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button:pressed {\n"
"    /* Styling for the up-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::down-button:pressed {\n"
"    /* Styling for the down-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::up-button:hover, QSpinBox::down-button:hover {\n"
"    /* Styling for the buttons when hovered */\n"
"    background-color: #e0e0e0;\n"
"}")
        self.spinBox_8.setButtonSymbols(QtWidgets.QAbstractSpinBox.UpDownArrows)
        self.spinBox_8.setMaximum(20)
        self.spinBox_8.setObjectName("spinBox_8")
        self.horizontalLayout_6.addWidget(self.spinBox_8)
        self.verticalLayout_7.addLayout(self.horizontalLayout_6)
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        self.label_4 = QtWidgets.QLabel(self.SE_Tab_Page_1)
        self.label_4.setMinimumSize(QtCore.QSize(60, 60))
        self.label_4.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.label_4.setFont(font)
        self.label_4.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.label_4.setObjectName("label_4")
        self.horizontalLayout_7.addWidget(self.label_4)
        spacerItem5 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_7.addItem(spacerItem5)
        self.label_9 = QtWidgets.QLabel(self.SE_Tab_Page_1)
        self.label_9.setMinimumSize(QtCore.QSize(800, 50))
        self.label_9.setMaximumSize(QtCore.QSize(800, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.label_9.setFont(font)
        self.label_9.setObjectName("label_9")
        self.horizontalLayout_7.addWidget(self.label_9)
        self.horizontalSlider_7 = QtWidgets.QSlider(self.SE_Tab_Page_1)
        self.horizontalSlider_7.setMinimumSize(QtCore.QSize(351, 71))
        self.horizontalSlider_7.setMaximumSize(QtCore.QSize(351, 71))
        self.horizontalSlider_7.setStyleSheet("QSlider::groove:horizontal {\n"
"    border: 1px solid #999999;\n"
"    height: 30px; /* Set the height of the groove */\n"
"    background: white;\n"
"    margin: 2px 0;\n"
"    border-radius: 4px; /* Setting border radius for groove */\n"
"}\n"
"\n"
"QSlider::handle:horizontal {\n"
"    background: rgb(31, 149, 239); /* Handle color */\n"
"    border: none; /* No border for handle */\n"
"    width: 60px; /* Width of the handle */\n"
"    margin: -2px 0; /* Expand outside the groove */\n"
"    border-radius: 5px; /* Rounded corners for handle */\n"
"    position: absolute; /* Necessary for proper handle positioning */\n"
"}\n"
"\n"
"QSlider::handle:horizontal:hover {\n"
"    background: rgb(45, 45, 45); /* Handle color when hovered */\n"
"}\n"
"\n"
"/* Style for when the handle is pressed */\n"
"QSlider::handle:horizontal:pressed {\n"
"    background: rgb(31, 149, 239); /* You might want to change this color */\n"
"}\n"
"\n"
"/* Ticks styling */\n"
"QSlider::sub-page:horizontal {\n"
"    background: rgb(31, 149, 239); /* Color of the part before the handle */\n"
"    border-radius: 4px;\n"
"}\n"
"\n"
"QSlider::add-page:horizontal {\n"
"    background: white; /* Color of the part after the handle */\n"
"    border-radius: 4px;\n"
"}\n"
"")
        self.horizontalSlider_7.setMaximum(20)
        self.horizontalSlider_7.setPageStep(5)
        self.horizontalSlider_7.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider_7.setObjectName("horizontalSlider_7")
        self.horizontalLayout_7.addWidget(self.horizontalSlider_7)
        self.spinBox_9 = QtWidgets.QSpinBox(self.SE_Tab_Page_1)
        self.spinBox_9.setMinimumSize(QtCore.QSize(90, 60))
        self.spinBox_9.setMaximumSize(QtCore.QSize(90, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(20)
        self.spinBox_9.setFont(font)
        self.spinBox_9.setStyleSheet("QSpinBox {\n"
"    background-color: white;\n"
"    color: black;\n"
"    border: 2px solid black;\n"
"    border-radius: 5px;\n"
"\n"
"    padding-left: 20px; /* Adjust left padding to center text */\n"
"  \n"
"    margin: 2px;\n"
"}\n"
"\n"
"QSpinBox::up-button {\n"
"    /* Styling for the up-button */\n"
"    subcontrol-origin: border; /* Position within the border */\n"
"    subcontrol-position: top right; /* Position at the top right */\n"
"    width: 15px; /* Width of the up-button */\n"
"    border-left: 1px solid black; /* Border between the up-button and the spin box */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    /* Styling for the down-button */\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"    border-left: 1px solid black;\n"
"}\n"
"\n"
"QSpinBox::up-arrow {\n"
"    /* Arrow styling within the up-button */\n"
"    width: 7px; /* Width of the arrow */\n"
"    height: 7px; /* Height of the arrow */\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"QSpinBox::down-arrow {\n"
"    /* Arrow styling within the down-button */\n"
"    width: 7px;\n"
"    height: 7px;\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: top right;\n"
"    width: 15px;\n"
"    border-bottom: 1px solid black; /* Add border between the up-button and down-button */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button:pressed {\n"
"    /* Styling for the up-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::down-button:pressed {\n"
"    /* Styling for the down-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::up-button:hover, QSpinBox::down-button:hover {\n"
"    /* Styling for the buttons when hovered */\n"
"    background-color: #e0e0e0;\n"
"}")
        self.spinBox_9.setButtonSymbols(QtWidgets.QAbstractSpinBox.UpDownArrows)
        self.spinBox_9.setMaximum(20)
        self.spinBox_9.setObjectName("spinBox_9")
        self.horizontalLayout_7.addWidget(self.spinBox_9)
        self.verticalLayout_7.addLayout(self.horizontalLayout_7)
        self.horizontalLayout_8 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_8.setObjectName("horizontalLayout_8")
        self.label_10 = QtWidgets.QLabel(self.SE_Tab_Page_1)
        self.label_10.setMinimumSize(QtCore.QSize(60, 60))
        self.label_10.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.label_10.setFont(font)
        self.label_10.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.label_10.setObjectName("label_10")
        self.horizontalLayout_8.addWidget(self.label_10)
        spacerItem6 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_8.addItem(spacerItem6)
        self.label_11 = QtWidgets.QLabel(self.SE_Tab_Page_1)
        self.label_11.setMinimumSize(QtCore.QSize(800, 50))
        self.label_11.setMaximumSize(QtCore.QSize(800, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.label_11.setFont(font)
        self.label_11.setObjectName("label_11")
        self.horizontalLayout_8.addWidget(self.label_11)
        self.horizontalSlider_8 = QtWidgets.QSlider(self.SE_Tab_Page_1)
        self.horizontalSlider_8.setMinimumSize(QtCore.QSize(351, 71))
        self.horizontalSlider_8.setMaximumSize(QtCore.QSize(351, 71))
        self.horizontalSlider_8.setStyleSheet("QSlider::groove:horizontal {\n"
"    border: 1px solid #999999;\n"
"    height: 30px; /* Set the height of the groove */\n"
"    background: white;\n"
"    margin: 2px 0;\n"
"    border-radius: 4px; /* Setting border radius for groove */\n"
"}\n"
"\n"
"QSlider::handle:horizontal {\n"
"    background: rgb(31, 149, 239); /* Handle color */\n"
"    border: none; /* No border for handle */\n"
"    width: 60px; /* Width of the handle */\n"
"    margin: -2px 0; /* Expand outside the groove */\n"
"    border-radius: 5px; /* Rounded corners for handle */\n"
"    position: absolute; /* Necessary for proper handle positioning */\n"
"}\n"
"\n"
"QSlider::handle:horizontal:hover {\n"
"    background: rgb(45, 45, 45); /* Handle color when hovered */\n"
"}\n"
"\n"
"/* Style for when the handle is pressed */\n"
"QSlider::handle:horizontal:pressed {\n"
"    background: rgb(31, 149, 239); /* You might want to change this color */\n"
"}\n"
"\n"
"/* Ticks styling */\n"
"QSlider::sub-page:horizontal {\n"
"    background: rgb(31, 149, 239); /* Color of the part before the handle */\n"
"    border-radius: 4px;\n"
"}\n"
"\n"
"QSlider::add-page:horizontal {\n"
"    background: white; /* Color of the part after the handle */\n"
"    border-radius: 4px;\n"
"}\n"
"")
        self.horizontalSlider_8.setMaximum(20)
        self.horizontalSlider_8.setPageStep(5)
        self.horizontalSlider_8.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider_8.setObjectName("horizontalSlider_8")
        self.horizontalLayout_8.addWidget(self.horizontalSlider_8)
        self.spinBox_10 = QtWidgets.QSpinBox(self.SE_Tab_Page_1)
        self.spinBox_10.setMinimumSize(QtCore.QSize(90, 60))
        self.spinBox_10.setMaximumSize(QtCore.QSize(90, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(20)
        self.spinBox_10.setFont(font)
        self.spinBox_10.setStyleSheet("QSpinBox {\n"
"    background-color: white;\n"
"    color: black;\n"
"    border: 2px solid black;\n"
"    border-radius: 5px;\n"
"\n"
"    padding-left: 20px; /* Adjust left padding to center text */\n"
"  \n"
"    margin: 2px;\n"
"}\n"
"\n"
"QSpinBox::up-button {\n"
"    /* Styling for the up-button */\n"
"    subcontrol-origin: border; /* Position within the border */\n"
"    subcontrol-position: top right; /* Position at the top right */\n"
"    width: 15px; /* Width of the up-button */\n"
"    border-left: 1px solid black; /* Border between the up-button and the spin box */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    /* Styling for the down-button */\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"    border-left: 1px solid black;\n"
"}\n"
"\n"
"QSpinBox::up-arrow {\n"
"    /* Arrow styling within the up-button */\n"
"    width: 7px; /* Width of the arrow */\n"
"    height: 7px; /* Height of the arrow */\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"QSpinBox::down-arrow {\n"
"    /* Arrow styling within the down-button */\n"
"    width: 7px;\n"
"    height: 7px;\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: top right;\n"
"    width: 15px;\n"
"    border-bottom: 1px solid black; /* Add border between the up-button and down-button */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button:pressed {\n"
"    /* Styling for the up-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::down-button:pressed {\n"
"    /* Styling for the down-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::up-button:hover, QSpinBox::down-button:hover {\n"
"    /* Styling for the buttons when hovered */\n"
"    background-color: #e0e0e0;\n"
"}")
        self.spinBox_10.setButtonSymbols(QtWidgets.QAbstractSpinBox.UpDownArrows)
        self.spinBox_10.setMaximum(20)
        self.spinBox_10.setObjectName("spinBox_10")
        self.horizontalLayout_8.addWidget(self.spinBox_10)
        self.verticalLayout_7.addLayout(self.horizontalLayout_8)
        self.horizontalLayout_12 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_12.setObjectName("horizontalLayout_12")
        self.label_18 = QtWidgets.QLabel(self.SE_Tab_Page_1)
        self.label_18.setMinimumSize(QtCore.QSize(60, 60))
        self.label_18.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.label_18.setFont(font)
        self.label_18.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.label_18.setObjectName("label_18")
        self.horizontalLayout_12.addWidget(self.label_18)
        spacerItem7 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_12.addItem(spacerItem7)
        self.label_19 = QtWidgets.QLabel(self.SE_Tab_Page_1)
        self.label_19.setMinimumSize(QtCore.QSize(800, 50))
        self.label_19.setMaximumSize(QtCore.QSize(800, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.label_19.setFont(font)
        self.label_19.setObjectName("label_19")
        self.horizontalLayout_12.addWidget(self.label_19)
        self.horizontalSlider_12 = QtWidgets.QSlider(self.SE_Tab_Page_1)
        self.horizontalSlider_12.setMinimumSize(QtCore.QSize(351, 71))
        self.horizontalSlider_12.setMaximumSize(QtCore.QSize(351, 71))
        self.horizontalSlider_12.setStyleSheet("QSlider::groove:horizontal {\n"
"    border: 1px solid #999999;\n"
"    height: 30px; /* Set the height of the groove */\n"
"    background: white;\n"
"    margin: 2px 0;\n"
"    border-radius: 4px; /* Setting border radius for groove */\n"
"}\n"
"\n"
"QSlider::handle:horizontal {\n"
"    background: rgb(31, 149, 239); /* Handle color */\n"
"    border: none; /* No border for handle */\n"
"    width: 60px; /* Width of the handle */\n"
"    margin: -2px 0; /* Expand outside the groove */\n"
"    border-radius: 5px; /* Rounded corners for handle */\n"
"    position: absolute; /* Necessary for proper handle positioning */\n"
"}\n"
"\n"
"QSlider::handle:horizontal:hover {\n"
"    background: rgb(45, 45, 45); /* Handle color when hovered */\n"
"}\n"
"\n"
"/* Style for when the handle is pressed */\n"
"QSlider::handle:horizontal:pressed {\n"
"    background: rgb(31, 149, 239); /* You might want to change this color */\n"
"}\n"
"\n"
"/* Ticks styling */\n"
"QSlider::sub-page:horizontal {\n"
"    background: rgb(31, 149, 239); /* Color of the part before the handle */\n"
"    border-radius: 4px;\n"
"}\n"
"\n"
"QSlider::add-page:horizontal {\n"
"    background: white; /* Color of the part after the handle */\n"
"    border-radius: 4px;\n"
"}\n"
"")
        self.horizontalSlider_12.setMaximum(20)
        self.horizontalSlider_12.setPageStep(5)
        self.horizontalSlider_12.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider_12.setObjectName("horizontalSlider_12")
        self.horizontalLayout_12.addWidget(self.horizontalSlider_12)
        self.spinBox_14 = QtWidgets.QSpinBox(self.SE_Tab_Page_1)
        self.spinBox_14.setMinimumSize(QtCore.QSize(90, 60))
        self.spinBox_14.setMaximumSize(QtCore.QSize(90, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(20)
        self.spinBox_14.setFont(font)
        self.spinBox_14.setStyleSheet("QSpinBox {\n"
"    background-color: white;\n"
"    color: black;\n"
"    border: 2px solid black;\n"
"    border-radius: 5px;\n"
"\n"
"    padding-left: 20px; /* Adjust left padding to center text */\n"
"  \n"
"    margin: 2px;\n"
"}\n"
"\n"
"QSpinBox::up-button {\n"
"    /* Styling for the up-button */\n"
"    subcontrol-origin: border; /* Position within the border */\n"
"    subcontrol-position: top right; /* Position at the top right */\n"
"    width: 15px; /* Width of the up-button */\n"
"    border-left: 1px solid black; /* Border between the up-button and the spin box */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    /* Styling for the down-button */\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"    border-left: 1px solid black;\n"
"}\n"
"\n"
"QSpinBox::up-arrow {\n"
"    /* Arrow styling within the up-button */\n"
"    width: 7px; /* Width of the arrow */\n"
"    height: 7px; /* Height of the arrow */\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"QSpinBox::down-arrow {\n"
"    /* Arrow styling within the down-button */\n"
"    width: 7px;\n"
"    height: 7px;\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: top right;\n"
"    width: 15px;\n"
"    border-bottom: 1px solid black; /* Add border between the up-button and down-button */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button:pressed {\n"
"    /* Styling for the up-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::down-button:pressed {\n"
"    /* Styling for the down-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::up-button:hover, QSpinBox::down-button:hover {\n"
"    /* Styling for the buttons when hovered */\n"
"    background-color: #e0e0e0;\n"
"}")
        self.spinBox_14.setButtonSymbols(QtWidgets.QAbstractSpinBox.UpDownArrows)
        self.spinBox_14.setMaximum(20)
        self.spinBox_14.setObjectName("spinBox_14")
        self.horizontalLayout_12.addWidget(self.spinBox_14)
        self.verticalLayout_7.addLayout(self.horizontalLayout_12)
        self.horizontalLayout_13 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_13.setObjectName("horizontalLayout_13")
        self.label_20 = QtWidgets.QLabel(self.SE_Tab_Page_1)
        self.label_20.setMinimumSize(QtCore.QSize(60, 60))
        self.label_20.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.label_20.setFont(font)
        self.label_20.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.label_20.setObjectName("label_20")
        self.horizontalLayout_13.addWidget(self.label_20)
        spacerItem8 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_13.addItem(spacerItem8)
        self.label_21 = QtWidgets.QLabel(self.SE_Tab_Page_1)
        self.label_21.setMinimumSize(QtCore.QSize(800, 50))
        self.label_21.setMaximumSize(QtCore.QSize(800, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.label_21.setFont(font)
        self.label_21.setObjectName("label_21")
        self.horizontalLayout_13.addWidget(self.label_21)
        self.horizontalSlider_13 = QtWidgets.QSlider(self.SE_Tab_Page_1)
        self.horizontalSlider_13.setMinimumSize(QtCore.QSize(351, 71))
        self.horizontalSlider_13.setMaximumSize(QtCore.QSize(351, 71))
        self.horizontalSlider_13.setStyleSheet("QSlider::groove:horizontal {\n"
"    border: 1px solid #999999;\n"
"    height: 30px; /* Set the height of the groove */\n"
"    background: white;\n"
"    margin: 2px 0;\n"
"    border-radius: 4px; /* Setting border radius for groove */\n"
"}\n"
"\n"
"QSlider::handle:horizontal {\n"
"    background: rgb(31, 149, 239); /* Handle color */\n"
"    border: none; /* No border for handle */\n"
"    width: 60px; /* Width of the handle */\n"
"    margin: -2px 0; /* Expand outside the groove */\n"
"    border-radius: 5px; /* Rounded corners for handle */\n"
"    position: absolute; /* Necessary for proper handle positioning */\n"
"}\n"
"\n"
"QSlider::handle:horizontal:hover {\n"
"    background: rgb(45, 45, 45); /* Handle color when hovered */\n"
"}\n"
"\n"
"/* Style for when the handle is pressed */\n"
"QSlider::handle:horizontal:pressed {\n"
"    background: rgb(31, 149, 239); /* You might want to change this color */\n"
"}\n"
"\n"
"/* Ticks styling */\n"
"QSlider::sub-page:horizontal {\n"
"    background: rgb(31, 149, 239); /* Color of the part before the handle */\n"
"    border-radius: 4px;\n"
"}\n"
"\n"
"QSlider::add-page:horizontal {\n"
"    background: white; /* Color of the part after the handle */\n"
"    border-radius: 4px;\n"
"}\n"
"")
        self.horizontalSlider_13.setMaximum(20)
        self.horizontalSlider_13.setPageStep(5)
        self.horizontalSlider_13.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider_13.setObjectName("horizontalSlider_13")
        self.horizontalLayout_13.addWidget(self.horizontalSlider_13)
        self.spinBox_15 = QtWidgets.QSpinBox(self.SE_Tab_Page_1)
        self.spinBox_15.setMinimumSize(QtCore.QSize(90, 60))
        self.spinBox_15.setMaximumSize(QtCore.QSize(90, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(20)
        self.spinBox_15.setFont(font)
        self.spinBox_15.setStyleSheet("QSpinBox {\n"
"    background-color: white;\n"
"    color: black;\n"
"    border: 2px solid black;\n"
"    border-radius: 5px;\n"
"\n"
"    padding-left: 20px; /* Adjust left padding to center text */\n"
"  \n"
"    margin: 2px;\n"
"}\n"
"\n"
"QSpinBox::up-button {\n"
"    /* Styling for the up-button */\n"
"    subcontrol-origin: border; /* Position within the border */\n"
"    subcontrol-position: top right; /* Position at the top right */\n"
"    width: 15px; /* Width of the up-button */\n"
"    border-left: 1px solid black; /* Border between the up-button and the spin box */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    /* Styling for the down-button */\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"    border-left: 1px solid black;\n"
"}\n"
"\n"
"QSpinBox::up-arrow {\n"
"    /* Arrow styling within the up-button */\n"
"    width: 7px; /* Width of the arrow */\n"
"    height: 7px; /* Height of the arrow */\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"QSpinBox::down-arrow {\n"
"    /* Arrow styling within the down-button */\n"
"    width: 7px;\n"
"    height: 7px;\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: top right;\n"
"    width: 15px;\n"
"    border-bottom: 1px solid black; /* Add border between the up-button and down-button */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button:pressed {\n"
"    /* Styling for the up-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::down-button:pressed {\n"
"    /* Styling for the down-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::up-button:hover, QSpinBox::down-button:hover {\n"
"    /* Styling for the buttons when hovered */\n"
"    background-color: #e0e0e0;\n"
"}")
        self.spinBox_15.setButtonSymbols(QtWidgets.QAbstractSpinBox.UpDownArrows)
        self.spinBox_15.setMaximum(20)
        self.spinBox_15.setObjectName("spinBox_15")
        self.horizontalLayout_13.addWidget(self.spinBox_15)
        self.verticalLayout_7.addLayout(self.horizontalLayout_13)
        self.horizontalLayout_14 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_14.setObjectName("horizontalLayout_14")
        self.label_22 = QtWidgets.QLabel(self.SE_Tab_Page_1)
        self.label_22.setMinimumSize(QtCore.QSize(60, 60))
        self.label_22.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.label_22.setFont(font)
        self.label_22.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.label_22.setObjectName("label_22")
        self.horizontalLayout_14.addWidget(self.label_22)
        spacerItem9 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_14.addItem(spacerItem9)
        self.label_23 = QtWidgets.QLabel(self.SE_Tab_Page_1)
        self.label_23.setMinimumSize(QtCore.QSize(800, 50))
        self.label_23.setMaximumSize(QtCore.QSize(800, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.label_23.setFont(font)
        self.label_23.setObjectName("label_23")
        self.horizontalLayout_14.addWidget(self.label_23)
        self.horizontalSlider_14 = QtWidgets.QSlider(self.SE_Tab_Page_1)
        self.horizontalSlider_14.setMinimumSize(QtCore.QSize(351, 71))
        self.horizontalSlider_14.setMaximumSize(QtCore.QSize(351, 71))
        self.horizontalSlider_14.setStyleSheet("QSlider::groove:horizontal {\n"
"    border: 1px solid #999999;\n"
"    height: 30px; /* Set the height of the groove */\n"
"    background: white;\n"
"    margin: 2px 0;\n"
"    border-radius: 4px; /* Setting border radius for groove */\n"
"}\n"
"\n"
"QSlider::handle:horizontal {\n"
"    background: rgb(31, 149, 239); /* Handle color */\n"
"    border: none; /* No border for handle */\n"
"    width: 60px; /* Width of the handle */\n"
"    margin: -2px 0; /* Expand outside the groove */\n"
"    border-radius: 5px; /* Rounded corners for handle */\n"
"    position: absolute; /* Necessary for proper handle positioning */\n"
"}\n"
"\n"
"QSlider::handle:horizontal:hover {\n"
"    background: rgb(45, 45, 45); /* Handle color when hovered */\n"
"}\n"
"\n"
"/* Style for when the handle is pressed */\n"
"QSlider::handle:horizontal:pressed {\n"
"    background: rgb(31, 149, 239); /* You might want to change this color */\n"
"}\n"
"\n"
"/* Ticks styling */\n"
"QSlider::sub-page:horizontal {\n"
"    background: rgb(31, 149, 239); /* Color of the part before the handle */\n"
"    border-radius: 4px;\n"
"}\n"
"\n"
"QSlider::add-page:horizontal {\n"
"    background: white; /* Color of the part after the handle */\n"
"    border-radius: 4px;\n"
"}\n"
"")
        self.horizontalSlider_14.setMaximum(20)
        self.horizontalSlider_14.setPageStep(5)
        self.horizontalSlider_14.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider_14.setObjectName("horizontalSlider_14")
        self.horizontalLayout_14.addWidget(self.horizontalSlider_14)
        self.spinBox_16 = QtWidgets.QSpinBox(self.SE_Tab_Page_1)
        self.spinBox_16.setMinimumSize(QtCore.QSize(90, 60))
        self.spinBox_16.setMaximumSize(QtCore.QSize(90, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(20)
        self.spinBox_16.setFont(font)
        self.spinBox_16.setStyleSheet("QSpinBox {\n"
"    background-color: white;\n"
"    color: black;\n"
"    border: 2px solid black;\n"
"    border-radius: 5px;\n"
"\n"
"    padding-left: 20px; /* Adjust left padding to center text */\n"
"  \n"
"    margin: 2px;\n"
"}\n"
"\n"
"QSpinBox::up-button {\n"
"    /* Styling for the up-button */\n"
"    subcontrol-origin: border; /* Position within the border */\n"
"    subcontrol-position: top right; /* Position at the top right */\n"
"    width: 15px; /* Width of the up-button */\n"
"    border-left: 1px solid black; /* Border between the up-button and the spin box */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    /* Styling for the down-button */\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"    border-left: 1px solid black;\n"
"}\n"
"\n"
"QSpinBox::up-arrow {\n"
"    /* Arrow styling within the up-button */\n"
"    width: 7px; /* Width of the arrow */\n"
"    height: 7px; /* Height of the arrow */\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"QSpinBox::down-arrow {\n"
"    /* Arrow styling within the down-button */\n"
"    width: 7px;\n"
"    height: 7px;\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: top right;\n"
"    width: 15px;\n"
"    border-bottom: 1px solid black; /* Add border between the up-button and down-button */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button:pressed {\n"
"    /* Styling for the up-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::down-button:pressed {\n"
"    /* Styling for the down-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::up-button:hover, QSpinBox::down-button:hover {\n"
"    /* Styling for the buttons when hovered */\n"
"    background-color: #e0e0e0;\n"
"}")
        self.spinBox_16.setButtonSymbols(QtWidgets.QAbstractSpinBox.UpDownArrows)
        self.spinBox_16.setMaximum(20)
        self.spinBox_16.setObjectName("spinBox_16")
        self.horizontalLayout_14.addWidget(self.spinBox_16)
        self.verticalLayout_7.addLayout(self.horizontalLayout_14)
        self.horizontalLayout_27 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_27.setObjectName("horizontalLayout_27")
        self.label_57 = QtWidgets.QLabel(self.SE_Tab_Page_1)
        self.label_57.setMinimumSize(QtCore.QSize(60, 60))
        self.label_57.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.label_57.setFont(font)
        self.label_57.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.label_57.setObjectName("label_57")
        self.horizontalLayout_27.addWidget(self.label_57)
        spacerItem10 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_27.addItem(spacerItem10)
        self.label_58 = QtWidgets.QLabel(self.SE_Tab_Page_1)
        self.label_58.setMinimumSize(QtCore.QSize(800, 50))
        self.label_58.setMaximumSize(QtCore.QSize(800, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.label_58.setFont(font)
        self.label_58.setObjectName("label_58")
        self.horizontalLayout_27.addWidget(self.label_58)
        self.horizontalSlider_27 = QtWidgets.QSlider(self.SE_Tab_Page_1)
        self.horizontalSlider_27.setMinimumSize(QtCore.QSize(351, 71))
        self.horizontalSlider_27.setMaximumSize(QtCore.QSize(351, 71))
        self.horizontalSlider_27.setStyleSheet("QSlider::groove:horizontal {\n"
"    border: 1px solid #999999;\n"
"    height: 30px; /* Set the height of the groove */\n"
"    background: white;\n"
"    margin: 2px 0;\n"
"    border-radius: 4px; /* Setting border radius for groove */\n"
"}\n"
"\n"
"QSlider::handle:horizontal {\n"
"    background: rgb(31, 149, 239); /* Handle color */\n"
"    border: none; /* No border for handle */\n"
"    width: 60px; /* Width of the handle */\n"
"    margin: -2px 0; /* Expand outside the groove */\n"
"    border-radius: 5px; /* Rounded corners for handle */\n"
"    position: absolute; /* Necessary for proper handle positioning */\n"
"}\n"
"\n"
"QSlider::handle:horizontal:hover {\n"
"    background: rgb(45, 45, 45); /* Handle color when hovered */\n"
"}\n"
"\n"
"/* Style for when the handle is pressed */\n"
"QSlider::handle:horizontal:pressed {\n"
"    background: rgb(31, 149, 239); /* You might want to change this color */\n"
"}\n"
"\n"
"/* Ticks styling */\n"
"QSlider::sub-page:horizontal {\n"
"    background: rgb(31, 149, 239); /* Color of the part before the handle */\n"
"    border-radius: 4px;\n"
"}\n"
"\n"
"QSlider::add-page:horizontal {\n"
"    background: white; /* Color of the part after the handle */\n"
"    border-radius: 4px;\n"
"}\n"
"")
        self.horizontalSlider_27.setMaximum(20)
        self.horizontalSlider_27.setPageStep(5)
        self.horizontalSlider_27.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider_27.setObjectName("horizontalSlider_27")
        self.horizontalLayout_27.addWidget(self.horizontalSlider_27)
        self.spinBox_29 = QtWidgets.QSpinBox(self.SE_Tab_Page_1)
        self.spinBox_29.setMinimumSize(QtCore.QSize(90, 60))
        self.spinBox_29.setMaximumSize(QtCore.QSize(90, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(20)
        self.spinBox_29.setFont(font)
        self.spinBox_29.setStyleSheet("QSpinBox {\n"
"    background-color: white;\n"
"    color: black;\n"
"    border: 2px solid black;\n"
"    border-radius: 5px;\n"
"\n"
"    padding-left: 20px; /* Adjust left padding to center text */\n"
"  \n"
"    margin: 2px;\n"
"}\n"
"\n"
"QSpinBox::up-button {\n"
"    /* Styling for the up-button */\n"
"    subcontrol-origin: border; /* Position within the border */\n"
"    subcontrol-position: top right; /* Position at the top right */\n"
"    width: 15px; /* Width of the up-button */\n"
"    border-left: 1px solid black; /* Border between the up-button and the spin box */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    /* Styling for the down-button */\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"    border-left: 1px solid black;\n"
"}\n"
"\n"
"QSpinBox::up-arrow {\n"
"    /* Arrow styling within the up-button */\n"
"    width: 7px; /* Width of the arrow */\n"
"    height: 7px; /* Height of the arrow */\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"QSpinBox::down-arrow {\n"
"    /* Arrow styling within the down-button */\n"
"    width: 7px;\n"
"    height: 7px;\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: top right;\n"
"    width: 15px;\n"
"    border-bottom: 1px solid black; /* Add border between the up-button and down-button */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button:pressed {\n"
"    /* Styling for the up-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::down-button:pressed {\n"
"    /* Styling for the down-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::up-button:hover, QSpinBox::down-button:hover {\n"
"    /* Styling for the buttons when hovered */\n"
"    background-color: #e0e0e0;\n"
"}")
        self.spinBox_29.setButtonSymbols(QtWidgets.QAbstractSpinBox.UpDownArrows)
        self.spinBox_29.setMaximum(20)
        self.spinBox_29.setObjectName("spinBox_29")
        self.horizontalLayout_27.addWidget(self.spinBox_29)
        self.verticalLayout_7.addLayout(self.horizontalLayout_27)
        self.horizontalLayout_38 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_38.setObjectName("horizontalLayout_38")
        self.label_73 = QtWidgets.QLabel(self.SE_Tab_Page_1)
        self.label_73.setMinimumSize(QtCore.QSize(60, 60))
        self.label_73.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.label_73.setFont(font)
        self.label_73.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.label_73.setObjectName("label_73")
        self.horizontalLayout_38.addWidget(self.label_73)
        spacerItem11 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_38.addItem(spacerItem11)
        self.label_74 = QtWidgets.QLabel(self.SE_Tab_Page_1)
        self.label_74.setMinimumSize(QtCore.QSize(800, 50))
        self.label_74.setMaximumSize(QtCore.QSize(800, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.label_74.setFont(font)
        self.label_74.setObjectName("label_74")
        self.horizontalLayout_38.addWidget(self.label_74)
        self.horizontalSlider_38 = QtWidgets.QSlider(self.SE_Tab_Page_1)
        self.horizontalSlider_38.setMinimumSize(QtCore.QSize(351, 71))
        self.horizontalSlider_38.setMaximumSize(QtCore.QSize(351, 71))
        self.horizontalSlider_38.setStyleSheet("QSlider::groove:horizontal {\n"
"    border: 1px solid #999999;\n"
"    height: 30px; /* Set the height of the groove */\n"
"    background: white;\n"
"    margin: 2px 0;\n"
"    border-radius: 4px; /* Setting border radius for groove */\n"
"}\n"
"\n"
"QSlider::handle:horizontal {\n"
"    background: rgb(31, 149, 239); /* Handle color */\n"
"    border: none; /* No border for handle */\n"
"    width: 60px; /* Width of the handle */\n"
"    margin: -2px 0; /* Expand outside the groove */\n"
"    border-radius: 5px; /* Rounded corners for handle */\n"
"    position: absolute; /* Necessary for proper handle positioning */\n"
"}\n"
"\n"
"QSlider::handle:horizontal:hover {\n"
"    background: rgb(45, 45, 45); /* Handle color when hovered */\n"
"}\n"
"\n"
"/* Style for when the handle is pressed */\n"
"QSlider::handle:horizontal:pressed {\n"
"    background: rgb(31, 149, 239); /* You might want to change this color */\n"
"}\n"
"\n"
"/* Ticks styling */\n"
"QSlider::sub-page:horizontal {\n"
"    background: rgb(31, 149, 239); /* Color of the part before the handle */\n"
"    border-radius: 4px;\n"
"}\n"
"\n"
"QSlider::add-page:horizontal {\n"
"    background: white; /* Color of the part after the handle */\n"
"    border-radius: 4px;\n"
"}\n"
"")
        self.horizontalSlider_38.setMaximum(20)
        self.horizontalSlider_38.setPageStep(5)
        self.horizontalSlider_38.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider_38.setObjectName("horizontalSlider_38")
        self.horizontalLayout_38.addWidget(self.horizontalSlider_38)
        self.spinBox_40 = QtWidgets.QSpinBox(self.SE_Tab_Page_1)
        self.spinBox_40.setMinimumSize(QtCore.QSize(90, 60))
        self.spinBox_40.setMaximumSize(QtCore.QSize(90, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(20)
        self.spinBox_40.setFont(font)
        self.spinBox_40.setStyleSheet("QSpinBox {\n"
"    background-color: white;\n"
"    color: black;\n"
"    border: 2px solid black;\n"
"    border-radius: 5px;\n"
"\n"
"    padding-left: 20px; /* Adjust left padding to center text */\n"
"  \n"
"    margin: 2px;\n"
"}\n"
"\n"
"QSpinBox::up-button {\n"
"    /* Styling for the up-button */\n"
"    subcontrol-origin: border; /* Position within the border */\n"
"    subcontrol-position: top right; /* Position at the top right */\n"
"    width: 15px; /* Width of the up-button */\n"
"    border-left: 1px solid black; /* Border between the up-button and the spin box */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    /* Styling for the down-button */\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"    border-left: 1px solid black;\n"
"}\n"
"\n"
"QSpinBox::up-arrow {\n"
"    /* Arrow styling within the up-button */\n"
"    width: 7px; /* Width of the arrow */\n"
"    height: 7px; /* Height of the arrow */\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"QSpinBox::down-arrow {\n"
"    /* Arrow styling within the down-button */\n"
"    width: 7px;\n"
"    height: 7px;\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: top right;\n"
"    width: 15px;\n"
"    border-bottom: 1px solid black; /* Add border between the up-button and down-button */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button:pressed {\n"
"    /* Styling for the up-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::down-button:pressed {\n"
"    /* Styling for the down-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::up-button:hover, QSpinBox::down-button:hover {\n"
"    /* Styling for the buttons when hovered */\n"
"    background-color: #e0e0e0;\n"
"}")
        self.spinBox_40.setButtonSymbols(QtWidgets.QAbstractSpinBox.UpDownArrows)
        self.spinBox_40.setMaximum(20)
        self.spinBox_40.setObjectName("spinBox_40")
        self.horizontalLayout_38.addWidget(self.spinBox_40)
        self.verticalLayout_7.addLayout(self.horizontalLayout_38)
        self.horizontalLayout_39 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_39.setObjectName("horizontalLayout_39")
        self.label_75 = QtWidgets.QLabel(self.SE_Tab_Page_1)
        self.label_75.setMinimumSize(QtCore.QSize(60, 60))
        self.label_75.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.label_75.setFont(font)
        self.label_75.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.label_75.setObjectName("label_75")
        self.horizontalLayout_39.addWidget(self.label_75)
        spacerItem12 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_39.addItem(spacerItem12)
        self.label_76 = QtWidgets.QLabel(self.SE_Tab_Page_1)
        self.label_76.setMinimumSize(QtCore.QSize(800, 50))
        self.label_76.setMaximumSize(QtCore.QSize(800, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.label_76.setFont(font)
        self.label_76.setObjectName("label_76")
        self.horizontalLayout_39.addWidget(self.label_76)
        self.horizontalSlider_39 = QtWidgets.QSlider(self.SE_Tab_Page_1)
        self.horizontalSlider_39.setMinimumSize(QtCore.QSize(351, 71))
        self.horizontalSlider_39.setMaximumSize(QtCore.QSize(351, 71))
        self.horizontalSlider_39.setStyleSheet("QSlider::groove:horizontal {\n"
"    border: 1px solid #999999;\n"
"    height: 30px; /* Set the height of the groove */\n"
"    background: white;\n"
"    margin: 2px 0;\n"
"    border-radius: 4px; /* Setting border radius for groove */\n"
"}\n"
"\n"
"QSlider::handle:horizontal {\n"
"    background: rgb(31, 149, 239); /* Handle color */\n"
"    border: none; /* No border for handle */\n"
"    width: 60px; /* Width of the handle */\n"
"    margin: -2px 0; /* Expand outside the groove */\n"
"    border-radius: 5px; /* Rounded corners for handle */\n"
"    position: absolute; /* Necessary for proper handle positioning */\n"
"}\n"
"\n"
"QSlider::handle:horizontal:hover {\n"
"    background: rgb(45, 45, 45); /* Handle color when hovered */\n"
"}\n"
"\n"
"/* Style for when the handle is pressed */\n"
"QSlider::handle:horizontal:pressed {\n"
"    background: rgb(31, 149, 239); /* You might want to change this color */\n"
"}\n"
"\n"
"/* Ticks styling */\n"
"QSlider::sub-page:horizontal {\n"
"    background: rgb(31, 149, 239); /* Color of the part before the handle */\n"
"    border-radius: 4px;\n"
"}\n"
"\n"
"QSlider::add-page:horizontal {\n"
"    background: white; /* Color of the part after the handle */\n"
"    border-radius: 4px;\n"
"}\n"
"")
        self.horizontalSlider_39.setMaximum(20)
        self.horizontalSlider_39.setPageStep(5)
        self.horizontalSlider_39.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider_39.setObjectName("horizontalSlider_39")
        self.horizontalLayout_39.addWidget(self.horizontalSlider_39)
        self.spinBox_41 = QtWidgets.QSpinBox(self.SE_Tab_Page_1)
        self.spinBox_41.setMinimumSize(QtCore.QSize(90, 60))
        self.spinBox_41.setMaximumSize(QtCore.QSize(90, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(20)
        self.spinBox_41.setFont(font)
        self.spinBox_41.setStyleSheet("QSpinBox {\n"
"    background-color: white;\n"
"    color: black;\n"
"    border: 2px solid black;\n"
"    border-radius: 5px;\n"
"\n"
"    padding-left: 20px; /* Adjust left padding to center text */\n"
"  \n"
"    margin: 2px;\n"
"}\n"
"\n"
"QSpinBox::up-button {\n"
"    /* Styling for the up-button */\n"
"    subcontrol-origin: border; /* Position within the border */\n"
"    subcontrol-position: top right; /* Position at the top right */\n"
"    width: 15px; /* Width of the up-button */\n"
"    border-left: 1px solid black; /* Border between the up-button and the spin box */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    /* Styling for the down-button */\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"    border-left: 1px solid black;\n"
"}\n"
"\n"
"QSpinBox::up-arrow {\n"
"    /* Arrow styling within the up-button */\n"
"    width: 7px; /* Width of the arrow */\n"
"    height: 7px; /* Height of the arrow */\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"QSpinBox::down-arrow {\n"
"    /* Arrow styling within the down-button */\n"
"    width: 7px;\n"
"    height: 7px;\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: top right;\n"
"    width: 15px;\n"
"    border-bottom: 1px solid black; /* Add border between the up-button and down-button */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button:pressed {\n"
"    /* Styling for the up-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::down-button:pressed {\n"
"    /* Styling for the down-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::up-button:hover, QSpinBox::down-button:hover {\n"
"    /* Styling for the buttons when hovered */\n"
"    background-color: #e0e0e0;\n"
"}")
        self.spinBox_41.setButtonSymbols(QtWidgets.QAbstractSpinBox.UpDownArrows)
        self.spinBox_41.setMaximum(20)
        self.spinBox_41.setObjectName("spinBox_41")
        self.horizontalLayout_39.addWidget(self.spinBox_41)
        self.verticalLayout_7.addLayout(self.horizontalLayout_39)
        self.horizontalLayout_40 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_40.setObjectName("horizontalLayout_40")
        self.label_77 = QtWidgets.QLabel(self.SE_Tab_Page_1)
        self.label_77.setMinimumSize(QtCore.QSize(60, 60))
        self.label_77.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.label_77.setFont(font)
        self.label_77.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.label_77.setObjectName("label_77")
        self.horizontalLayout_40.addWidget(self.label_77)
        spacerItem13 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_40.addItem(spacerItem13)
        self.label_78 = QtWidgets.QLabel(self.SE_Tab_Page_1)
        self.label_78.setMinimumSize(QtCore.QSize(800, 50))
        self.label_78.setMaximumSize(QtCore.QSize(800, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.label_78.setFont(font)
        self.label_78.setObjectName("label_78")
        self.horizontalLayout_40.addWidget(self.label_78)
        self.horizontalSlider_40 = QtWidgets.QSlider(self.SE_Tab_Page_1)
        self.horizontalSlider_40.setMinimumSize(QtCore.QSize(351, 71))
        self.horizontalSlider_40.setMaximumSize(QtCore.QSize(351, 71))
        self.horizontalSlider_40.setStyleSheet("QSlider::groove:horizontal {\n"
"    border: 1px solid #999999;\n"
"    height: 30px; /* Set the height of the groove */\n"
"    background: white;\n"
"    margin: 2px 0;\n"
"    border-radius: 4px; /* Setting border radius for groove */\n"
"}\n"
"\n"
"QSlider::handle:horizontal {\n"
"    background: rgb(31, 149, 239); /* Handle color */\n"
"    border: none; /* No border for handle */\n"
"    width: 60px; /* Width of the handle */\n"
"    margin: -2px 0; /* Expand outside the groove */\n"
"    border-radius: 5px; /* Rounded corners for handle */\n"
"    position: absolute; /* Necessary for proper handle positioning */\n"
"}\n"
"\n"
"QSlider::handle:horizontal:hover {\n"
"    background: rgb(45, 45, 45); /* Handle color when hovered */\n"
"}\n"
"\n"
"/* Style for when the handle is pressed */\n"
"QSlider::handle:horizontal:pressed {\n"
"    background: rgb(31, 149, 239); /* You might want to change this color */\n"
"}\n"
"\n"
"/* Ticks styling */\n"
"QSlider::sub-page:horizontal {\n"
"    background: rgb(31, 149, 239); /* Color of the part before the handle */\n"
"    border-radius: 4px;\n"
"}\n"
"\n"
"QSlider::add-page:horizontal {\n"
"    background: white; /* Color of the part after the handle */\n"
"    border-radius: 4px;\n"
"}\n"
"")
        self.horizontalSlider_40.setMaximum(20)
        self.horizontalSlider_40.setPageStep(5)
        self.horizontalSlider_40.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider_40.setObjectName("horizontalSlider_40")
        self.horizontalLayout_40.addWidget(self.horizontalSlider_40)
        self.spinBox_42 = QtWidgets.QSpinBox(self.SE_Tab_Page_1)
        self.spinBox_42.setMinimumSize(QtCore.QSize(90, 60))
        self.spinBox_42.setMaximumSize(QtCore.QSize(90, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(20)
        self.spinBox_42.setFont(font)
        self.spinBox_42.setStyleSheet("QSpinBox {\n"
"    background-color: white;\n"
"    color: black;\n"
"    border: 2px solid black;\n"
"    border-radius: 5px;\n"
"\n"
"    padding-left: 20px; /* Adjust left padding to center text */\n"
"  \n"
"    margin: 2px;\n"
"}\n"
"\n"
"QSpinBox::up-button {\n"
"    /* Styling for the up-button */\n"
"    subcontrol-origin: border; /* Position within the border */\n"
"    subcontrol-position: top right; /* Position at the top right */\n"
"    width: 15px; /* Width of the up-button */\n"
"    border-left: 1px solid black; /* Border between the up-button and the spin box */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    /* Styling for the down-button */\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"    border-left: 1px solid black;\n"
"}\n"
"\n"
"QSpinBox::up-arrow {\n"
"    /* Arrow styling within the up-button */\n"
"    width: 7px; /* Width of the arrow */\n"
"    height: 7px; /* Height of the arrow */\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"QSpinBox::down-arrow {\n"
"    /* Arrow styling within the down-button */\n"
"    width: 7px;\n"
"    height: 7px;\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: top right;\n"
"    width: 15px;\n"
"    border-bottom: 1px solid black; /* Add border between the up-button and down-button */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button:pressed {\n"
"    /* Styling for the up-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::down-button:pressed {\n"
"    /* Styling for the down-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::up-button:hover, QSpinBox::down-button:hover {\n"
"    /* Styling for the buttons when hovered */\n"
"    background-color: #e0e0e0;\n"
"}")
        self.spinBox_42.setButtonSymbols(QtWidgets.QAbstractSpinBox.UpDownArrows)
        self.spinBox_42.setMaximum(20)
        self.spinBox_42.setObjectName("spinBox_42")
        self.horizontalLayout_40.addWidget(self.spinBox_42)
        self.verticalLayout_7.addLayout(self.horizontalLayout_40)
        self.tabWidget.addTab(self.SE_Tab_Page_1, "")
        self.SE_Tab_Page_2 = QtWidgets.QWidget()
        self.SE_Tab_Page_2.setObjectName("SE_Tab_Page_2")
        self.verticalLayout_8 = QtWidgets.QVBoxLayout(self.SE_Tab_Page_2)
        self.verticalLayout_8.setContentsMargins(-1, 11, -1, -1)
        self.verticalLayout_8.setObjectName("verticalLayout_8")
        self.widget_5 = QtWidgets.QWidget(self.SE_Tab_Page_2)
        self.widget_5.setObjectName("widget_5")
        self.verticalLayout_13 = QtWidgets.QVBoxLayout(self.widget_5)
        self.verticalLayout_13.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_13.setObjectName("verticalLayout_13")
        self.horizontalLayout_46 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_46.setObjectName("horizontalLayout_46")
        self.label_79 = QtWidgets.QLabel(self.widget_5)
        self.label_79.setMinimumSize(QtCore.QSize(60, 60))
        self.label_79.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.label_79.setFont(font)
        self.label_79.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.label_79.setObjectName("label_79")
        self.horizontalLayout_46.addWidget(self.label_79)
        spacerItem14 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_46.addItem(spacerItem14)
        self.label_80 = QtWidgets.QLabel(self.widget_5)
        self.label_80.setMinimumSize(QtCore.QSize(800, 50))
        self.label_80.setMaximumSize(QtCore.QSize(800, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.label_80.setFont(font)
        self.label_80.setObjectName("label_80")
        self.horizontalLayout_46.addWidget(self.label_80)
        self.horizontalSlider_46 = QtWidgets.QSlider(self.widget_5)
        self.horizontalSlider_46.setMinimumSize(QtCore.QSize(351, 71))
        self.horizontalSlider_46.setMaximumSize(QtCore.QSize(351, 71))
        self.horizontalSlider_46.setStyleSheet("QSlider::groove:horizontal {\n"
"    border: 1px solid #999999;\n"
"    height: 30px; /* Set the height of the groove */\n"
"    background: white;\n"
"    margin: 2px 0;\n"
"    border-radius: 4px; /* Setting border radius for groove */\n"
"}\n"
"\n"
"QSlider::handle:horizontal {\n"
"    background: rgb(31, 149, 239); /* Handle color */\n"
"    border: none; /* No border for handle */\n"
"    width: 60px; /* Width of the handle */\n"
"    margin: -2px 0; /* Expand outside the groove */\n"
"    border-radius: 5px; /* Rounded corners for handle */\n"
"    position: absolute; /* Necessary for proper handle positioning */\n"
"}\n"
"\n"
"QSlider::handle:horizontal:hover {\n"
"    background: rgb(45, 45, 45); /* Handle color when hovered */\n"
"}\n"
"\n"
"/* Style for when the handle is pressed */\n"
"QSlider::handle:horizontal:pressed {\n"
"    background: rgb(31, 149, 239); /* You might want to change this color */\n"
"}\n"
"\n"
"/* Ticks styling */\n"
"QSlider::sub-page:horizontal {\n"
"    background: rgb(31, 149, 239); /* Color of the part before the handle */\n"
"    border-radius: 4px;\n"
"}\n"
"\n"
"QSlider::add-page:horizontal {\n"
"    background: white; /* Color of the part after the handle */\n"
"    border-radius: 4px;\n"
"}\n"
"")
        self.horizontalSlider_46.setMaximum(20)
        self.horizontalSlider_46.setPageStep(5)
        self.horizontalSlider_46.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider_46.setObjectName("horizontalSlider_46")
        self.horizontalLayout_46.addWidget(self.horizontalSlider_46)
        self.spinBox_48 = QtWidgets.QSpinBox(self.widget_5)
        self.spinBox_48.setMinimumSize(QtCore.QSize(90, 60))
        self.spinBox_48.setMaximumSize(QtCore.QSize(90, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(20)
        self.spinBox_48.setFont(font)
        self.spinBox_48.setStyleSheet("QSpinBox {\n"
"    background-color: white;\n"
"    color: black;\n"
"    border: 2px solid black;\n"
"    border-radius: 5px;\n"
"\n"
"    padding-left: 20px; /* Adjust left padding to center text */\n"
"  \n"
"    margin: 2px;\n"
"}\n"
"\n"
"QSpinBox::up-button {\n"
"    /* Styling for the up-button */\n"
"    subcontrol-origin: border; /* Position within the border */\n"
"    subcontrol-position: top right; /* Position at the top right */\n"
"    width: 15px; /* Width of the up-button */\n"
"    border-left: 1px solid black; /* Border between the up-button and the spin box */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    /* Styling for the down-button */\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"    border-left: 1px solid black;\n"
"}\n"
"\n"
"QSpinBox::up-arrow {\n"
"    /* Arrow styling within the up-button */\n"
"    width: 7px; /* Width of the arrow */\n"
"    height: 7px; /* Height of the arrow */\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"QSpinBox::down-arrow {\n"
"    /* Arrow styling within the down-button */\n"
"    width: 7px;\n"
"    height: 7px;\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: top right;\n"
"    width: 15px;\n"
"    border-bottom: 1px solid black; /* Add border between the up-button and down-button */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button:pressed {\n"
"    /* Styling for the up-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::down-button:pressed {\n"
"    /* Styling for the down-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::up-button:hover, QSpinBox::down-button:hover {\n"
"    /* Styling for the buttons when hovered */\n"
"    background-color: #e0e0e0;\n"
"}")
        self.spinBox_48.setButtonSymbols(QtWidgets.QAbstractSpinBox.UpDownArrows)
        self.spinBox_48.setMaximum(20)
        self.spinBox_48.setObjectName("spinBox_48")
        self.horizontalLayout_46.addWidget(self.spinBox_48)
        self.verticalLayout_13.addLayout(self.horizontalLayout_46)
        self.horizontalLayout_51 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_51.setObjectName("horizontalLayout_51")
        self.label_87 = QtWidgets.QLabel(self.widget_5)
        self.label_87.setMinimumSize(QtCore.QSize(60, 60))
        self.label_87.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.label_87.setFont(font)
        self.label_87.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.label_87.setObjectName("label_87")
        self.horizontalLayout_51.addWidget(self.label_87)
        spacerItem15 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_51.addItem(spacerItem15)
        self.label_88 = QtWidgets.QLabel(self.widget_5)
        self.label_88.setMinimumSize(QtCore.QSize(800, 50))
        self.label_88.setMaximumSize(QtCore.QSize(800, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.label_88.setFont(font)
        self.label_88.setObjectName("label_88")
        self.horizontalLayout_51.addWidget(self.label_88)
        self.horizontalSlider_50 = QtWidgets.QSlider(self.widget_5)
        self.horizontalSlider_50.setMinimumSize(QtCore.QSize(351, 71))
        self.horizontalSlider_50.setMaximumSize(QtCore.QSize(351, 71))
        self.horizontalSlider_50.setStyleSheet("QSlider::groove:horizontal {\n"
"    border: 1px solid #999999;\n"
"    height: 30px; /* Set the height of the groove */\n"
"    background: white;\n"
"    margin: 2px 0;\n"
"    border-radius: 4px; /* Setting border radius for groove */\n"
"}\n"
"\n"
"QSlider::handle:horizontal {\n"
"    background: rgb(31, 149, 239); /* Handle color */\n"
"    border: none; /* No border for handle */\n"
"    width: 60px; /* Width of the handle */\n"
"    margin: -2px 0; /* Expand outside the groove */\n"
"    border-radius: 5px; /* Rounded corners for handle */\n"
"    position: absolute; /* Necessary for proper handle positioning */\n"
"}\n"
"\n"
"QSlider::handle:horizontal:hover {\n"
"    background: rgb(45, 45, 45); /* Handle color when hovered */\n"
"}\n"
"\n"
"/* Style for when the handle is pressed */\n"
"QSlider::handle:horizontal:pressed {\n"
"    background: rgb(31, 149, 239); /* You might want to change this color */\n"
"}\n"
"\n"
"/* Ticks styling */\n"
"QSlider::sub-page:horizontal {\n"
"    background: rgb(31, 149, 239); /* Color of the part before the handle */\n"
"    border-radius: 4px;\n"
"}\n"
"\n"
"QSlider::add-page:horizontal {\n"
"    background: white; /* Color of the part after the handle */\n"
"    border-radius: 4px;\n"
"}\n"
"")
        self.horizontalSlider_50.setMaximum(20)
        self.horizontalSlider_50.setPageStep(5)
        self.horizontalSlider_50.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider_50.setObjectName("horizontalSlider_50")
        self.horizontalLayout_51.addWidget(self.horizontalSlider_50)
        self.spinBox_52 = QtWidgets.QSpinBox(self.widget_5)
        self.spinBox_52.setMinimumSize(QtCore.QSize(90, 60))
        self.spinBox_52.setMaximumSize(QtCore.QSize(90, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(20)
        self.spinBox_52.setFont(font)
        self.spinBox_52.setStyleSheet("QSpinBox {\n"
"    background-color: white;\n"
"    color: black;\n"
"    border: 2px solid black;\n"
"    border-radius: 5px;\n"
"\n"
"    padding-left: 20px; /* Adjust left padding to center text */\n"
"  \n"
"    margin: 2px;\n"
"}\n"
"\n"
"QSpinBox::up-button {\n"
"    /* Styling for the up-button */\n"
"    subcontrol-origin: border; /* Position within the border */\n"
"    subcontrol-position: top right; /* Position at the top right */\n"
"    width: 15px; /* Width of the up-button */\n"
"    border-left: 1px solid black; /* Border between the up-button and the spin box */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    /* Styling for the down-button */\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"    border-left: 1px solid black;\n"
"}\n"
"\n"
"QSpinBox::up-arrow {\n"
"    /* Arrow styling within the up-button */\n"
"    width: 7px; /* Width of the arrow */\n"
"    height: 7px; /* Height of the arrow */\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"QSpinBox::down-arrow {\n"
"    /* Arrow styling within the down-button */\n"
"    width: 7px;\n"
"    height: 7px;\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: top right;\n"
"    width: 15px;\n"
"    border-bottom: 1px solid black; /* Add border between the up-button and down-button */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button:pressed {\n"
"    /* Styling for the up-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::down-button:pressed {\n"
"    /* Styling for the down-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::up-button:hover, QSpinBox::down-button:hover {\n"
"    /* Styling for the buttons when hovered */\n"
"    background-color: #e0e0e0;\n"
"}")
        self.spinBox_52.setButtonSymbols(QtWidgets.QAbstractSpinBox.UpDownArrows)
        self.spinBox_52.setMaximum(20)
        self.spinBox_52.setObjectName("spinBox_52")
        self.horizontalLayout_51.addWidget(self.spinBox_52)
        self.verticalLayout_13.addLayout(self.horizontalLayout_51)
        self.horizontalLayout_52 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_52.setObjectName("horizontalLayout_52")
        self.label_89 = QtWidgets.QLabel(self.widget_5)
        self.label_89.setMinimumSize(QtCore.QSize(60, 60))
        self.label_89.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.label_89.setFont(font)
        self.label_89.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.label_89.setObjectName("label_89")
        self.horizontalLayout_52.addWidget(self.label_89)
        spacerItem16 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_52.addItem(spacerItem16)
        self.label_90 = QtWidgets.QLabel(self.widget_5)
        self.label_90.setMinimumSize(QtCore.QSize(800, 50))
        self.label_90.setMaximumSize(QtCore.QSize(800, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.label_90.setFont(font)
        self.label_90.setObjectName("label_90")
        self.horizontalLayout_52.addWidget(self.label_90)
        self.horizontalSlider_51 = QtWidgets.QSlider(self.widget_5)
        self.horizontalSlider_51.setMinimumSize(QtCore.QSize(351, 71))
        self.horizontalSlider_51.setMaximumSize(QtCore.QSize(351, 71))
        self.horizontalSlider_51.setStyleSheet("QSlider::groove:horizontal {\n"
"    border: 1px solid #999999;\n"
"    height: 30px; /* Set the height of the groove */\n"
"    background: white;\n"
"    margin: 2px 0;\n"
"    border-radius: 4px; /* Setting border radius for groove */\n"
"}\n"
"\n"
"QSlider::handle:horizontal {\n"
"    background: rgb(31, 149, 239); /* Handle color */\n"
"    border: none; /* No border for handle */\n"
"    width: 60px; /* Width of the handle */\n"
"    margin: -2px 0; /* Expand outside the groove */\n"
"    border-radius: 5px; /* Rounded corners for handle */\n"
"    position: absolute; /* Necessary for proper handle positioning */\n"
"}\n"
"\n"
"QSlider::handle:horizontal:hover {\n"
"    background: rgb(45, 45, 45); /* Handle color when hovered */\n"
"}\n"
"\n"
"/* Style for when the handle is pressed */\n"
"QSlider::handle:horizontal:pressed {\n"
"    background: rgb(31, 149, 239); /* You might want to change this color */\n"
"}\n"
"\n"
"/* Ticks styling */\n"
"QSlider::sub-page:horizontal {\n"
"    background: rgb(31, 149, 239); /* Color of the part before the handle */\n"
"    border-radius: 4px;\n"
"}\n"
"\n"
"QSlider::add-page:horizontal {\n"
"    background: white; /* Color of the part after the handle */\n"
"    border-radius: 4px;\n"
"}\n"
"")
        self.horizontalSlider_51.setMaximum(20)
        self.horizontalSlider_51.setPageStep(5)
        self.horizontalSlider_51.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider_51.setObjectName("horizontalSlider_51")
        self.horizontalLayout_52.addWidget(self.horizontalSlider_51)
        self.spinBox_53 = QtWidgets.QSpinBox(self.widget_5)
        self.spinBox_53.setMinimumSize(QtCore.QSize(90, 60))
        self.spinBox_53.setMaximumSize(QtCore.QSize(90, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(20)
        self.spinBox_53.setFont(font)
        self.spinBox_53.setStyleSheet("QSpinBox {\n"
"    background-color: white;\n"
"    color: black;\n"
"    border: 2px solid black;\n"
"    border-radius: 5px;\n"
"\n"
"    padding-left: 20px; /* Adjust left padding to center text */\n"
"  \n"
"    margin: 2px;\n"
"}\n"
"\n"
"QSpinBox::up-button {\n"
"    /* Styling for the up-button */\n"
"    subcontrol-origin: border; /* Position within the border */\n"
"    subcontrol-position: top right; /* Position at the top right */\n"
"    width: 15px; /* Width of the up-button */\n"
"    border-left: 1px solid black; /* Border between the up-button and the spin box */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    /* Styling for the down-button */\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"    border-left: 1px solid black;\n"
"}\n"
"\n"
"QSpinBox::up-arrow {\n"
"    /* Arrow styling within the up-button */\n"
"    width: 7px; /* Width of the arrow */\n"
"    height: 7px; /* Height of the arrow */\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"QSpinBox::down-arrow {\n"
"    /* Arrow styling within the down-button */\n"
"    width: 7px;\n"
"    height: 7px;\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: top right;\n"
"    width: 15px;\n"
"    border-bottom: 1px solid black; /* Add border between the up-button and down-button */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button:pressed {\n"
"    /* Styling for the up-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::down-button:pressed {\n"
"    /* Styling for the down-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::up-button:hover, QSpinBox::down-button:hover {\n"
"    /* Styling for the buttons when hovered */\n"
"    background-color: #e0e0e0;\n"
"}")
        self.spinBox_53.setButtonSymbols(QtWidgets.QAbstractSpinBox.UpDownArrows)
        self.spinBox_53.setMaximum(20)
        self.spinBox_53.setObjectName("spinBox_53")
        self.horizontalLayout_52.addWidget(self.spinBox_53)
        self.verticalLayout_13.addLayout(self.horizontalLayout_52)
        self.horizontalLayout_57 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_57.setObjectName("horizontalLayout_57")
        self.label_97 = QtWidgets.QLabel(self.widget_5)
        self.label_97.setMinimumSize(QtCore.QSize(60, 60))
        self.label_97.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.label_97.setFont(font)
        self.label_97.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.label_97.setObjectName("label_97")
        self.horizontalLayout_57.addWidget(self.label_97)
        spacerItem17 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_57.addItem(spacerItem17)
        self.label_98 = QtWidgets.QLabel(self.widget_5)
        self.label_98.setMinimumSize(QtCore.QSize(800, 50))
        self.label_98.setMaximumSize(QtCore.QSize(800, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.label_98.setFont(font)
        self.label_98.setObjectName("label_98")
        self.horizontalLayout_57.addWidget(self.label_98)
        self.horizontalSlider_56 = QtWidgets.QSlider(self.widget_5)
        self.horizontalSlider_56.setMinimumSize(QtCore.QSize(351, 71))
        self.horizontalSlider_56.setMaximumSize(QtCore.QSize(351, 71))
        self.horizontalSlider_56.setStyleSheet("QSlider::groove:horizontal {\n"
"    border: 1px solid #999999;\n"
"    height: 30px; /* Set the height of the groove */\n"
"    background: white;\n"
"    margin: 2px 0;\n"
"    border-radius: 4px; /* Setting border radius for groove */\n"
"}\n"
"\n"
"QSlider::handle:horizontal {\n"
"    background: rgb(31, 149, 239); /* Handle color */\n"
"    border: none; /* No border for handle */\n"
"    width: 60px; /* Width of the handle */\n"
"    margin: -2px 0; /* Expand outside the groove */\n"
"    border-radius: 5px; /* Rounded corners for handle */\n"
"    position: absolute; /* Necessary for proper handle positioning */\n"
"}\n"
"\n"
"QSlider::handle:horizontal:hover {\n"
"    background: rgb(45, 45, 45); /* Handle color when hovered */\n"
"}\n"
"\n"
"/* Style for when the handle is pressed */\n"
"QSlider::handle:horizontal:pressed {\n"
"    background: rgb(31, 149, 239); /* You might want to change this color */\n"
"}\n"
"\n"
"/* Ticks styling */\n"
"QSlider::sub-page:horizontal {\n"
"    background: rgb(31, 149, 239); /* Color of the part before the handle */\n"
"    border-radius: 4px;\n"
"}\n"
"\n"
"QSlider::add-page:horizontal {\n"
"    background: white; /* Color of the part after the handle */\n"
"    border-radius: 4px;\n"
"}\n"
"")
        self.horizontalSlider_56.setMaximum(20)
        self.horizontalSlider_56.setPageStep(5)
        self.horizontalSlider_56.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider_56.setObjectName("horizontalSlider_56")
        self.horizontalLayout_57.addWidget(self.horizontalSlider_56)
        self.spinBox_58 = QtWidgets.QSpinBox(self.widget_5)
        self.spinBox_58.setMinimumSize(QtCore.QSize(90, 60))
        self.spinBox_58.setMaximumSize(QtCore.QSize(90, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(20)
        self.spinBox_58.setFont(font)
        self.spinBox_58.setStyleSheet("QSpinBox {\n"
"    background-color: white;\n"
"    color: black;\n"
"    border: 2px solid black;\n"
"    border-radius: 5px;\n"
"\n"
"    padding-left: 20px; /* Adjust left padding to center text */\n"
"  \n"
"    margin: 2px;\n"
"}\n"
"\n"
"QSpinBox::up-button {\n"
"    /* Styling for the up-button */\n"
"    subcontrol-origin: border; /* Position within the border */\n"
"    subcontrol-position: top right; /* Position at the top right */\n"
"    width: 15px; /* Width of the up-button */\n"
"    border-left: 1px solid black; /* Border between the up-button and the spin box */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    /* Styling for the down-button */\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"    border-left: 1px solid black;\n"
"}\n"
"\n"
"QSpinBox::up-arrow {\n"
"    /* Arrow styling within the up-button */\n"
"    width: 7px; /* Width of the arrow */\n"
"    height: 7px; /* Height of the arrow */\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"QSpinBox::down-arrow {\n"
"    /* Arrow styling within the down-button */\n"
"    width: 7px;\n"
"    height: 7px;\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: top right;\n"
"    width: 15px;\n"
"    border-bottom: 1px solid black; /* Add border between the up-button and down-button */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button:pressed {\n"
"    /* Styling for the up-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::down-button:pressed {\n"
"    /* Styling for the down-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::up-button:hover, QSpinBox::down-button:hover {\n"
"    /* Styling for the buttons when hovered */\n"
"    background-color: #e0e0e0;\n"
"}")
        self.spinBox_58.setButtonSymbols(QtWidgets.QAbstractSpinBox.UpDownArrows)
        self.spinBox_58.setMaximum(20)
        self.spinBox_58.setObjectName("spinBox_58")
        self.horizontalLayout_57.addWidget(self.spinBox_58)
        self.verticalLayout_13.addLayout(self.horizontalLayout_57)
        self.horizontalLayout_58 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_58.setObjectName("horizontalLayout_58")
        self.label_99 = QtWidgets.QLabel(self.widget_5)
        self.label_99.setMinimumSize(QtCore.QSize(60, 60))
        self.label_99.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.label_99.setFont(font)
        self.label_99.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.label_99.setObjectName("label_99")
        self.horizontalLayout_58.addWidget(self.label_99)
        spacerItem18 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_58.addItem(spacerItem18)
        self.label_100 = QtWidgets.QLabel(self.widget_5)
        self.label_100.setMinimumSize(QtCore.QSize(800, 50))
        self.label_100.setMaximumSize(QtCore.QSize(800, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.label_100.setFont(font)
        self.label_100.setObjectName("label_100")
        self.horizontalLayout_58.addWidget(self.label_100)
        self.horizontalSlider_57 = QtWidgets.QSlider(self.widget_5)
        self.horizontalSlider_57.setMinimumSize(QtCore.QSize(351, 71))
        self.horizontalSlider_57.setMaximumSize(QtCore.QSize(351, 71))
        self.horizontalSlider_57.setStyleSheet("QSlider::groove:horizontal {\n"
"    border: 1px solid #999999;\n"
"    height: 30px; /* Set the height of the groove */\n"
"    background: white;\n"
"    margin: 2px 0;\n"
"    border-radius: 4px; /* Setting border radius for groove */\n"
"}\n"
"\n"
"QSlider::handle:horizontal {\n"
"    background: rgb(31, 149, 239); /* Handle color */\n"
"    border: none; /* No border for handle */\n"
"    width: 60px; /* Width of the handle */\n"
"    margin: -2px 0; /* Expand outside the groove */\n"
"    border-radius: 5px; /* Rounded corners for handle */\n"
"    position: absolute; /* Necessary for proper handle positioning */\n"
"}\n"
"\n"
"QSlider::handle:horizontal:hover {\n"
"    background: rgb(45, 45, 45); /* Handle color when hovered */\n"
"}\n"
"\n"
"/* Style for when the handle is pressed */\n"
"QSlider::handle:horizontal:pressed {\n"
"    background: rgb(31, 149, 239); /* You might want to change this color */\n"
"}\n"
"\n"
"/* Ticks styling */\n"
"QSlider::sub-page:horizontal {\n"
"    background: rgb(31, 149, 239); /* Color of the part before the handle */\n"
"    border-radius: 4px;\n"
"}\n"
"\n"
"QSlider::add-page:horizontal {\n"
"    background: white; /* Color of the part after the handle */\n"
"    border-radius: 4px;\n"
"}\n"
"")
        self.horizontalSlider_57.setMaximum(20)
        self.horizontalSlider_57.setPageStep(5)
        self.horizontalSlider_57.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider_57.setObjectName("horizontalSlider_57")
        self.horizontalLayout_58.addWidget(self.horizontalSlider_57)
        self.spinBox_59 = QtWidgets.QSpinBox(self.widget_5)
        self.spinBox_59.setMinimumSize(QtCore.QSize(90, 60))
        self.spinBox_59.setMaximumSize(QtCore.QSize(90, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(20)
        self.spinBox_59.setFont(font)
        self.spinBox_59.setStyleSheet("QSpinBox {\n"
"    background-color: white;\n"
"    color: black;\n"
"    border: 2px solid black;\n"
"    border-radius: 5px;\n"
"\n"
"    padding-left: 20px; /* Adjust left padding to center text */\n"
"  \n"
"    margin: 2px;\n"
"}\n"
"\n"
"QSpinBox::up-button {\n"
"    /* Styling for the up-button */\n"
"    subcontrol-origin: border; /* Position within the border */\n"
"    subcontrol-position: top right; /* Position at the top right */\n"
"    width: 15px; /* Width of the up-button */\n"
"    border-left: 1px solid black; /* Border between the up-button and the spin box */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    /* Styling for the down-button */\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"    border-left: 1px solid black;\n"
"}\n"
"\n"
"QSpinBox::up-arrow {\n"
"    /* Arrow styling within the up-button */\n"
"    width: 7px; /* Width of the arrow */\n"
"    height: 7px; /* Height of the arrow */\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"QSpinBox::down-arrow {\n"
"    /* Arrow styling within the down-button */\n"
"    width: 7px;\n"
"    height: 7px;\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: top right;\n"
"    width: 15px;\n"
"    border-bottom: 1px solid black; /* Add border between the up-button and down-button */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button:pressed {\n"
"    /* Styling for the up-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::down-button:pressed {\n"
"    /* Styling for the down-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::up-button:hover, QSpinBox::down-button:hover {\n"
"    /* Styling for the buttons when hovered */\n"
"    background-color: #e0e0e0;\n"
"}")
        self.spinBox_59.setButtonSymbols(QtWidgets.QAbstractSpinBox.UpDownArrows)
        self.spinBox_59.setMaximum(20)
        self.spinBox_59.setObjectName("spinBox_59")
        self.horizontalLayout_58.addWidget(self.spinBox_59)
        self.verticalLayout_13.addLayout(self.horizontalLayout_58)
        self.horizontalLayout_59 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_59.setObjectName("horizontalLayout_59")
        self.label_101 = QtWidgets.QLabel(self.widget_5)
        self.label_101.setMinimumSize(QtCore.QSize(60, 60))
        self.label_101.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.label_101.setFont(font)
        self.label_101.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.label_101.setObjectName("label_101")
        self.horizontalLayout_59.addWidget(self.label_101)
        spacerItem19 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_59.addItem(spacerItem19)
        self.label_102 = QtWidgets.QLabel(self.widget_5)
        self.label_102.setMinimumSize(QtCore.QSize(800, 50))
        self.label_102.setMaximumSize(QtCore.QSize(800, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.label_102.setFont(font)
        self.label_102.setObjectName("label_102")
        self.horizontalLayout_59.addWidget(self.label_102)
        self.horizontalSlider_58 = QtWidgets.QSlider(self.widget_5)
        self.horizontalSlider_58.setMinimumSize(QtCore.QSize(351, 71))
        self.horizontalSlider_58.setMaximumSize(QtCore.QSize(351, 71))
        self.horizontalSlider_58.setStyleSheet("QSlider::groove:horizontal {\n"
"    border: 1px solid #999999;\n"
"    height: 30px; /* Set the height of the groove */\n"
"    background: white;\n"
"    margin: 2px 0;\n"
"    border-radius: 4px; /* Setting border radius for groove */\n"
"}\n"
"\n"
"QSlider::handle:horizontal {\n"
"    background: rgb(31, 149, 239); /* Handle color */\n"
"    border: none; /* No border for handle */\n"
"    width: 60px; /* Width of the handle */\n"
"    margin: -2px 0; /* Expand outside the groove */\n"
"    border-radius: 5px; /* Rounded corners for handle */\n"
"    position: absolute; /* Necessary for proper handle positioning */\n"
"}\n"
"\n"
"QSlider::handle:horizontal:hover {\n"
"    background: rgb(45, 45, 45); /* Handle color when hovered */\n"
"}\n"
"\n"
"/* Style for when the handle is pressed */\n"
"QSlider::handle:horizontal:pressed {\n"
"    background: rgb(31, 149, 239); /* You might want to change this color */\n"
"}\n"
"\n"
"/* Ticks styling */\n"
"QSlider::sub-page:horizontal {\n"
"    background: rgb(31, 149, 239); /* Color of the part before the handle */\n"
"    border-radius: 4px;\n"
"}\n"
"\n"
"QSlider::add-page:horizontal {\n"
"    background: white; /* Color of the part after the handle */\n"
"    border-radius: 4px;\n"
"}\n"
"")
        self.horizontalSlider_58.setMaximum(20)
        self.horizontalSlider_58.setPageStep(5)
        self.horizontalSlider_58.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider_58.setObjectName("horizontalSlider_58")
        self.horizontalLayout_59.addWidget(self.horizontalSlider_58)
        self.spinBox_60 = QtWidgets.QSpinBox(self.widget_5)
        self.spinBox_60.setMinimumSize(QtCore.QSize(90, 60))
        self.spinBox_60.setMaximumSize(QtCore.QSize(90, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(20)
        self.spinBox_60.setFont(font)
        self.spinBox_60.setStyleSheet("QSpinBox {\n"
"    background-color: white;\n"
"    color: black;\n"
"    border: 2px solid black;\n"
"    border-radius: 5px;\n"
"\n"
"    padding-left: 20px; /* Adjust left padding to center text */\n"
"  \n"
"    margin: 2px;\n"
"}\n"
"\n"
"QSpinBox::up-button {\n"
"    /* Styling for the up-button */\n"
"    subcontrol-origin: border; /* Position within the border */\n"
"    subcontrol-position: top right; /* Position at the top right */\n"
"    width: 15px; /* Width of the up-button */\n"
"    border-left: 1px solid black; /* Border between the up-button and the spin box */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    /* Styling for the down-button */\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"    border-left: 1px solid black;\n"
"}\n"
"\n"
"QSpinBox::up-arrow {\n"
"    /* Arrow styling within the up-button */\n"
"    width: 7px; /* Width of the arrow */\n"
"    height: 7px; /* Height of the arrow */\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"QSpinBox::down-arrow {\n"
"    /* Arrow styling within the down-button */\n"
"    width: 7px;\n"
"    height: 7px;\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: top right;\n"
"    width: 15px;\n"
"    border-bottom: 1px solid black; /* Add border between the up-button and down-button */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button:pressed {\n"
"    /* Styling for the up-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::down-button:pressed {\n"
"    /* Styling for the down-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::up-button:hover, QSpinBox::down-button:hover {\n"
"    /* Styling for the buttons when hovered */\n"
"    background-color: #e0e0e0;\n"
"}")
        self.spinBox_60.setButtonSymbols(QtWidgets.QAbstractSpinBox.UpDownArrows)
        self.spinBox_60.setMaximum(20)
        self.spinBox_60.setObjectName("spinBox_60")
        self.horizontalLayout_59.addWidget(self.spinBox_60)
        self.verticalLayout_13.addLayout(self.horizontalLayout_59)
        self.horizontalLayout_60 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_60.setObjectName("horizontalLayout_60")
        self.label_103 = QtWidgets.QLabel(self.widget_5)
        self.label_103.setMinimumSize(QtCore.QSize(60, 60))
        self.label_103.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.label_103.setFont(font)
        self.label_103.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.label_103.setObjectName("label_103")
        self.horizontalLayout_60.addWidget(self.label_103)
        spacerItem20 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_60.addItem(spacerItem20)
        self.label_104 = QtWidgets.QLabel(self.widget_5)
        self.label_104.setMinimumSize(QtCore.QSize(800, 50))
        self.label_104.setMaximumSize(QtCore.QSize(800, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.label_104.setFont(font)
        self.label_104.setObjectName("label_104")
        self.horizontalLayout_60.addWidget(self.label_104)
        self.horizontalSlider_59 = QtWidgets.QSlider(self.widget_5)
        self.horizontalSlider_59.setMinimumSize(QtCore.QSize(351, 71))
        self.horizontalSlider_59.setMaximumSize(QtCore.QSize(351, 71))
        self.horizontalSlider_59.setStyleSheet("QSlider::groove:horizontal {\n"
"    border: 1px solid #999999;\n"
"    height: 30px; /* Set the height of the groove */\n"
"    background: white;\n"
"    margin: 2px 0;\n"
"    border-radius: 4px; /* Setting border radius for groove */\n"
"}\n"
"\n"
"QSlider::handle:horizontal {\n"
"    background: rgb(31, 149, 239); /* Handle color */\n"
"    border: none; /* No border for handle */\n"
"    width: 60px; /* Width of the handle */\n"
"    margin: -2px 0; /* Expand outside the groove */\n"
"    border-radius: 5px; /* Rounded corners for handle */\n"
"    position: absolute; /* Necessary for proper handle positioning */\n"
"}\n"
"\n"
"QSlider::handle:horizontal:hover {\n"
"    background: rgb(45, 45, 45); /* Handle color when hovered */\n"
"}\n"
"\n"
"/* Style for when the handle is pressed */\n"
"QSlider::handle:horizontal:pressed {\n"
"    background: rgb(31, 149, 239); /* You might want to change this color */\n"
"}\n"
"\n"
"/* Ticks styling */\n"
"QSlider::sub-page:horizontal {\n"
"    background: rgb(31, 149, 239); /* Color of the part before the handle */\n"
"    border-radius: 4px;\n"
"}\n"
"\n"
"QSlider::add-page:horizontal {\n"
"    background: white; /* Color of the part after the handle */\n"
"    border-radius: 4px;\n"
"}\n"
"")
        self.horizontalSlider_59.setMaximum(20)
        self.horizontalSlider_59.setPageStep(5)
        self.horizontalSlider_59.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider_59.setObjectName("horizontalSlider_59")
        self.horizontalLayout_60.addWidget(self.horizontalSlider_59)
        self.spinBox_61 = QtWidgets.QSpinBox(self.widget_5)
        self.spinBox_61.setMinimumSize(QtCore.QSize(90, 60))
        self.spinBox_61.setMaximumSize(QtCore.QSize(90, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(20)
        self.spinBox_61.setFont(font)
        self.spinBox_61.setStyleSheet("QSpinBox {\n"
"    background-color: white;\n"
"    color: black;\n"
"    border: 2px solid black;\n"
"    border-radius: 5px;\n"
"\n"
"    padding-left: 20px; /* Adjust left padding to center text */\n"
"  \n"
"    margin: 2px;\n"
"}\n"
"\n"
"QSpinBox::up-button {\n"
"    /* Styling for the up-button */\n"
"    subcontrol-origin: border; /* Position within the border */\n"
"    subcontrol-position: top right; /* Position at the top right */\n"
"    width: 15px; /* Width of the up-button */\n"
"    border-left: 1px solid black; /* Border between the up-button and the spin box */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    /* Styling for the down-button */\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"    border-left: 1px solid black;\n"
"}\n"
"\n"
"QSpinBox::up-arrow {\n"
"    /* Arrow styling within the up-button */\n"
"    width: 7px; /* Width of the arrow */\n"
"    height: 7px; /* Height of the arrow */\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"QSpinBox::down-arrow {\n"
"    /* Arrow styling within the down-button */\n"
"    width: 7px;\n"
"    height: 7px;\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: top right;\n"
"    width: 15px;\n"
"    border-bottom: 1px solid black; /* Add border between the up-button and down-button */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button:pressed {\n"
"    /* Styling for the up-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::down-button:pressed {\n"
"    /* Styling for the down-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::up-button:hover, QSpinBox::down-button:hover {\n"
"    /* Styling for the buttons when hovered */\n"
"    background-color: #e0e0e0;\n"
"}")
        self.spinBox_61.setButtonSymbols(QtWidgets.QAbstractSpinBox.UpDownArrows)
        self.spinBox_61.setMaximum(20)
        self.spinBox_61.setObjectName("spinBox_61")
        self.horizontalLayout_60.addWidget(self.spinBox_61)
        self.verticalLayout_13.addLayout(self.horizontalLayout_60)
        self.horizontalLayout_61 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_61.setObjectName("horizontalLayout_61")
        self.label_105 = QtWidgets.QLabel(self.widget_5)
        self.label_105.setMinimumSize(QtCore.QSize(60, 60))
        self.label_105.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.label_105.setFont(font)
        self.label_105.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.label_105.setObjectName("label_105")
        self.horizontalLayout_61.addWidget(self.label_105)
        spacerItem21 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_61.addItem(spacerItem21)
        self.label_106 = QtWidgets.QLabel(self.widget_5)
        self.label_106.setMinimumSize(QtCore.QSize(800, 50))
        self.label_106.setMaximumSize(QtCore.QSize(800, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.label_106.setFont(font)
        self.label_106.setObjectName("label_106")
        self.horizontalLayout_61.addWidget(self.label_106)
        self.horizontalSlider_60 = QtWidgets.QSlider(self.widget_5)
        self.horizontalSlider_60.setMinimumSize(QtCore.QSize(351, 71))
        self.horizontalSlider_60.setMaximumSize(QtCore.QSize(351, 71))
        self.horizontalSlider_60.setStyleSheet("QSlider::groove:horizontal {\n"
"    border: 1px solid #999999;\n"
"    height: 30px; /* Set the height of the groove */\n"
"    background: white;\n"
"    margin: 2px 0;\n"
"    border-radius: 4px; /* Setting border radius for groove */\n"
"}\n"
"\n"
"QSlider::handle:horizontal {\n"
"    background: rgb(31, 149, 239); /* Handle color */\n"
"    border: none; /* No border for handle */\n"
"    width: 60px; /* Width of the handle */\n"
"    margin: -2px 0; /* Expand outside the groove */\n"
"    border-radius: 5px; /* Rounded corners for handle */\n"
"    position: absolute; /* Necessary for proper handle positioning */\n"
"}\n"
"\n"
"QSlider::handle:horizontal:hover {\n"
"    background: rgb(45, 45, 45); /* Handle color when hovered */\n"
"}\n"
"\n"
"/* Style for when the handle is pressed */\n"
"QSlider::handle:horizontal:pressed {\n"
"    background: rgb(31, 149, 239); /* You might want to change this color */\n"
"}\n"
"\n"
"/* Ticks styling */\n"
"QSlider::sub-page:horizontal {\n"
"    background: rgb(31, 149, 239); /* Color of the part before the handle */\n"
"    border-radius: 4px;\n"
"}\n"
"\n"
"QSlider::add-page:horizontal {\n"
"    background: white; /* Color of the part after the handle */\n"
"    border-radius: 4px;\n"
"}\n"
"")
        self.horizontalSlider_60.setMaximum(20)
        self.horizontalSlider_60.setPageStep(5)
        self.horizontalSlider_60.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider_60.setObjectName("horizontalSlider_60")
        self.horizontalLayout_61.addWidget(self.horizontalSlider_60)
        self.spinBox_62 = QtWidgets.QSpinBox(self.widget_5)
        self.spinBox_62.setMinimumSize(QtCore.QSize(90, 60))
        self.spinBox_62.setMaximumSize(QtCore.QSize(90, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(20)
        self.spinBox_62.setFont(font)
        self.spinBox_62.setStyleSheet("QSpinBox {\n"
"    background-color: white;\n"
"    color: black;\n"
"    border: 2px solid black;\n"
"    border-radius: 5px;\n"
"\n"
"    padding-left: 20px; /* Adjust left padding to center text */\n"
"  \n"
"    margin: 2px;\n"
"}\n"
"\n"
"QSpinBox::up-button {\n"
"    /* Styling for the up-button */\n"
"    subcontrol-origin: border; /* Position within the border */\n"
"    subcontrol-position: top right; /* Position at the top right */\n"
"    width: 15px; /* Width of the up-button */\n"
"    border-left: 1px solid black; /* Border between the up-button and the spin box */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    /* Styling for the down-button */\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"    border-left: 1px solid black;\n"
"}\n"
"\n"
"QSpinBox::up-arrow {\n"
"    /* Arrow styling within the up-button */\n"
"    width: 7px; /* Width of the arrow */\n"
"    height: 7px; /* Height of the arrow */\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"QSpinBox::down-arrow {\n"
"    /* Arrow styling within the down-button */\n"
"    width: 7px;\n"
"    height: 7px;\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: top right;\n"
"    width: 15px;\n"
"    border-bottom: 1px solid black; /* Add border between the up-button and down-button */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button:pressed {\n"
"    /* Styling for the up-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::down-button:pressed {\n"
"    /* Styling for the down-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::up-button:hover, QSpinBox::down-button:hover {\n"
"    /* Styling for the buttons when hovered */\n"
"    background-color: #e0e0e0;\n"
"}")
        self.spinBox_62.setButtonSymbols(QtWidgets.QAbstractSpinBox.UpDownArrows)
        self.spinBox_62.setMaximum(20)
        self.spinBox_62.setObjectName("spinBox_62")
        self.horizontalLayout_61.addWidget(self.spinBox_62)
        self.verticalLayout_13.addLayout(self.horizontalLayout_61)
        self.horizontalLayout_62 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_62.setObjectName("horizontalLayout_62")
        self.label_107 = QtWidgets.QLabel(self.widget_5)
        self.label_107.setMinimumSize(QtCore.QSize(60, 60))
        self.label_107.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.label_107.setFont(font)
        self.label_107.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.label_107.setObjectName("label_107")
        self.horizontalLayout_62.addWidget(self.label_107)
        spacerItem22 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_62.addItem(spacerItem22)
        self.label_108 = QtWidgets.QLabel(self.widget_5)
        self.label_108.setMinimumSize(QtCore.QSize(800, 50))
        self.label_108.setMaximumSize(QtCore.QSize(800, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.label_108.setFont(font)
        self.label_108.setObjectName("label_108")
        self.horizontalLayout_62.addWidget(self.label_108)
        self.horizontalSlider_61 = QtWidgets.QSlider(self.widget_5)
        self.horizontalSlider_61.setMinimumSize(QtCore.QSize(351, 71))
        self.horizontalSlider_61.setMaximumSize(QtCore.QSize(351, 71))
        self.horizontalSlider_61.setStyleSheet("QSlider::groove:horizontal {\n"
"    border: 1px solid #999999;\n"
"    height: 30px; /* Set the height of the groove */\n"
"    background: white;\n"
"    margin: 2px 0;\n"
"    border-radius: 4px; /* Setting border radius for groove */\n"
"}\n"
"\n"
"QSlider::handle:horizontal {\n"
"    background: rgb(31, 149, 239); /* Handle color */\n"
"    border: none; /* No border for handle */\n"
"    width: 60px; /* Width of the handle */\n"
"    margin: -2px 0; /* Expand outside the groove */\n"
"    border-radius: 5px; /* Rounded corners for handle */\n"
"    position: absolute; /* Necessary for proper handle positioning */\n"
"}\n"
"\n"
"QSlider::handle:horizontal:hover {\n"
"    background: rgb(45, 45, 45); /* Handle color when hovered */\n"
"}\n"
"\n"
"/* Style for when the handle is pressed */\n"
"QSlider::handle:horizontal:pressed {\n"
"    background: rgb(31, 149, 239); /* You might want to change this color */\n"
"}\n"
"\n"
"/* Ticks styling */\n"
"QSlider::sub-page:horizontal {\n"
"    background: rgb(31, 149, 239); /* Color of the part before the handle */\n"
"    border-radius: 4px;\n"
"}\n"
"\n"
"QSlider::add-page:horizontal {\n"
"    background: white; /* Color of the part after the handle */\n"
"    border-radius: 4px;\n"
"}\n"
"")
        self.horizontalSlider_61.setMaximum(20)
        self.horizontalSlider_61.setPageStep(5)
        self.horizontalSlider_61.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider_61.setObjectName("horizontalSlider_61")
        self.horizontalLayout_62.addWidget(self.horizontalSlider_61)
        self.spinBox_63 = QtWidgets.QSpinBox(self.widget_5)
        self.spinBox_63.setMinimumSize(QtCore.QSize(90, 60))
        self.spinBox_63.setMaximumSize(QtCore.QSize(90, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(20)
        self.spinBox_63.setFont(font)
        self.spinBox_63.setStyleSheet("QSpinBox {\n"
"    background-color: white;\n"
"    color: black;\n"
"    border: 2px solid black;\n"
"    border-radius: 5px;\n"
"\n"
"    padding-left: 20px; /* Adjust left padding to center text */\n"
"  \n"
"    margin: 2px;\n"
"}\n"
"\n"
"QSpinBox::up-button {\n"
"    /* Styling for the up-button */\n"
"    subcontrol-origin: border; /* Position within the border */\n"
"    subcontrol-position: top right; /* Position at the top right */\n"
"    width: 15px; /* Width of the up-button */\n"
"    border-left: 1px solid black; /* Border between the up-button and the spin box */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    /* Styling for the down-button */\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"    border-left: 1px solid black;\n"
"}\n"
"\n"
"QSpinBox::up-arrow {\n"
"    /* Arrow styling within the up-button */\n"
"    width: 7px; /* Width of the arrow */\n"
"    height: 7px; /* Height of the arrow */\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"QSpinBox::down-arrow {\n"
"    /* Arrow styling within the down-button */\n"
"    width: 7px;\n"
"    height: 7px;\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: top right;\n"
"    width: 15px;\n"
"    border-bottom: 1px solid black; /* Add border between the up-button and down-button */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button:pressed {\n"
"    /* Styling for the up-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::down-button:pressed {\n"
"    /* Styling for the down-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::up-button:hover, QSpinBox::down-button:hover {\n"
"    /* Styling for the buttons when hovered */\n"
"    background-color: #e0e0e0;\n"
"}")
        self.spinBox_63.setButtonSymbols(QtWidgets.QAbstractSpinBox.UpDownArrows)
        self.spinBox_63.setMaximum(20)
        self.spinBox_63.setObjectName("spinBox_63")
        self.horizontalLayout_62.addWidget(self.spinBox_63)
        self.verticalLayout_13.addLayout(self.horizontalLayout_62)
        self.horizontalLayout_63 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_63.setObjectName("horizontalLayout_63")
        self.label_109 = QtWidgets.QLabel(self.widget_5)
        self.label_109.setMinimumSize(QtCore.QSize(60, 60))
        self.label_109.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.label_109.setFont(font)
        self.label_109.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.label_109.setObjectName("label_109")
        self.horizontalLayout_63.addWidget(self.label_109)
        spacerItem23 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_63.addItem(spacerItem23)
        self.label_110 = QtWidgets.QLabel(self.widget_5)
        self.label_110.setMinimumSize(QtCore.QSize(800, 50))
        self.label_110.setMaximumSize(QtCore.QSize(800, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.label_110.setFont(font)
        self.label_110.setObjectName("label_110")
        self.horizontalLayout_63.addWidget(self.label_110)
        self.horizontalSlider_62 = QtWidgets.QSlider(self.widget_5)
        self.horizontalSlider_62.setMinimumSize(QtCore.QSize(351, 71))
        self.horizontalSlider_62.setMaximumSize(QtCore.QSize(351, 71))
        self.horizontalSlider_62.setStyleSheet("QSlider::groove:horizontal {\n"
"    border: 1px solid #999999;\n"
"    height: 30px; /* Set the height of the groove */\n"
"    background: white;\n"
"    margin: 2px 0;\n"
"    border-radius: 4px; /* Setting border radius for groove */\n"
"}\n"
"\n"
"QSlider::handle:horizontal {\n"
"    background: rgb(31, 149, 239); /* Handle color */\n"
"    border: none; /* No border for handle */\n"
"    width: 60px; /* Width of the handle */\n"
"    margin: -2px 0; /* Expand outside the groove */\n"
"    border-radius: 5px; /* Rounded corners for handle */\n"
"    position: absolute; /* Necessary for proper handle positioning */\n"
"}\n"
"\n"
"QSlider::handle:horizontal:hover {\n"
"    background: rgb(45, 45, 45); /* Handle color when hovered */\n"
"}\n"
"\n"
"/* Style for when the handle is pressed */\n"
"QSlider::handle:horizontal:pressed {\n"
"    background: rgb(31, 149, 239); /* You might want to change this color */\n"
"}\n"
"\n"
"/* Ticks styling */\n"
"QSlider::sub-page:horizontal {\n"
"    background: rgb(31, 149, 239); /* Color of the part before the handle */\n"
"    border-radius: 4px;\n"
"}\n"
"\n"
"QSlider::add-page:horizontal {\n"
"    background: white; /* Color of the part after the handle */\n"
"    border-radius: 4px;\n"
"}\n"
"")
        self.horizontalSlider_62.setMaximum(20)
        self.horizontalSlider_62.setPageStep(5)
        self.horizontalSlider_62.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider_62.setObjectName("horizontalSlider_62")
        self.horizontalLayout_63.addWidget(self.horizontalSlider_62)
        self.spinBox_64 = QtWidgets.QSpinBox(self.widget_5)
        self.spinBox_64.setMinimumSize(QtCore.QSize(90, 60))
        self.spinBox_64.setMaximumSize(QtCore.QSize(90, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(20)
        self.spinBox_64.setFont(font)
        self.spinBox_64.setStyleSheet("QSpinBox {\n"
"    background-color: white;\n"
"    color: black;\n"
"    border: 2px solid black;\n"
"    border-radius: 5px;\n"
"\n"
"    padding-left: 20px; /* Adjust left padding to center text */\n"
"  \n"
"    margin: 2px;\n"
"}\n"
"\n"
"QSpinBox::up-button {\n"
"    /* Styling for the up-button */\n"
"    subcontrol-origin: border; /* Position within the border */\n"
"    subcontrol-position: top right; /* Position at the top right */\n"
"    width: 15px; /* Width of the up-button */\n"
"    border-left: 1px solid black; /* Border between the up-button and the spin box */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    /* Styling for the down-button */\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"    border-left: 1px solid black;\n"
"}\n"
"\n"
"QSpinBox::up-arrow {\n"
"    /* Arrow styling within the up-button */\n"
"    width: 7px; /* Width of the arrow */\n"
"    height: 7px; /* Height of the arrow */\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"QSpinBox::down-arrow {\n"
"    /* Arrow styling within the down-button */\n"
"    width: 7px;\n"
"    height: 7px;\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: top right;\n"
"    width: 15px;\n"
"    border-bottom: 1px solid black; /* Add border between the up-button and down-button */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button:pressed {\n"
"    /* Styling for the up-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::down-button:pressed {\n"
"    /* Styling for the down-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::up-button:hover, QSpinBox::down-button:hover {\n"
"    /* Styling for the buttons when hovered */\n"
"    background-color: #e0e0e0;\n"
"}")
        self.spinBox_64.setButtonSymbols(QtWidgets.QAbstractSpinBox.UpDownArrows)
        self.spinBox_64.setMaximum(20)
        self.spinBox_64.setObjectName("spinBox_64")
        self.horizontalLayout_63.addWidget(self.spinBox_64)
        self.verticalLayout_13.addLayout(self.horizontalLayout_63)
        self.verticalLayout_8.addWidget(self.widget_5)
        self.tabWidget.addTab(self.SE_Tab_Page_2, "")
        self.gridLayout_4.addWidget(self.tabWidget, 1, 0, 1, 1)
        self.stackedWidget.addWidget(self.SelfEsteem_Page)
        self.Depression_Page = QtWidgets.QWidget()
        self.Depression_Page.setObjectName("Depression_Page")
        self.gridLayout_5 = QtWidgets.QGridLayout(self.Depression_Page)
        self.gridLayout_5.setObjectName("gridLayout_5")
        self.tabWidget_2 = QtWidgets.QTabWidget(self.Depression_Page)
        font = QtGui.QFont()
        font.setFamily("Roboto Cn")
        font.setPointSize(11)
        self.tabWidget_2.setFont(font)
        self.tabWidget_2.setStyleSheet("QTabWidget::pane {\n"
"    /* The tab widget frame */\n"
"    border-top: 2px solid rgb(31, 149, 239);\n"
"    border-radius: 5px; /* Rounded corners for the pane */\n"
"}\n"
"\n"
"QTabWidget::tab-bar {\n"
"    /* The tab bar */\n"
"    left: 5px; /* Move the bar to the right */\n"
"}\n"
"\n"
"QTabBar::tab {\n"
"    /* The tab */\n"
"    background-color: rgb(31, 149, 239);\n"
"    color: white;\n"
"    padding: 5px;\n"
"    border: none;\n"
"    min-width: 80px; /* Set the minimum width of the tab */\n"
"    min-height: 30px; /* Set the minimum height of the tab */\n"
"    margin-right: 2px; /* Space between tabs */\n"
"    border-top-left-radius: 5px; /* Rounded top-left corner */\n"
"    border-top-right-radius: 5px; /* Rounded top-right corner */\n"
"}\n"
"\n"
"QTabBar::tab:selected {\n"
"    /* The selected tab */\n"
"    background-color: rgb(45, 45, 45);\n"
"    border-top-left-radius: 5px; /* Maintain rounded corner when selected */\n"
"    border-top-right-radius: 5px; /* Maintain rounded corner when selected */\n"
"}\n"
"\n"
"QTabBar::tab:hover {\n"
"    /* The tab when hovered over */\n"
"    background-color: rgb(51, 169, 259);\n"
"}\n"
"")
        self.tabWidget_2.setObjectName("tabWidget_2")
        self.SE_Tab_Page_3 = QtWidgets.QWidget()
        self.SE_Tab_Page_3.setStyleSheet("QLabel {\n"
"\n"
" \n"
"   \n"
"    \n"
"}\n"
"")
        self.SE_Tab_Page_3.setObjectName("SE_Tab_Page_3")
        self.gridLayout_6 = QtWidgets.QGridLayout(self.SE_Tab_Page_3)
        self.gridLayout_6.setContentsMargins(-1, -1, 0, -1)
        self.gridLayout_6.setObjectName("gridLayout_6")
        self.widget_6 = QtWidgets.QWidget(self.SE_Tab_Page_3)
        self.widget_6.setStyleSheet("QPushButton {\n"
"    color: white;\n"
"    text-align:center;\n"
"    height:70px;\n"
"    border: 1px;\n"
"  \n"
"    border-radius: 8px; /* Round top left corner */\n"
"    \n"
"    background-color: rgb(31, 149, 239); /* Normal background color */\n"
"    font-size: 35px; /* Set the font size here */\n"
"    /* Other styles */\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: rgb(45, 45, 45); /* Darker background color on hover */\n"
"    color: rgb(220, 220, 220); /* Slightly lighter text color on hover */\n"
"}\n"
"\n"
"QPushButton:checked {\n"
" \n"
"     background-color: rgb(45, 45, 45); /* Darker background color on checked */\n"
"}")
        self.widget_6.setObjectName("widget_6")
        self.verticalLayout_6 = QtWidgets.QVBoxLayout(self.widget_6)
        self.verticalLayout_6.setContentsMargins(-1, -1, 0, -1)
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.horizontalLayout_71 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_71.setObjectName("horizontalLayout_71")
        self.label_132 = QtWidgets.QLabel(self.widget_6)
        self.label_132.setMinimumSize(QtCore.QSize(60, 60))
        self.label_132.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.label_132.setFont(font)
        self.label_132.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.label_132.setObjectName("label_132")
        self.horizontalLayout_71.addWidget(self.label_132)
        spacerItem24 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_71.addItem(spacerItem24)
        self.label_133 = QtWidgets.QLabel(self.widget_6)
        self.label_133.setMinimumSize(QtCore.QSize(475, 50))
        self.label_133.setMaximumSize(QtCore.QSize(400, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.label_133.setFont(font)
        self.label_133.setObjectName("label_133")
        self.horizontalLayout_71.addWidget(self.label_133)
        spacerItem25 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_71.addItem(spacerItem25)
        self.horizontalLayout_10 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_10.setSizeConstraint(QtWidgets.QLayout.SetFixedSize)
        self.horizontalLayout_10.setSpacing(20)
        self.horizontalLayout_10.setObjectName("horizontalLayout_10")
        self.pushButton_39 = QtWidgets.QPushButton(self.widget_6)
        self.pushButton_39.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_39.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_39.setCheckable(True)
        self.pushButton_39.setAutoExclusive(True)
        self.pushButton_39.setObjectName("pushButton_39")
        self.horizontalLayout_10.addWidget(self.pushButton_39)
        self.pushButton_40 = QtWidgets.QPushButton(self.widget_6)
        self.pushButton_40.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_40.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_40.setCheckable(True)
        self.pushButton_40.setAutoExclusive(True)
        self.pushButton_40.setObjectName("pushButton_40")
        self.horizontalLayout_10.addWidget(self.pushButton_40)
        self.pushButton_41 = QtWidgets.QPushButton(self.widget_6)
        self.pushButton_41.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_41.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_41.setCheckable(True)
        self.pushButton_41.setAutoExclusive(True)
        self.pushButton_41.setObjectName("pushButton_41")
        self.horizontalLayout_10.addWidget(self.pushButton_41)
        self.pushButton_42 = QtWidgets.QPushButton(self.widget_6)
        self.pushButton_42.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_42.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_42.setCheckable(True)
        self.pushButton_42.setAutoExclusive(True)
        self.pushButton_42.setObjectName("pushButton_42")
        self.horizontalLayout_10.addWidget(self.pushButton_42)
        self.pushButton_43 = QtWidgets.QPushButton(self.widget_6)
        self.pushButton_43.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_43.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_43.setCheckable(True)
        self.pushButton_43.setAutoExclusive(True)
        self.pushButton_43.setObjectName("pushButton_43")
        self.horizontalLayout_10.addWidget(self.pushButton_43)
        self.horizontalLayout_71.addLayout(self.horizontalLayout_10)
        spacerItem26 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_71.addItem(spacerItem26)
        self.label_134 = QtWidgets.QLabel(self.widget_6)
        self.label_134.setMinimumSize(QtCore.QSize(400, 50))
        self.label_134.setMaximumSize(QtCore.QSize(800, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.label_134.setFont(font)
        self.label_134.setObjectName("label_134")
        self.horizontalLayout_71.addWidget(self.label_134)
        self.verticalLayout_6.addLayout(self.horizontalLayout_71)
        self.horizontalLayout_67 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_67.setObjectName("horizontalLayout_67")
        self.label_117 = QtWidgets.QLabel(self.widget_6)
        self.label_117.setMinimumSize(QtCore.QSize(60, 60))
        self.label_117.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.label_117.setFont(font)
        self.label_117.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.label_117.setObjectName("label_117")
        self.horizontalLayout_67.addWidget(self.label_117)
        spacerItem27 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_67.addItem(spacerItem27)
        self.label_118 = QtWidgets.QLabel(self.widget_6)
        self.label_118.setMinimumSize(QtCore.QSize(475, 50))
        self.label_118.setMaximumSize(QtCore.QSize(475, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.label_118.setFont(font)
        self.label_118.setObjectName("label_118")
        self.horizontalLayout_67.addWidget(self.label_118)
        spacerItem28 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_67.addItem(spacerItem28)
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setSizeConstraint(QtWidgets.QLayout.SetFixedSize)
        self.horizontalLayout_3.setSpacing(20)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.pushButton_19 = QtWidgets.QPushButton(self.widget_6)
        self.pushButton_19.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_19.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_19.setCheckable(True)
        self.pushButton_19.setAutoExclusive(True)
        self.pushButton_19.setObjectName("pushButton_19")
        self.horizontalLayout_3.addWidget(self.pushButton_19)
        self.pushButton_20 = QtWidgets.QPushButton(self.widget_6)
        self.pushButton_20.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_20.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_20.setCheckable(True)
        self.pushButton_20.setAutoExclusive(True)
        self.pushButton_20.setObjectName("pushButton_20")
        self.horizontalLayout_3.addWidget(self.pushButton_20)
        self.pushButton_21 = QtWidgets.QPushButton(self.widget_6)
        self.pushButton_21.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_21.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_21.setCheckable(True)
        self.pushButton_21.setAutoExclusive(True)
        self.pushButton_21.setObjectName("pushButton_21")
        self.horizontalLayout_3.addWidget(self.pushButton_21)
        self.pushButton_23 = QtWidgets.QPushButton(self.widget_6)
        self.pushButton_23.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_23.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_23.setCheckable(True)
        self.pushButton_23.setAutoExclusive(True)
        self.pushButton_23.setObjectName("pushButton_23")
        self.horizontalLayout_3.addWidget(self.pushButton_23)
        self.pushButton_25 = QtWidgets.QPushButton(self.widget_6)
        self.pushButton_25.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_25.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_25.setCheckable(True)
        self.pushButton_25.setAutoExclusive(True)
        self.pushButton_25.setObjectName("pushButton_25")
        self.horizontalLayout_3.addWidget(self.pushButton_25)
        self.horizontalLayout_67.addLayout(self.horizontalLayout_3)
        spacerItem29 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_67.addItem(spacerItem29)
        self.label_119 = QtWidgets.QLabel(self.widget_6)
        self.label_119.setMinimumSize(QtCore.QSize(400, 50))
        self.label_119.setMaximumSize(QtCore.QSize(800, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.label_119.setFont(font)
        self.label_119.setObjectName("label_119")
        self.horizontalLayout_67.addWidget(self.label_119)
        self.verticalLayout_6.addLayout(self.horizontalLayout_67)
        self.horizontalLayout_73 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_73.setObjectName("horizontalLayout_73")
        self.label_136 = QtWidgets.QLabel(self.widget_6)
        self.label_136.setMinimumSize(QtCore.QSize(60, 60))
        self.label_136.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.label_136.setFont(font)
        self.label_136.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.label_136.setObjectName("label_136")
        self.horizontalLayout_73.addWidget(self.label_136)
        spacerItem30 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_73.addItem(spacerItem30)
        self.label_137 = QtWidgets.QLabel(self.widget_6)
        self.label_137.setMinimumSize(QtCore.QSize(475, 50))
        self.label_137.setMaximumSize(QtCore.QSize(475, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.label_137.setFont(font)
        self.label_137.setObjectName("label_137")
        self.horizontalLayout_73.addWidget(self.label_137)
        spacerItem31 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_73.addItem(spacerItem31)
        self.horizontalLayout_15 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_15.setSizeConstraint(QtWidgets.QLayout.SetFixedSize)
        self.horizontalLayout_15.setSpacing(20)
        self.horizontalLayout_15.setObjectName("horizontalLayout_15")
        self.pushButton_49 = QtWidgets.QPushButton(self.widget_6)
        self.pushButton_49.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_49.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_49.setCheckable(True)
        self.pushButton_49.setAutoExclusive(True)
        self.pushButton_49.setObjectName("pushButton_49")
        self.horizontalLayout_15.addWidget(self.pushButton_49)
        self.pushButton_50 = QtWidgets.QPushButton(self.widget_6)
        self.pushButton_50.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_50.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_50.setCheckable(True)
        self.pushButton_50.setAutoExclusive(True)
        self.pushButton_50.setObjectName("pushButton_50")
        self.horizontalLayout_15.addWidget(self.pushButton_50)
        self.pushButton_51 = QtWidgets.QPushButton(self.widget_6)
        self.pushButton_51.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_51.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_51.setCheckable(True)
        self.pushButton_51.setAutoExclusive(True)
        self.pushButton_51.setObjectName("pushButton_51")
        self.horizontalLayout_15.addWidget(self.pushButton_51)
        self.pushButton_52 = QtWidgets.QPushButton(self.widget_6)
        self.pushButton_52.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_52.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_52.setCheckable(True)
        self.pushButton_52.setAutoExclusive(True)
        self.pushButton_52.setObjectName("pushButton_52")
        self.horizontalLayout_15.addWidget(self.pushButton_52)
        self.pushButton_53 = QtWidgets.QPushButton(self.widget_6)
        self.pushButton_53.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_53.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_53.setCheckable(True)
        self.pushButton_53.setAutoExclusive(True)
        self.pushButton_53.setObjectName("pushButton_53")
        self.horizontalLayout_15.addWidget(self.pushButton_53)
        self.horizontalLayout_73.addLayout(self.horizontalLayout_15)
        spacerItem32 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_73.addItem(spacerItem32)
        self.label_142 = QtWidgets.QLabel(self.widget_6)
        self.label_142.setMinimumSize(QtCore.QSize(400, 50))
        self.label_142.setMaximumSize(QtCore.QSize(800, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.label_142.setFont(font)
        self.label_142.setObjectName("label_142")
        self.horizontalLayout_73.addWidget(self.label_142)
        self.verticalLayout_6.addLayout(self.horizontalLayout_73)
        self.horizontalLayout_74 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_74.setObjectName("horizontalLayout_74")
        self.label_143 = QtWidgets.QLabel(self.widget_6)
        self.label_143.setMinimumSize(QtCore.QSize(60, 60))
        self.label_143.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.label_143.setFont(font)
        self.label_143.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.label_143.setObjectName("label_143")
        self.horizontalLayout_74.addWidget(self.label_143)
        spacerItem33 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_74.addItem(spacerItem33)
        self.label_146 = QtWidgets.QLabel(self.widget_6)
        self.label_146.setMinimumSize(QtCore.QSize(475, 50))
        self.label_146.setMaximumSize(QtCore.QSize(475, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.label_146.setFont(font)
        self.label_146.setObjectName("label_146")
        self.horizontalLayout_74.addWidget(self.label_146)
        spacerItem34 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_74.addItem(spacerItem34)
        self.horizontalLayout_16 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_16.setSizeConstraint(QtWidgets.QLayout.SetFixedSize)
        self.horizontalLayout_16.setSpacing(20)
        self.horizontalLayout_16.setObjectName("horizontalLayout_16")
        self.pushButton_54 = QtWidgets.QPushButton(self.widget_6)
        self.pushButton_54.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_54.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_54.setCheckable(True)
        self.pushButton_54.setAutoExclusive(True)
        self.pushButton_54.setObjectName("pushButton_54")
        self.horizontalLayout_16.addWidget(self.pushButton_54)
        self.pushButton_55 = QtWidgets.QPushButton(self.widget_6)
        self.pushButton_55.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_55.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_55.setCheckable(True)
        self.pushButton_55.setAutoExclusive(True)
        self.pushButton_55.setObjectName("pushButton_55")
        self.horizontalLayout_16.addWidget(self.pushButton_55)
        self.pushButton_56 = QtWidgets.QPushButton(self.widget_6)
        self.pushButton_56.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_56.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_56.setCheckable(True)
        self.pushButton_56.setAutoExclusive(True)
        self.pushButton_56.setObjectName("pushButton_56")
        self.horizontalLayout_16.addWidget(self.pushButton_56)
        self.pushButton_57 = QtWidgets.QPushButton(self.widget_6)
        self.pushButton_57.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_57.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_57.setCheckable(True)
        self.pushButton_57.setAutoExclusive(True)
        self.pushButton_57.setObjectName("pushButton_57")
        self.horizontalLayout_16.addWidget(self.pushButton_57)
        self.pushButton_58 = QtWidgets.QPushButton(self.widget_6)
        self.pushButton_58.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_58.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_58.setCheckable(True)
        self.pushButton_58.setAutoExclusive(True)
        self.pushButton_58.setObjectName("pushButton_58")
        self.horizontalLayout_16.addWidget(self.pushButton_58)
        self.horizontalLayout_74.addLayout(self.horizontalLayout_16)
        spacerItem35 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_74.addItem(spacerItem35)
        self.label_147 = QtWidgets.QLabel(self.widget_6)
        self.label_147.setMinimumSize(QtCore.QSize(400, 50))
        self.label_147.setMaximumSize(QtCore.QSize(800, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.label_147.setFont(font)
        self.label_147.setObjectName("label_147")
        self.horizontalLayout_74.addWidget(self.label_147)
        self.verticalLayout_6.addLayout(self.horizontalLayout_74)
        self.horizontalLayout_75 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_75.setObjectName("horizontalLayout_75")
        self.label_148 = QtWidgets.QLabel(self.widget_6)
        self.label_148.setMinimumSize(QtCore.QSize(60, 60))
        self.label_148.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.label_148.setFont(font)
        self.label_148.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.label_148.setObjectName("label_148")
        self.horizontalLayout_75.addWidget(self.label_148)
        spacerItem36 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_75.addItem(spacerItem36)
        self.label_149 = QtWidgets.QLabel(self.widget_6)
        self.label_149.setMinimumSize(QtCore.QSize(475, 50))
        self.label_149.setMaximumSize(QtCore.QSize(475, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.label_149.setFont(font)
        self.label_149.setObjectName("label_149")
        self.horizontalLayout_75.addWidget(self.label_149)
        spacerItem37 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_75.addItem(spacerItem37)
        self.horizontalLayout_17 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_17.setSizeConstraint(QtWidgets.QLayout.SetFixedSize)
        self.horizontalLayout_17.setSpacing(20)
        self.horizontalLayout_17.setObjectName("horizontalLayout_17")
        self.pushButton_59 = QtWidgets.QPushButton(self.widget_6)
        self.pushButton_59.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_59.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_59.setCheckable(True)
        self.pushButton_59.setAutoExclusive(True)
        self.pushButton_59.setObjectName("pushButton_59")
        self.horizontalLayout_17.addWidget(self.pushButton_59)
        self.pushButton_60 = QtWidgets.QPushButton(self.widget_6)
        self.pushButton_60.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_60.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_60.setCheckable(True)
        self.pushButton_60.setAutoExclusive(True)
        self.pushButton_60.setObjectName("pushButton_60")
        self.horizontalLayout_17.addWidget(self.pushButton_60)
        self.pushButton_61 = QtWidgets.QPushButton(self.widget_6)
        self.pushButton_61.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_61.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_61.setCheckable(True)
        self.pushButton_61.setAutoExclusive(True)
        self.pushButton_61.setObjectName("pushButton_61")
        self.horizontalLayout_17.addWidget(self.pushButton_61)
        self.pushButton_62 = QtWidgets.QPushButton(self.widget_6)
        self.pushButton_62.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_62.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_62.setCheckable(True)
        self.pushButton_62.setAutoExclusive(True)
        self.pushButton_62.setObjectName("pushButton_62")
        self.horizontalLayout_17.addWidget(self.pushButton_62)
        self.pushButton_63 = QtWidgets.QPushButton(self.widget_6)
        self.pushButton_63.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_63.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_63.setCheckable(True)
        self.pushButton_63.setAutoExclusive(True)
        self.pushButton_63.setObjectName("pushButton_63")
        self.horizontalLayout_17.addWidget(self.pushButton_63)
        self.horizontalLayout_75.addLayout(self.horizontalLayout_17)
        spacerItem38 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_75.addItem(spacerItem38)
        self.label_150 = QtWidgets.QLabel(self.widget_6)
        self.label_150.setMinimumSize(QtCore.QSize(400, 50))
        self.label_150.setMaximumSize(QtCore.QSize(800, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.label_150.setFont(font)
        self.label_150.setObjectName("label_150")
        self.horizontalLayout_75.addWidget(self.label_150)
        self.verticalLayout_6.addLayout(self.horizontalLayout_75)
        self.horizontalLayout_76 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_76.setObjectName("horizontalLayout_76")
        self.label_151 = QtWidgets.QLabel(self.widget_6)
        self.label_151.setMinimumSize(QtCore.QSize(60, 60))
        self.label_151.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.label_151.setFont(font)
        self.label_151.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.label_151.setObjectName("label_151")
        self.horizontalLayout_76.addWidget(self.label_151)
        spacerItem39 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_76.addItem(spacerItem39)
        self.label_152 = QtWidgets.QLabel(self.widget_6)
        self.label_152.setMinimumSize(QtCore.QSize(475, 50))
        self.label_152.setMaximumSize(QtCore.QSize(475, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.label_152.setFont(font)
        self.label_152.setObjectName("label_152")
        self.horizontalLayout_76.addWidget(self.label_152)
        spacerItem40 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_76.addItem(spacerItem40)
        self.horizontalLayout_18 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_18.setSizeConstraint(QtWidgets.QLayout.SetFixedSize)
        self.horizontalLayout_18.setSpacing(20)
        self.horizontalLayout_18.setObjectName("horizontalLayout_18")
        self.pushButton_64 = QtWidgets.QPushButton(self.widget_6)
        self.pushButton_64.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_64.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_64.setCheckable(True)
        self.pushButton_64.setAutoExclusive(True)
        self.pushButton_64.setObjectName("pushButton_64")
        self.horizontalLayout_18.addWidget(self.pushButton_64)
        self.pushButton_65 = QtWidgets.QPushButton(self.widget_6)
        self.pushButton_65.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_65.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_65.setCheckable(True)
        self.pushButton_65.setAutoExclusive(True)
        self.pushButton_65.setObjectName("pushButton_65")
        self.horizontalLayout_18.addWidget(self.pushButton_65)
        self.pushButton_66 = QtWidgets.QPushButton(self.widget_6)
        self.pushButton_66.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_66.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_66.setCheckable(True)
        self.pushButton_66.setAutoExclusive(True)
        self.pushButton_66.setObjectName("pushButton_66")
        self.horizontalLayout_18.addWidget(self.pushButton_66)
        self.pushButton_67 = QtWidgets.QPushButton(self.widget_6)
        self.pushButton_67.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_67.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_67.setCheckable(True)
        self.pushButton_67.setAutoExclusive(True)
        self.pushButton_67.setObjectName("pushButton_67")
        self.horizontalLayout_18.addWidget(self.pushButton_67)
        self.pushButton_68 = QtWidgets.QPushButton(self.widget_6)
        self.pushButton_68.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_68.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_68.setCheckable(True)
        self.pushButton_68.setAutoExclusive(True)
        self.pushButton_68.setObjectName("pushButton_68")
        self.horizontalLayout_18.addWidget(self.pushButton_68)
        self.horizontalLayout_76.addLayout(self.horizontalLayout_18)
        spacerItem41 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_76.addItem(spacerItem41)
        self.label_153 = QtWidgets.QLabel(self.widget_6)
        self.label_153.setMinimumSize(QtCore.QSize(400, 50))
        self.label_153.setMaximumSize(QtCore.QSize(800, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.label_153.setFont(font)
        self.label_153.setObjectName("label_153")
        self.horizontalLayout_76.addWidget(self.label_153)
        self.verticalLayout_6.addLayout(self.horizontalLayout_76)
        self.horizontalLayout_77 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_77.setObjectName("horizontalLayout_77")
        self.label_154 = QtWidgets.QLabel(self.widget_6)
        self.label_154.setMinimumSize(QtCore.QSize(60, 60))
        self.label_154.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.label_154.setFont(font)
        self.label_154.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.label_154.setObjectName("label_154")
        self.horizontalLayout_77.addWidget(self.label_154)
        spacerItem42 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_77.addItem(spacerItem42)
        self.label_155 = QtWidgets.QLabel(self.widget_6)
        self.label_155.setMinimumSize(QtCore.QSize(475, 50))
        self.label_155.setMaximumSize(QtCore.QSize(475, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.label_155.setFont(font)
        self.label_155.setObjectName("label_155")
        self.horizontalLayout_77.addWidget(self.label_155)
        spacerItem43 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_77.addItem(spacerItem43)
        self.horizontalLayout_19 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_19.setSizeConstraint(QtWidgets.QLayout.SetFixedSize)
        self.horizontalLayout_19.setSpacing(20)
        self.horizontalLayout_19.setObjectName("horizontalLayout_19")
        self.pushButton_69 = QtWidgets.QPushButton(self.widget_6)
        self.pushButton_69.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_69.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_69.setCheckable(True)
        self.pushButton_69.setAutoExclusive(True)
        self.pushButton_69.setObjectName("pushButton_69")
        self.horizontalLayout_19.addWidget(self.pushButton_69)
        self.pushButton_70 = QtWidgets.QPushButton(self.widget_6)
        self.pushButton_70.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_70.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_70.setCheckable(True)
        self.pushButton_70.setAutoExclusive(True)
        self.pushButton_70.setObjectName("pushButton_70")
        self.horizontalLayout_19.addWidget(self.pushButton_70)
        self.pushButton_71 = QtWidgets.QPushButton(self.widget_6)
        self.pushButton_71.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_71.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_71.setCheckable(True)
        self.pushButton_71.setAutoExclusive(True)
        self.pushButton_71.setObjectName("pushButton_71")
        self.horizontalLayout_19.addWidget(self.pushButton_71)
        self.pushButton_72 = QtWidgets.QPushButton(self.widget_6)
        self.pushButton_72.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_72.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_72.setCheckable(True)
        self.pushButton_72.setAutoExclusive(True)
        self.pushButton_72.setObjectName("pushButton_72")
        self.horizontalLayout_19.addWidget(self.pushButton_72)
        self.pushButton_73 = QtWidgets.QPushButton(self.widget_6)
        self.pushButton_73.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_73.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_73.setCheckable(True)
        self.pushButton_73.setAutoExclusive(True)
        self.pushButton_73.setObjectName("pushButton_73")
        self.horizontalLayout_19.addWidget(self.pushButton_73)
        self.horizontalLayout_77.addLayout(self.horizontalLayout_19)
        spacerItem44 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_77.addItem(spacerItem44)
        self.label_156 = QtWidgets.QLabel(self.widget_6)
        self.label_156.setMinimumSize(QtCore.QSize(400, 50))
        self.label_156.setMaximumSize(QtCore.QSize(800, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.label_156.setFont(font)
        self.label_156.setObjectName("label_156")
        self.horizontalLayout_77.addWidget(self.label_156)
        self.verticalLayout_6.addLayout(self.horizontalLayout_77)
        self.horizontalLayout_78 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_78.setObjectName("horizontalLayout_78")
        self.label_157 = QtWidgets.QLabel(self.widget_6)
        self.label_157.setMinimumSize(QtCore.QSize(60, 60))
        self.label_157.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.label_157.setFont(font)
        self.label_157.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.label_157.setObjectName("label_157")
        self.horizontalLayout_78.addWidget(self.label_157)
        spacerItem45 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_78.addItem(spacerItem45)
        self.label_158 = QtWidgets.QLabel(self.widget_6)
        self.label_158.setMinimumSize(QtCore.QSize(475, 50))
        self.label_158.setMaximumSize(QtCore.QSize(475, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.label_158.setFont(font)
        self.label_158.setObjectName("label_158")
        self.horizontalLayout_78.addWidget(self.label_158)
        spacerItem46 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_78.addItem(spacerItem46)
        self.horizontalLayout_20 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_20.setSizeConstraint(QtWidgets.QLayout.SetFixedSize)
        self.horizontalLayout_20.setSpacing(20)
        self.horizontalLayout_20.setObjectName("horizontalLayout_20")
        self.pushButton_74 = QtWidgets.QPushButton(self.widget_6)
        self.pushButton_74.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_74.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_74.setCheckable(True)
        self.pushButton_74.setAutoExclusive(True)
        self.pushButton_74.setObjectName("pushButton_74")
        self.horizontalLayout_20.addWidget(self.pushButton_74)
        self.pushButton_75 = QtWidgets.QPushButton(self.widget_6)
        self.pushButton_75.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_75.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_75.setCheckable(True)
        self.pushButton_75.setAutoExclusive(True)
        self.pushButton_75.setObjectName("pushButton_75")
        self.horizontalLayout_20.addWidget(self.pushButton_75)
        self.pushButton_76 = QtWidgets.QPushButton(self.widget_6)
        self.pushButton_76.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_76.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_76.setCheckable(True)
        self.pushButton_76.setAutoExclusive(True)
        self.pushButton_76.setObjectName("pushButton_76")
        self.horizontalLayout_20.addWidget(self.pushButton_76)
        self.pushButton_77 = QtWidgets.QPushButton(self.widget_6)
        self.pushButton_77.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_77.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_77.setCheckable(True)
        self.pushButton_77.setAutoExclusive(True)
        self.pushButton_77.setObjectName("pushButton_77")
        self.horizontalLayout_20.addWidget(self.pushButton_77)
        self.pushButton_78 = QtWidgets.QPushButton(self.widget_6)
        self.pushButton_78.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_78.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_78.setCheckable(True)
        self.pushButton_78.setAutoExclusive(True)
        self.pushButton_78.setObjectName("pushButton_78")
        self.horizontalLayout_20.addWidget(self.pushButton_78)
        self.horizontalLayout_78.addLayout(self.horizontalLayout_20)
        spacerItem47 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_78.addItem(spacerItem47)
        self.label_159 = QtWidgets.QLabel(self.widget_6)
        self.label_159.setMinimumSize(QtCore.QSize(400, 50))
        self.label_159.setMaximumSize(QtCore.QSize(800, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.label_159.setFont(font)
        self.label_159.setObjectName("label_159")
        self.horizontalLayout_78.addWidget(self.label_159)
        self.verticalLayout_6.addLayout(self.horizontalLayout_78)
        self.horizontalLayout_79 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_79.setObjectName("horizontalLayout_79")
        self.label_160 = QtWidgets.QLabel(self.widget_6)
        self.label_160.setMinimumSize(QtCore.QSize(60, 60))
        self.label_160.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.label_160.setFont(font)
        self.label_160.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.label_160.setObjectName("label_160")
        self.horizontalLayout_79.addWidget(self.label_160)
        spacerItem48 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_79.addItem(spacerItem48)
        self.label_161 = QtWidgets.QLabel(self.widget_6)
        self.label_161.setMinimumSize(QtCore.QSize(475, 50))
        self.label_161.setMaximumSize(QtCore.QSize(475, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.label_161.setFont(font)
        self.label_161.setObjectName("label_161")
        self.horizontalLayout_79.addWidget(self.label_161)
        spacerItem49 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_79.addItem(spacerItem49)
        self.horizontalLayout_21 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_21.setSizeConstraint(QtWidgets.QLayout.SetFixedSize)
        self.horizontalLayout_21.setSpacing(20)
        self.horizontalLayout_21.setObjectName("horizontalLayout_21")
        self.pushButton_79 = QtWidgets.QPushButton(self.widget_6)
        self.pushButton_79.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_79.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_79.setCheckable(True)
        self.pushButton_79.setAutoExclusive(True)
        self.pushButton_79.setObjectName("pushButton_79")
        self.horizontalLayout_21.addWidget(self.pushButton_79)
        self.pushButton_80 = QtWidgets.QPushButton(self.widget_6)
        self.pushButton_80.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_80.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_80.setCheckable(True)
        self.pushButton_80.setAutoExclusive(True)
        self.pushButton_80.setObjectName("pushButton_80")
        self.horizontalLayout_21.addWidget(self.pushButton_80)
        self.pushButton_81 = QtWidgets.QPushButton(self.widget_6)
        self.pushButton_81.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_81.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_81.setCheckable(True)
        self.pushButton_81.setAutoExclusive(True)
        self.pushButton_81.setObjectName("pushButton_81")
        self.horizontalLayout_21.addWidget(self.pushButton_81)
        self.pushButton_82 = QtWidgets.QPushButton(self.widget_6)
        self.pushButton_82.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_82.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_82.setCheckable(True)
        self.pushButton_82.setAutoExclusive(True)
        self.pushButton_82.setObjectName("pushButton_82")
        self.horizontalLayout_21.addWidget(self.pushButton_82)
        self.pushButton_83 = QtWidgets.QPushButton(self.widget_6)
        self.pushButton_83.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_83.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_83.setCheckable(True)
        self.pushButton_83.setAutoExclusive(True)
        self.pushButton_83.setObjectName("pushButton_83")
        self.horizontalLayout_21.addWidget(self.pushButton_83)
        self.horizontalLayout_79.addLayout(self.horizontalLayout_21)
        spacerItem50 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_79.addItem(spacerItem50)
        self.label_162 = QtWidgets.QLabel(self.widget_6)
        self.label_162.setMinimumSize(QtCore.QSize(400, 50))
        self.label_162.setMaximumSize(QtCore.QSize(800, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.label_162.setFont(font)
        self.label_162.setObjectName("label_162")
        self.horizontalLayout_79.addWidget(self.label_162)
        self.verticalLayout_6.addLayout(self.horizontalLayout_79)
        self.horizontalLayout_80 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_80.setObjectName("horizontalLayout_80")
        self.label_163 = QtWidgets.QLabel(self.widget_6)
        self.label_163.setMinimumSize(QtCore.QSize(60, 60))
        self.label_163.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.label_163.setFont(font)
        self.label_163.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.label_163.setObjectName("label_163")
        self.horizontalLayout_80.addWidget(self.label_163)
        spacerItem51 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_80.addItem(spacerItem51)
        self.label_164 = QtWidgets.QLabel(self.widget_6)
        self.label_164.setMinimumSize(QtCore.QSize(475, 50))
        self.label_164.setMaximumSize(QtCore.QSize(475, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.label_164.setFont(font)
        self.label_164.setObjectName("label_164")
        self.horizontalLayout_80.addWidget(self.label_164)
        spacerItem52 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_80.addItem(spacerItem52)
        self.horizontalLayout_22 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_22.setSizeConstraint(QtWidgets.QLayout.SetFixedSize)
        self.horizontalLayout_22.setSpacing(20)
        self.horizontalLayout_22.setObjectName("horizontalLayout_22")
        self.pushButton_84 = QtWidgets.QPushButton(self.widget_6)
        self.pushButton_84.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_84.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_84.setCheckable(True)
        self.pushButton_84.setAutoExclusive(True)
        self.pushButton_84.setObjectName("pushButton_84")
        self.horizontalLayout_22.addWidget(self.pushButton_84)
        self.pushButton_85 = QtWidgets.QPushButton(self.widget_6)
        self.pushButton_85.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_85.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_85.setCheckable(True)
        self.pushButton_85.setAutoExclusive(True)
        self.pushButton_85.setObjectName("pushButton_85")
        self.horizontalLayout_22.addWidget(self.pushButton_85)
        self.pushButton_86 = QtWidgets.QPushButton(self.widget_6)
        self.pushButton_86.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_86.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_86.setCheckable(True)
        self.pushButton_86.setAutoExclusive(True)
        self.pushButton_86.setObjectName("pushButton_86")
        self.horizontalLayout_22.addWidget(self.pushButton_86)
        self.pushButton_87 = QtWidgets.QPushButton(self.widget_6)
        self.pushButton_87.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_87.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_87.setCheckable(True)
        self.pushButton_87.setAutoExclusive(True)
        self.pushButton_87.setObjectName("pushButton_87")
        self.horizontalLayout_22.addWidget(self.pushButton_87)
        self.pushButton_88 = QtWidgets.QPushButton(self.widget_6)
        self.pushButton_88.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_88.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_88.setCheckable(True)
        self.pushButton_88.setAutoExclusive(True)
        self.pushButton_88.setObjectName("pushButton_88")
        self.horizontalLayout_22.addWidget(self.pushButton_88)
        self.horizontalLayout_80.addLayout(self.horizontalLayout_22)
        spacerItem53 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_80.addItem(spacerItem53)
        self.label_165 = QtWidgets.QLabel(self.widget_6)
        self.label_165.setMinimumSize(QtCore.QSize(400, 50))
        self.label_165.setMaximumSize(QtCore.QSize(800, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.label_165.setFont(font)
        self.label_165.setObjectName("label_165")
        self.horizontalLayout_80.addWidget(self.label_165)
        self.verticalLayout_6.addLayout(self.horizontalLayout_80)
        self.gridLayout_6.addWidget(self.widget_6, 0, 0, 1, 1)
        self.tabWidget_2.addTab(self.SE_Tab_Page_3, "")
        self.SE_Tab_Page_4 = QtWidgets.QWidget()
        self.SE_Tab_Page_4.setObjectName("SE_Tab_Page_4")
        self.verticalLayout_15 = QtWidgets.QVBoxLayout(self.SE_Tab_Page_4)
        self.verticalLayout_15.setContentsMargins(-1, 11, -1, 325)
        self.verticalLayout_15.setObjectName("verticalLayout_15")
        self.widget_7 = QtWidgets.QWidget(self.SE_Tab_Page_4)
        self.widget_7.setStyleSheet("QPushButton {\n"
"    color: white;\n"
"    text-align:center;\n"
"    height:70px;\n"
"    border: 1px;\n"
"  \n"
"    border-radius: 8px; /* Round top left corner */\n"
"    \n"
"    background-color: rgb(31, 149, 239); /* Normal background color */\n"
"    font-size: 35px; /* Set the font size here */\n"
"    /* Other styles */\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: rgb(45, 45, 45); /* Darker background color on hover */\n"
"    color: rgb(220, 220, 220); /* Slightly lighter text color on hover */\n"
"}\n"
"\n"
"QPushButton:checked {\n"
" \n"
"     background-color: rgb(45, 45, 45); /* Darker background color on checked */\n"
"}")
        self.widget_7.setObjectName("widget_7")
        self.verticalLayout_10 = QtWidgets.QVBoxLayout(self.widget_7)
        self.verticalLayout_10.setObjectName("verticalLayout_10")
        self.horizontalLayout_81 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_81.setObjectName("horizontalLayout_81")
        self.label_166 = QtWidgets.QLabel(self.widget_7)
        self.label_166.setMinimumSize(QtCore.QSize(60, 60))
        self.label_166.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.label_166.setFont(font)
        self.label_166.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.label_166.setObjectName("label_166")
        self.horizontalLayout_81.addWidget(self.label_166)
        spacerItem54 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_81.addItem(spacerItem54)
        self.label_167 = QtWidgets.QLabel(self.widget_7)
        self.label_167.setMinimumSize(QtCore.QSize(475, 50))
        self.label_167.setMaximumSize(QtCore.QSize(400, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.label_167.setFont(font)
        self.label_167.setObjectName("label_167")
        self.horizontalLayout_81.addWidget(self.label_167)
        spacerItem55 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_81.addItem(spacerItem55)
        self.horizontalLayout_23 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_23.setSizeConstraint(QtWidgets.QLayout.SetFixedSize)
        self.horizontalLayout_23.setSpacing(20)
        self.horizontalLayout_23.setObjectName("horizontalLayout_23")
        self.pushButton_89 = QtWidgets.QPushButton(self.widget_7)
        self.pushButton_89.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_89.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_89.setCheckable(True)
        self.pushButton_89.setAutoExclusive(True)
        self.pushButton_89.setObjectName("pushButton_89")
        self.horizontalLayout_23.addWidget(self.pushButton_89)
        self.pushButton_90 = QtWidgets.QPushButton(self.widget_7)
        self.pushButton_90.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_90.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_90.setCheckable(True)
        self.pushButton_90.setAutoExclusive(True)
        self.pushButton_90.setObjectName("pushButton_90")
        self.horizontalLayout_23.addWidget(self.pushButton_90)
        self.pushButton_91 = QtWidgets.QPushButton(self.widget_7)
        self.pushButton_91.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_91.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_91.setCheckable(True)
        self.pushButton_91.setAutoExclusive(True)
        self.pushButton_91.setObjectName("pushButton_91")
        self.horizontalLayout_23.addWidget(self.pushButton_91)
        self.pushButton_92 = QtWidgets.QPushButton(self.widget_7)
        self.pushButton_92.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_92.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_92.setCheckable(True)
        self.pushButton_92.setAutoExclusive(True)
        self.pushButton_92.setObjectName("pushButton_92")
        self.horizontalLayout_23.addWidget(self.pushButton_92)
        self.pushButton_93 = QtWidgets.QPushButton(self.widget_7)
        self.pushButton_93.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_93.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_93.setCheckable(True)
        self.pushButton_93.setAutoExclusive(True)
        self.pushButton_93.setObjectName("pushButton_93")
        self.horizontalLayout_23.addWidget(self.pushButton_93)
        self.horizontalLayout_81.addLayout(self.horizontalLayout_23)
        spacerItem56 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_81.addItem(spacerItem56)
        self.label_168 = QtWidgets.QLabel(self.widget_7)
        self.label_168.setMinimumSize(QtCore.QSize(400, 50))
        self.label_168.setMaximumSize(QtCore.QSize(800, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.label_168.setFont(font)
        self.label_168.setObjectName("label_168")
        self.horizontalLayout_81.addWidget(self.label_168)
        self.verticalLayout_10.addLayout(self.horizontalLayout_81)
        self.horizontalLayout_82 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_82.setObjectName("horizontalLayout_82")
        self.label_169 = QtWidgets.QLabel(self.widget_7)
        self.label_169.setMinimumSize(QtCore.QSize(60, 60))
        self.label_169.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.label_169.setFont(font)
        self.label_169.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.label_169.setObjectName("label_169")
        self.horizontalLayout_82.addWidget(self.label_169)
        spacerItem57 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_82.addItem(spacerItem57)
        self.label_170 = QtWidgets.QLabel(self.widget_7)
        self.label_170.setMinimumSize(QtCore.QSize(475, 50))
        self.label_170.setMaximumSize(QtCore.QSize(400, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.label_170.setFont(font)
        self.label_170.setObjectName("label_170")
        self.horizontalLayout_82.addWidget(self.label_170)
        spacerItem58 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_82.addItem(spacerItem58)
        self.horizontalLayout_24 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_24.setSizeConstraint(QtWidgets.QLayout.SetFixedSize)
        self.horizontalLayout_24.setSpacing(20)
        self.horizontalLayout_24.setObjectName("horizontalLayout_24")
        self.pushButton_94 = QtWidgets.QPushButton(self.widget_7)
        self.pushButton_94.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_94.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_94.setCheckable(True)
        self.pushButton_94.setAutoExclusive(True)
        self.pushButton_94.setObjectName("pushButton_94")
        self.horizontalLayout_24.addWidget(self.pushButton_94)
        self.pushButton_95 = QtWidgets.QPushButton(self.widget_7)
        self.pushButton_95.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_95.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_95.setCheckable(True)
        self.pushButton_95.setAutoExclusive(True)
        self.pushButton_95.setObjectName("pushButton_95")
        self.horizontalLayout_24.addWidget(self.pushButton_95)
        self.pushButton_96 = QtWidgets.QPushButton(self.widget_7)
        self.pushButton_96.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_96.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_96.setCheckable(True)
        self.pushButton_96.setAutoExclusive(True)
        self.pushButton_96.setObjectName("pushButton_96")
        self.horizontalLayout_24.addWidget(self.pushButton_96)
        self.pushButton_97 = QtWidgets.QPushButton(self.widget_7)
        self.pushButton_97.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_97.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_97.setCheckable(True)
        self.pushButton_97.setAutoExclusive(True)
        self.pushButton_97.setObjectName("pushButton_97")
        self.horizontalLayout_24.addWidget(self.pushButton_97)
        self.pushButton_98 = QtWidgets.QPushButton(self.widget_7)
        self.pushButton_98.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_98.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_98.setCheckable(True)
        self.pushButton_98.setAutoExclusive(True)
        self.pushButton_98.setObjectName("pushButton_98")
        self.horizontalLayout_24.addWidget(self.pushButton_98)
        self.horizontalLayout_82.addLayout(self.horizontalLayout_24)
        spacerItem59 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_82.addItem(spacerItem59)
        self.label_171 = QtWidgets.QLabel(self.widget_7)
        self.label_171.setMinimumSize(QtCore.QSize(400, 50))
        self.label_171.setMaximumSize(QtCore.QSize(800, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.label_171.setFont(font)
        self.label_171.setObjectName("label_171")
        self.horizontalLayout_82.addWidget(self.label_171)
        self.verticalLayout_10.addLayout(self.horizontalLayout_82)
        self.horizontalLayout_83 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_83.setObjectName("horizontalLayout_83")
        self.label_172 = QtWidgets.QLabel(self.widget_7)
        self.label_172.setMinimumSize(QtCore.QSize(60, 60))
        self.label_172.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.label_172.setFont(font)
        self.label_172.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.label_172.setObjectName("label_172")
        self.horizontalLayout_83.addWidget(self.label_172)
        spacerItem60 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_83.addItem(spacerItem60)
        self.label_173 = QtWidgets.QLabel(self.widget_7)
        self.label_173.setMinimumSize(QtCore.QSize(475, 50))
        self.label_173.setMaximumSize(QtCore.QSize(400, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.label_173.setFont(font)
        self.label_173.setObjectName("label_173")
        self.horizontalLayout_83.addWidget(self.label_173)
        spacerItem61 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_83.addItem(spacerItem61)
        self.horizontalLayout_25 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_25.setSizeConstraint(QtWidgets.QLayout.SetFixedSize)
        self.horizontalLayout_25.setSpacing(20)
        self.horizontalLayout_25.setObjectName("horizontalLayout_25")
        self.pushButton_99 = QtWidgets.QPushButton(self.widget_7)
        self.pushButton_99.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_99.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_99.setCheckable(True)
        self.pushButton_99.setAutoExclusive(True)
        self.pushButton_99.setObjectName("pushButton_99")
        self.horizontalLayout_25.addWidget(self.pushButton_99)
        self.pushButton_100 = QtWidgets.QPushButton(self.widget_7)
        self.pushButton_100.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_100.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_100.setCheckable(True)
        self.pushButton_100.setAutoExclusive(True)
        self.pushButton_100.setObjectName("pushButton_100")
        self.horizontalLayout_25.addWidget(self.pushButton_100)
        self.pushButton_101 = QtWidgets.QPushButton(self.widget_7)
        self.pushButton_101.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_101.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_101.setCheckable(True)
        self.pushButton_101.setAutoExclusive(True)
        self.pushButton_101.setObjectName("pushButton_101")
        self.horizontalLayout_25.addWidget(self.pushButton_101)
        self.pushButton_102 = QtWidgets.QPushButton(self.widget_7)
        self.pushButton_102.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_102.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_102.setCheckable(True)
        self.pushButton_102.setAutoExclusive(True)
        self.pushButton_102.setObjectName("pushButton_102")
        self.horizontalLayout_25.addWidget(self.pushButton_102)
        self.pushButton_103 = QtWidgets.QPushButton(self.widget_7)
        self.pushButton_103.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_103.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_103.setCheckable(True)
        self.pushButton_103.setAutoExclusive(True)
        self.pushButton_103.setObjectName("pushButton_103")
        self.horizontalLayout_25.addWidget(self.pushButton_103)
        self.horizontalLayout_83.addLayout(self.horizontalLayout_25)
        spacerItem62 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_83.addItem(spacerItem62)
        self.label_174 = QtWidgets.QLabel(self.widget_7)
        self.label_174.setMinimumSize(QtCore.QSize(400, 50))
        self.label_174.setMaximumSize(QtCore.QSize(800, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.label_174.setFont(font)
        self.label_174.setObjectName("label_174")
        self.horizontalLayout_83.addWidget(self.label_174)
        self.verticalLayout_10.addLayout(self.horizontalLayout_83)
        self.horizontalLayout_72 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_72.setObjectName("horizontalLayout_72")
        self.label_135 = QtWidgets.QLabel(self.widget_7)
        self.label_135.setMinimumSize(QtCore.QSize(60, 60))
        self.label_135.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.label_135.setFont(font)
        self.label_135.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.label_135.setObjectName("label_135")
        self.horizontalLayout_72.addWidget(self.label_135)
        spacerItem63 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_72.addItem(spacerItem63)
        self.gridLayout_7 = QtWidgets.QGridLayout()
        self.gridLayout_7.setVerticalSpacing(0)
        self.gridLayout_7.setObjectName("gridLayout_7")
        self.label_138 = QtWidgets.QLabel(self.widget_7)
        self.label_138.setMinimumSize(QtCore.QSize(475, 40))
        self.label_138.setMaximumSize(QtCore.QSize(475, 40))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.label_138.setFont(font)
        self.label_138.setObjectName("label_138")
        self.gridLayout_7.addWidget(self.label_138, 0, 0, 1, 1)
        self.label_139 = QtWidgets.QLabel(self.widget_7)
        self.label_139.setMinimumSize(QtCore.QSize(475, 40))
        self.label_139.setMaximumSize(QtCore.QSize(475, 40))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.label_139.setFont(font)
        self.label_139.setObjectName("label_139")
        self.gridLayout_7.addWidget(self.label_139, 1, 0, 1, 1)
        self.horizontalLayout_72.addLayout(self.gridLayout_7)
        spacerItem64 = QtWidgets.QSpacerItem(20, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_72.addItem(spacerItem64)
        self.horizontalLayout_11 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_11.setSizeConstraint(QtWidgets.QLayout.SetFixedSize)
        self.horizontalLayout_11.setSpacing(20)
        self.horizontalLayout_11.setObjectName("horizontalLayout_11")
        self.pushButton_44 = QtWidgets.QPushButton(self.widget_7)
        self.pushButton_44.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_44.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_44.setCheckable(True)
        self.pushButton_44.setAutoExclusive(True)
        self.pushButton_44.setObjectName("pushButton_44")
        self.horizontalLayout_11.addWidget(self.pushButton_44)
        self.pushButton_45 = QtWidgets.QPushButton(self.widget_7)
        self.pushButton_45.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_45.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_45.setCheckable(True)
        self.pushButton_45.setAutoExclusive(True)
        self.pushButton_45.setObjectName("pushButton_45")
        self.horizontalLayout_11.addWidget(self.pushButton_45)
        self.pushButton_46 = QtWidgets.QPushButton(self.widget_7)
        self.pushButton_46.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_46.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_46.setCheckable(True)
        self.pushButton_46.setAutoExclusive(True)
        self.pushButton_46.setObjectName("pushButton_46")
        self.horizontalLayout_11.addWidget(self.pushButton_46)
        self.pushButton_47 = QtWidgets.QPushButton(self.widget_7)
        self.pushButton_47.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_47.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_47.setCheckable(True)
        self.pushButton_47.setAutoExclusive(True)
        self.pushButton_47.setObjectName("pushButton_47")
        self.horizontalLayout_11.addWidget(self.pushButton_47)
        self.pushButton_48 = QtWidgets.QPushButton(self.widget_7)
        self.pushButton_48.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_48.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_48.setCheckable(True)
        self.pushButton_48.setAutoExclusive(True)
        self.pushButton_48.setObjectName("pushButton_48")
        self.horizontalLayout_11.addWidget(self.pushButton_48)
        self.horizontalLayout_72.addLayout(self.horizontalLayout_11)
        spacerItem65 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_72.addItem(spacerItem65)
        self.gridLayout_8 = QtWidgets.QGridLayout()
        self.gridLayout_8.setObjectName("gridLayout_8")
        self.label_144 = QtWidgets.QLabel(self.widget_7)
        self.label_144.setMinimumSize(QtCore.QSize(475, 40))
        self.label_144.setMaximumSize(QtCore.QSize(475, 40))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.label_144.setFont(font)
        self.label_144.setObjectName("label_144")
        self.gridLayout_8.addWidget(self.label_144, 0, 0, 1, 1)
        self.label_145 = QtWidgets.QLabel(self.widget_7)
        self.label_145.setMinimumSize(QtCore.QSize(475, 40))
        self.label_145.setMaximumSize(QtCore.QSize(475, 40))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.label_145.setFont(font)
        self.label_145.setObjectName("label_145")
        self.gridLayout_8.addWidget(self.label_145, 1, 0, 1, 1)
        self.horizontalLayout_72.addLayout(self.gridLayout_8)
        self.verticalLayout_10.addLayout(self.horizontalLayout_72)
        self.horizontalLayout_84 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_84.setObjectName("horizontalLayout_84")
        self.label_175 = QtWidgets.QLabel(self.widget_7)
        self.label_175.setMinimumSize(QtCore.QSize(60, 60))
        self.label_175.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.label_175.setFont(font)
        self.label_175.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.label_175.setObjectName("label_175")
        self.horizontalLayout_84.addWidget(self.label_175)
        spacerItem66 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_84.addItem(spacerItem66)
        self.gridLayout_9 = QtWidgets.QGridLayout()
        self.gridLayout_9.setVerticalSpacing(0)
        self.gridLayout_9.setObjectName("gridLayout_9")
        self.label_176 = QtWidgets.QLabel(self.widget_7)
        self.label_176.setMinimumSize(QtCore.QSize(475, 40))
        self.label_176.setMaximumSize(QtCore.QSize(475, 40))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.label_176.setFont(font)
        self.label_176.setObjectName("label_176")
        self.gridLayout_9.addWidget(self.label_176, 0, 0, 1, 1)
        self.label_177 = QtWidgets.QLabel(self.widget_7)
        self.label_177.setMinimumSize(QtCore.QSize(475, 40))
        self.label_177.setMaximumSize(QtCore.QSize(475, 40))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.label_177.setFont(font)
        self.label_177.setObjectName("label_177")
        self.gridLayout_9.addWidget(self.label_177, 1, 0, 1, 1)
        self.horizontalLayout_84.addLayout(self.gridLayout_9)
        spacerItem67 = QtWidgets.QSpacerItem(20, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_84.addItem(spacerItem67)
        self.horizontalLayout_26 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_26.setSizeConstraint(QtWidgets.QLayout.SetFixedSize)
        self.horizontalLayout_26.setSpacing(20)
        self.horizontalLayout_26.setObjectName("horizontalLayout_26")
        self.pushButton_104 = QtWidgets.QPushButton(self.widget_7)
        self.pushButton_104.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_104.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_104.setCheckable(True)
        self.pushButton_104.setAutoExclusive(True)
        self.pushButton_104.setObjectName("pushButton_104")
        self.horizontalLayout_26.addWidget(self.pushButton_104)
        self.pushButton_105 = QtWidgets.QPushButton(self.widget_7)
        self.pushButton_105.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_105.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_105.setCheckable(True)
        self.pushButton_105.setAutoExclusive(True)
        self.pushButton_105.setObjectName("pushButton_105")
        self.horizontalLayout_26.addWidget(self.pushButton_105)
        self.pushButton_106 = QtWidgets.QPushButton(self.widget_7)
        self.pushButton_106.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_106.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_106.setCheckable(True)
        self.pushButton_106.setAutoExclusive(True)
        self.pushButton_106.setObjectName("pushButton_106")
        self.horizontalLayout_26.addWidget(self.pushButton_106)
        self.pushButton_107 = QtWidgets.QPushButton(self.widget_7)
        self.pushButton_107.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_107.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_107.setCheckable(True)
        self.pushButton_107.setAutoExclusive(True)
        self.pushButton_107.setObjectName("pushButton_107")
        self.horizontalLayout_26.addWidget(self.pushButton_107)
        self.pushButton_108 = QtWidgets.QPushButton(self.widget_7)
        self.pushButton_108.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_108.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_108.setCheckable(True)
        self.pushButton_108.setAutoExclusive(True)
        self.pushButton_108.setObjectName("pushButton_108")
        self.horizontalLayout_26.addWidget(self.pushButton_108)
        self.horizontalLayout_84.addLayout(self.horizontalLayout_26)
        spacerItem68 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_84.addItem(spacerItem68)
        self.gridLayout_10 = QtWidgets.QGridLayout()
        self.gridLayout_10.setObjectName("gridLayout_10")
        self.label_178 = QtWidgets.QLabel(self.widget_7)
        self.label_178.setMinimumSize(QtCore.QSize(475, 40))
        self.label_178.setMaximumSize(QtCore.QSize(475, 40))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.label_178.setFont(font)
        self.label_178.setObjectName("label_178")
        self.gridLayout_10.addWidget(self.label_178, 0, 0, 1, 1)
        self.label_179 = QtWidgets.QLabel(self.widget_7)
        self.label_179.setMinimumSize(QtCore.QSize(475, 40))
        self.label_179.setMaximumSize(QtCore.QSize(475, 40))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.label_179.setFont(font)
        self.label_179.setObjectName("label_179")
        self.gridLayout_10.addWidget(self.label_179, 1, 0, 1, 1)
        self.horizontalLayout_84.addLayout(self.gridLayout_10)
        self.verticalLayout_10.addLayout(self.horizontalLayout_84)
        self.verticalLayout_15.addWidget(self.widget_7)
        self.tabWidget_2.addTab(self.SE_Tab_Page_4, "")
        self.gridLayout_5.addWidget(self.tabWidget_2, 0, 0, 1, 1)
        self.stackedWidget.addWidget(self.Depression_Page)
        self.Stress_Page = QtWidgets.QWidget()
        self.Stress_Page.setObjectName("Stress_Page")
        self.gridLayout_16 = QtWidgets.QGridLayout(self.Stress_Page)
        self.gridLayout_16.setObjectName("gridLayout_16")
        self.tabWidget_3 = QtWidgets.QTabWidget(self.Stress_Page)
        font = QtGui.QFont()
        font.setFamily("Roboto Cn")
        font.setPointSize(11)
        self.tabWidget_3.setFont(font)
        self.tabWidget_3.setStyleSheet("QTabWidget::pane {\n"
"    /* The tab widget frame */\n"
"    border-top: 2px solid rgb(31, 149, 239);\n"
"    border-radius: 5px; /* Rounded corners for the pane */\n"
"}\n"
"\n"
"QTabWidget::tab-bar {\n"
"    /* The tab bar */\n"
"    left: 5px; /* Move the bar to the right */\n"
"}\n"
"\n"
"QTabBar::tab {\n"
"    /* The tab */\n"
"    background-color: rgb(31, 149, 239);\n"
"    color: white;\n"
"    padding: 5px;\n"
"    border: none;\n"
"    min-width: 80px; /* Set the minimum width of the tab */\n"
"    min-height: 30px; /* Set the minimum height of the tab */\n"
"    margin-right: 2px; /* Space between tabs */\n"
"    border-top-left-radius: 5px; /* Rounded top-left corner */\n"
"    border-top-right-radius: 5px; /* Rounded top-right corner */\n"
"}\n"
"\n"
"QTabBar::tab:selected {\n"
"    /* The selected tab */\n"
"    background-color: rgb(45, 45, 45);\n"
"    border-top-left-radius: 5px; /* Maintain rounded corner when selected */\n"
"    border-top-right-radius: 5px; /* Maintain rounded corner when selected */\n"
"}\n"
"\n"
"QTabBar::tab:hover {\n"
"    /* The tab when hovered over */\n"
"    background-color: rgb(51, 169, 259);\n"
"}\n"
"")
        self.tabWidget_3.setObjectName("tabWidget_3")
        self.SE_Tab_Page_5 = QtWidgets.QWidget()
        self.SE_Tab_Page_5.setStyleSheet("QLabel {\n"
"\n"
" \n"
"   \n"
"    \n"
"}\n"
"")
        self.SE_Tab_Page_5.setObjectName("SE_Tab_Page_5")
        self.gridLayout_11 = QtWidgets.QGridLayout(self.SE_Tab_Page_5)
        self.gridLayout_11.setContentsMargins(-1, -1, 0, -1)
        self.gridLayout_11.setObjectName("gridLayout_11")
        self.widget_8 = QtWidgets.QWidget(self.SE_Tab_Page_5)
        self.widget_8.setStyleSheet("QPushButton {\n"
"    color: white;\n"
"    text-align:center;\n"
"    height:70px;\n"
"    border: 1px;\n"
"  \n"
"    border-radius: 8px; /* Round top left corner */\n"
"    \n"
"    background-color: rgb(31, 149, 239); /* Normal background color */\n"
"    font-size: 35px; /* Set the font size here */\n"
"    /* Other styles */\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: rgb(45, 45, 45); /* Darker background color on hover */\n"
"    color: rgb(220, 220, 220); /* Slightly lighter text color on hover */\n"
"}\n"
"\n"
"QPushButton:checked {\n"
" \n"
"     background-color: rgb(45, 45, 45); /* Darker background color on checked */\n"
"}")
        self.widget_8.setObjectName("widget_8")
        self.verticalLayout_11 = QtWidgets.QVBoxLayout(self.widget_8)
        self.verticalLayout_11.setObjectName("verticalLayout_11")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.label_180 = QtWidgets.QLabel(self.widget_8)
        self.label_180.setMinimumSize(QtCore.QSize(60, 60))
        self.label_180.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.label_180.setFont(font)
        self.label_180.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.label_180.setObjectName("label_180")
        self.horizontalLayout_2.addWidget(self.label_180)
        spacerItem69 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_2.addItem(spacerItem69)
        self.label_181 = QtWidgets.QLabel(self.widget_8)
        self.label_181.setMinimumSize(QtCore.QSize(825, 50))
        self.label_181.setMaximumSize(QtCore.QSize(825, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.label_181.setFont(font)
        self.label_181.setObjectName("label_181")
        self.horizontalLayout_2.addWidget(self.label_181)
        spacerItem70 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_2.addItem(spacerItem70)
        self.horizontalLayout_28 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_28.setSizeConstraint(QtWidgets.QLayout.SetFixedSize)
        self.horizontalLayout_28.setSpacing(20)
        self.horizontalLayout_28.setObjectName("horizontalLayout_28")
        self.pushButton_109 = QtWidgets.QPushButton(self.widget_8)
        self.pushButton_109.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_109.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_109.setCheckable(True)
        self.pushButton_109.setAutoExclusive(True)
        self.pushButton_109.setObjectName("pushButton_109")
        self.horizontalLayout_28.addWidget(self.pushButton_109)
        self.pushButton_110 = QtWidgets.QPushButton(self.widget_8)
        self.pushButton_110.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_110.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_110.setCheckable(True)
        self.pushButton_110.setAutoExclusive(True)
        self.pushButton_110.setObjectName("pushButton_110")
        self.horizontalLayout_28.addWidget(self.pushButton_110)
        self.pushButton_111 = QtWidgets.QPushButton(self.widget_8)
        self.pushButton_111.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_111.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_111.setCheckable(True)
        self.pushButton_111.setAutoExclusive(True)
        self.pushButton_111.setObjectName("pushButton_111")
        self.horizontalLayout_28.addWidget(self.pushButton_111)
        self.pushButton_112 = QtWidgets.QPushButton(self.widget_8)
        self.pushButton_112.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_112.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_112.setCheckable(True)
        self.pushButton_112.setAutoExclusive(True)
        self.pushButton_112.setObjectName("pushButton_112")
        self.horizontalLayout_28.addWidget(self.pushButton_112)
        self.pushButton_113 = QtWidgets.QPushButton(self.widget_8)
        self.pushButton_113.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_113.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_113.setCheckable(True)
        self.pushButton_113.setAutoExclusive(True)
        self.pushButton_113.setObjectName("pushButton_113")
        self.horizontalLayout_28.addWidget(self.pushButton_113)
        self.horizontalLayout_2.addLayout(self.horizontalLayout_28)
        self.verticalLayout_11.addLayout(self.horizontalLayout_2)
        self.horizontalLayout_29 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_29.setObjectName("horizontalLayout_29")
        self.label_182 = QtWidgets.QLabel(self.widget_8)
        self.label_182.setMinimumSize(QtCore.QSize(60, 60))
        self.label_182.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.label_182.setFont(font)
        self.label_182.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.label_182.setObjectName("label_182")
        self.horizontalLayout_29.addWidget(self.label_182)
        spacerItem71 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_29.addItem(spacerItem71)
        self.label_183 = QtWidgets.QLabel(self.widget_8)
        self.label_183.setMinimumSize(QtCore.QSize(825, 50))
        self.label_183.setMaximumSize(QtCore.QSize(825, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.label_183.setFont(font)
        self.label_183.setObjectName("label_183")
        self.horizontalLayout_29.addWidget(self.label_183)
        spacerItem72 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_29.addItem(spacerItem72)
        self.horizontalLayout_30 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_30.setSizeConstraint(QtWidgets.QLayout.SetFixedSize)
        self.horizontalLayout_30.setSpacing(20)
        self.horizontalLayout_30.setObjectName("horizontalLayout_30")
        self.pushButton_114 = QtWidgets.QPushButton(self.widget_8)
        self.pushButton_114.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_114.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_114.setCheckable(True)
        self.pushButton_114.setAutoExclusive(True)
        self.pushButton_114.setObjectName("pushButton_114")
        self.horizontalLayout_30.addWidget(self.pushButton_114)
        self.pushButton_115 = QtWidgets.QPushButton(self.widget_8)
        self.pushButton_115.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_115.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_115.setCheckable(True)
        self.pushButton_115.setAutoExclusive(True)
        self.pushButton_115.setObjectName("pushButton_115")
        self.horizontalLayout_30.addWidget(self.pushButton_115)
        self.pushButton_116 = QtWidgets.QPushButton(self.widget_8)
        self.pushButton_116.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_116.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_116.setCheckable(True)
        self.pushButton_116.setAutoExclusive(True)
        self.pushButton_116.setObjectName("pushButton_116")
        self.horizontalLayout_30.addWidget(self.pushButton_116)
        self.pushButton_117 = QtWidgets.QPushButton(self.widget_8)
        self.pushButton_117.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_117.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_117.setCheckable(True)
        self.pushButton_117.setAutoExclusive(True)
        self.pushButton_117.setObjectName("pushButton_117")
        self.horizontalLayout_30.addWidget(self.pushButton_117)
        self.pushButton_118 = QtWidgets.QPushButton(self.widget_8)
        self.pushButton_118.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_118.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_118.setCheckable(True)
        self.pushButton_118.setAutoExclusive(True)
        self.pushButton_118.setObjectName("pushButton_118")
        self.horizontalLayout_30.addWidget(self.pushButton_118)
        self.horizontalLayout_29.addLayout(self.horizontalLayout_30)
        self.verticalLayout_11.addLayout(self.horizontalLayout_29)
        self.horizontalLayout_31 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_31.setObjectName("horizontalLayout_31")
        self.label_184 = QtWidgets.QLabel(self.widget_8)
        self.label_184.setMinimumSize(QtCore.QSize(60, 60))
        self.label_184.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.label_184.setFont(font)
        self.label_184.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.label_184.setObjectName("label_184")
        self.horizontalLayout_31.addWidget(self.label_184)
        spacerItem73 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_31.addItem(spacerItem73)
        self.label_185 = QtWidgets.QLabel(self.widget_8)
        self.label_185.setMinimumSize(QtCore.QSize(825, 50))
        self.label_185.setMaximumSize(QtCore.QSize(825, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.label_185.setFont(font)
        self.label_185.setObjectName("label_185")
        self.horizontalLayout_31.addWidget(self.label_185)
        spacerItem74 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_31.addItem(spacerItem74)
        self.horizontalLayout_32 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_32.setSizeConstraint(QtWidgets.QLayout.SetFixedSize)
        self.horizontalLayout_32.setSpacing(20)
        self.horizontalLayout_32.setObjectName("horizontalLayout_32")
        self.pushButton_119 = QtWidgets.QPushButton(self.widget_8)
        self.pushButton_119.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_119.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_119.setCheckable(True)
        self.pushButton_119.setAutoExclusive(True)
        self.pushButton_119.setObjectName("pushButton_119")
        self.horizontalLayout_32.addWidget(self.pushButton_119)
        self.pushButton_120 = QtWidgets.QPushButton(self.widget_8)
        self.pushButton_120.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_120.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_120.setCheckable(True)
        self.pushButton_120.setAutoExclusive(True)
        self.pushButton_120.setObjectName("pushButton_120")
        self.horizontalLayout_32.addWidget(self.pushButton_120)
        self.pushButton_121 = QtWidgets.QPushButton(self.widget_8)
        self.pushButton_121.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_121.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_121.setCheckable(True)
        self.pushButton_121.setAutoExclusive(True)
        self.pushButton_121.setObjectName("pushButton_121")
        self.horizontalLayout_32.addWidget(self.pushButton_121)
        self.pushButton_122 = QtWidgets.QPushButton(self.widget_8)
        self.pushButton_122.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_122.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_122.setCheckable(True)
        self.pushButton_122.setAutoExclusive(True)
        self.pushButton_122.setObjectName("pushButton_122")
        self.horizontalLayout_32.addWidget(self.pushButton_122)
        self.pushButton_123 = QtWidgets.QPushButton(self.widget_8)
        self.pushButton_123.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_123.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_123.setCheckable(True)
        self.pushButton_123.setAutoExclusive(True)
        self.pushButton_123.setObjectName("pushButton_123")
        self.horizontalLayout_32.addWidget(self.pushButton_123)
        self.horizontalLayout_31.addLayout(self.horizontalLayout_32)
        self.verticalLayout_11.addLayout(self.horizontalLayout_31)
        self.horizontalLayout_33 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_33.setObjectName("horizontalLayout_33")
        self.label_186 = QtWidgets.QLabel(self.widget_8)
        self.label_186.setMinimumSize(QtCore.QSize(60, 60))
        self.label_186.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.label_186.setFont(font)
        self.label_186.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.label_186.setObjectName("label_186")
        self.horizontalLayout_33.addWidget(self.label_186)
        spacerItem75 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_33.addItem(spacerItem75)
        self.label_187 = QtWidgets.QLabel(self.widget_8)
        self.label_187.setMinimumSize(QtCore.QSize(825, 50))
        self.label_187.setMaximumSize(QtCore.QSize(825, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.label_187.setFont(font)
        self.label_187.setObjectName("label_187")
        self.horizontalLayout_33.addWidget(self.label_187)
        spacerItem76 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_33.addItem(spacerItem76)
        self.horizontalLayout_34 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_34.setSizeConstraint(QtWidgets.QLayout.SetFixedSize)
        self.horizontalLayout_34.setSpacing(20)
        self.horizontalLayout_34.setObjectName("horizontalLayout_34")
        self.pushButton_124 = QtWidgets.QPushButton(self.widget_8)
        self.pushButton_124.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_124.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_124.setCheckable(True)
        self.pushButton_124.setAutoExclusive(True)
        self.pushButton_124.setObjectName("pushButton_124")
        self.horizontalLayout_34.addWidget(self.pushButton_124)
        self.pushButton_125 = QtWidgets.QPushButton(self.widget_8)
        self.pushButton_125.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_125.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_125.setCheckable(True)
        self.pushButton_125.setAutoExclusive(True)
        self.pushButton_125.setObjectName("pushButton_125")
        self.horizontalLayout_34.addWidget(self.pushButton_125)
        self.pushButton_126 = QtWidgets.QPushButton(self.widget_8)
        self.pushButton_126.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_126.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_126.setCheckable(True)
        self.pushButton_126.setAutoExclusive(True)
        self.pushButton_126.setObjectName("pushButton_126")
        self.horizontalLayout_34.addWidget(self.pushButton_126)
        self.pushButton_127 = QtWidgets.QPushButton(self.widget_8)
        self.pushButton_127.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_127.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_127.setCheckable(True)
        self.pushButton_127.setAutoExclusive(True)
        self.pushButton_127.setObjectName("pushButton_127")
        self.horizontalLayout_34.addWidget(self.pushButton_127)
        self.pushButton_128 = QtWidgets.QPushButton(self.widget_8)
        self.pushButton_128.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_128.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_128.setCheckable(True)
        self.pushButton_128.setAutoExclusive(True)
        self.pushButton_128.setObjectName("pushButton_128")
        self.horizontalLayout_34.addWidget(self.pushButton_128)
        self.horizontalLayout_33.addLayout(self.horizontalLayout_34)
        self.verticalLayout_11.addLayout(self.horizontalLayout_33)
        self.horizontalLayout_35 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_35.setObjectName("horizontalLayout_35")
        self.label_188 = QtWidgets.QLabel(self.widget_8)
        self.label_188.setMinimumSize(QtCore.QSize(60, 60))
        self.label_188.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.label_188.setFont(font)
        self.label_188.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.label_188.setObjectName("label_188")
        self.horizontalLayout_35.addWidget(self.label_188)
        spacerItem77 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_35.addItem(spacerItem77)
        self.label_189 = QtWidgets.QLabel(self.widget_8)
        self.label_189.setMinimumSize(QtCore.QSize(825, 50))
        self.label_189.setMaximumSize(QtCore.QSize(825, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.label_189.setFont(font)
        self.label_189.setObjectName("label_189")
        self.horizontalLayout_35.addWidget(self.label_189)
        spacerItem78 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_35.addItem(spacerItem78)
        self.horizontalLayout_36 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_36.setSizeConstraint(QtWidgets.QLayout.SetFixedSize)
        self.horizontalLayout_36.setSpacing(20)
        self.horizontalLayout_36.setObjectName("horizontalLayout_36")
        self.pushButton_129 = QtWidgets.QPushButton(self.widget_8)
        self.pushButton_129.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_129.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_129.setCheckable(True)
        self.pushButton_129.setAutoExclusive(True)
        self.pushButton_129.setObjectName("pushButton_129")
        self.horizontalLayout_36.addWidget(self.pushButton_129)
        self.pushButton_130 = QtWidgets.QPushButton(self.widget_8)
        self.pushButton_130.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_130.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_130.setCheckable(True)
        self.pushButton_130.setAutoExclusive(True)
        self.pushButton_130.setObjectName("pushButton_130")
        self.horizontalLayout_36.addWidget(self.pushButton_130)
        self.pushButton_131 = QtWidgets.QPushButton(self.widget_8)
        self.pushButton_131.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_131.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_131.setCheckable(True)
        self.pushButton_131.setAutoExclusive(True)
        self.pushButton_131.setObjectName("pushButton_131")
        self.horizontalLayout_36.addWidget(self.pushButton_131)
        self.pushButton_132 = QtWidgets.QPushButton(self.widget_8)
        self.pushButton_132.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_132.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_132.setCheckable(True)
        self.pushButton_132.setAutoExclusive(True)
        self.pushButton_132.setObjectName("pushButton_132")
        self.horizontalLayout_36.addWidget(self.pushButton_132)
        self.pushButton_133 = QtWidgets.QPushButton(self.widget_8)
        self.pushButton_133.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_133.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_133.setCheckable(True)
        self.pushButton_133.setAutoExclusive(True)
        self.pushButton_133.setObjectName("pushButton_133")
        self.horizontalLayout_36.addWidget(self.pushButton_133)
        self.horizontalLayout_35.addLayout(self.horizontalLayout_36)
        self.verticalLayout_11.addLayout(self.horizontalLayout_35)
        self.horizontalLayout_37 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_37.setObjectName("horizontalLayout_37")
        self.label_190 = QtWidgets.QLabel(self.widget_8)
        self.label_190.setMinimumSize(QtCore.QSize(60, 60))
        self.label_190.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.label_190.setFont(font)
        self.label_190.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.label_190.setObjectName("label_190")
        self.horizontalLayout_37.addWidget(self.label_190)
        spacerItem79 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_37.addItem(spacerItem79)
        self.label_191 = QtWidgets.QLabel(self.widget_8)
        self.label_191.setMinimumSize(QtCore.QSize(825, 50))
        self.label_191.setMaximumSize(QtCore.QSize(825, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.label_191.setFont(font)
        self.label_191.setObjectName("label_191")
        self.horizontalLayout_37.addWidget(self.label_191)
        spacerItem80 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_37.addItem(spacerItem80)
        self.horizontalLayout_47 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_47.setSizeConstraint(QtWidgets.QLayout.SetFixedSize)
        self.horizontalLayout_47.setSpacing(20)
        self.horizontalLayout_47.setObjectName("horizontalLayout_47")
        self.pushButton_134 = QtWidgets.QPushButton(self.widget_8)
        self.pushButton_134.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_134.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_134.setCheckable(True)
        self.pushButton_134.setAutoExclusive(True)
        self.pushButton_134.setObjectName("pushButton_134")
        self.horizontalLayout_47.addWidget(self.pushButton_134)
        self.pushButton_135 = QtWidgets.QPushButton(self.widget_8)
        self.pushButton_135.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_135.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_135.setCheckable(True)
        self.pushButton_135.setAutoExclusive(True)
        self.pushButton_135.setObjectName("pushButton_135")
        self.horizontalLayout_47.addWidget(self.pushButton_135)
        self.pushButton_136 = QtWidgets.QPushButton(self.widget_8)
        self.pushButton_136.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_136.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_136.setCheckable(True)
        self.pushButton_136.setAutoExclusive(True)
        self.pushButton_136.setObjectName("pushButton_136")
        self.horizontalLayout_47.addWidget(self.pushButton_136)
        self.pushButton_137 = QtWidgets.QPushButton(self.widget_8)
        self.pushButton_137.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_137.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_137.setCheckable(True)
        self.pushButton_137.setAutoExclusive(True)
        self.pushButton_137.setObjectName("pushButton_137")
        self.horizontalLayout_47.addWidget(self.pushButton_137)
        self.pushButton_138 = QtWidgets.QPushButton(self.widget_8)
        self.pushButton_138.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_138.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_138.setCheckable(True)
        self.pushButton_138.setAutoExclusive(True)
        self.pushButton_138.setObjectName("pushButton_138")
        self.horizontalLayout_47.addWidget(self.pushButton_138)
        self.horizontalLayout_37.addLayout(self.horizontalLayout_47)
        self.verticalLayout_11.addLayout(self.horizontalLayout_37)
        self.horizontalLayout_48 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_48.setObjectName("horizontalLayout_48")
        self.label_192 = QtWidgets.QLabel(self.widget_8)
        self.label_192.setMinimumSize(QtCore.QSize(60, 60))
        self.label_192.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.label_192.setFont(font)
        self.label_192.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.label_192.setObjectName("label_192")
        self.horizontalLayout_48.addWidget(self.label_192)
        spacerItem81 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_48.addItem(spacerItem81)
        self.label_193 = QtWidgets.QLabel(self.widget_8)
        self.label_193.setMinimumSize(QtCore.QSize(825, 50))
        self.label_193.setMaximumSize(QtCore.QSize(825, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.label_193.setFont(font)
        self.label_193.setObjectName("label_193")
        self.horizontalLayout_48.addWidget(self.label_193)
        spacerItem82 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_48.addItem(spacerItem82)
        self.horizontalLayout_49 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_49.setSizeConstraint(QtWidgets.QLayout.SetFixedSize)
        self.horizontalLayout_49.setSpacing(20)
        self.horizontalLayout_49.setObjectName("horizontalLayout_49")
        self.pushButton_139 = QtWidgets.QPushButton(self.widget_8)
        self.pushButton_139.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_139.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_139.setCheckable(True)
        self.pushButton_139.setAutoExclusive(True)
        self.pushButton_139.setObjectName("pushButton_139")
        self.horizontalLayout_49.addWidget(self.pushButton_139)
        self.pushButton_140 = QtWidgets.QPushButton(self.widget_8)
        self.pushButton_140.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_140.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_140.setCheckable(True)
        self.pushButton_140.setAutoExclusive(True)
        self.pushButton_140.setObjectName("pushButton_140")
        self.horizontalLayout_49.addWidget(self.pushButton_140)
        self.pushButton_141 = QtWidgets.QPushButton(self.widget_8)
        self.pushButton_141.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_141.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_141.setCheckable(True)
        self.pushButton_141.setAutoExclusive(True)
        self.pushButton_141.setObjectName("pushButton_141")
        self.horizontalLayout_49.addWidget(self.pushButton_141)
        self.pushButton_142 = QtWidgets.QPushButton(self.widget_8)
        self.pushButton_142.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_142.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_142.setCheckable(True)
        self.pushButton_142.setAutoExclusive(True)
        self.pushButton_142.setObjectName("pushButton_142")
        self.horizontalLayout_49.addWidget(self.pushButton_142)
        self.pushButton_143 = QtWidgets.QPushButton(self.widget_8)
        self.pushButton_143.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_143.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_143.setCheckable(True)
        self.pushButton_143.setAutoExclusive(True)
        self.pushButton_143.setObjectName("pushButton_143")
        self.horizontalLayout_49.addWidget(self.pushButton_143)
        self.horizontalLayout_48.addLayout(self.horizontalLayout_49)
        self.verticalLayout_11.addLayout(self.horizontalLayout_48)
        self.horizontalLayout_50 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_50.setObjectName("horizontalLayout_50")
        self.label_194 = QtWidgets.QLabel(self.widget_8)
        self.label_194.setMinimumSize(QtCore.QSize(60, 60))
        self.label_194.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.label_194.setFont(font)
        self.label_194.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.label_194.setObjectName("label_194")
        self.horizontalLayout_50.addWidget(self.label_194)
        spacerItem83 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_50.addItem(spacerItem83)
        self.label_195 = QtWidgets.QLabel(self.widget_8)
        self.label_195.setMinimumSize(QtCore.QSize(825, 50))
        self.label_195.setMaximumSize(QtCore.QSize(825, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.label_195.setFont(font)
        self.label_195.setObjectName("label_195")
        self.horizontalLayout_50.addWidget(self.label_195)
        spacerItem84 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_50.addItem(spacerItem84)
        self.horizontalLayout_53 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_53.setSizeConstraint(QtWidgets.QLayout.SetFixedSize)
        self.horizontalLayout_53.setSpacing(20)
        self.horizontalLayout_53.setObjectName("horizontalLayout_53")
        self.pushButton_144 = QtWidgets.QPushButton(self.widget_8)
        self.pushButton_144.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_144.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_144.setCheckable(True)
        self.pushButton_144.setAutoExclusive(True)
        self.pushButton_144.setObjectName("pushButton_144")
        self.horizontalLayout_53.addWidget(self.pushButton_144)
        self.pushButton_145 = QtWidgets.QPushButton(self.widget_8)
        self.pushButton_145.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_145.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_145.setCheckable(True)
        self.pushButton_145.setAutoExclusive(True)
        self.pushButton_145.setObjectName("pushButton_145")
        self.horizontalLayout_53.addWidget(self.pushButton_145)
        self.pushButton_146 = QtWidgets.QPushButton(self.widget_8)
        self.pushButton_146.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_146.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_146.setCheckable(True)
        self.pushButton_146.setAutoExclusive(True)
        self.pushButton_146.setObjectName("pushButton_146")
        self.horizontalLayout_53.addWidget(self.pushButton_146)
        self.pushButton_147 = QtWidgets.QPushButton(self.widget_8)
        self.pushButton_147.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_147.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_147.setCheckable(True)
        self.pushButton_147.setAutoExclusive(True)
        self.pushButton_147.setObjectName("pushButton_147")
        self.horizontalLayout_53.addWidget(self.pushButton_147)
        self.pushButton_148 = QtWidgets.QPushButton(self.widget_8)
        self.pushButton_148.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_148.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_148.setCheckable(True)
        self.pushButton_148.setAutoExclusive(True)
        self.pushButton_148.setObjectName("pushButton_148")
        self.horizontalLayout_53.addWidget(self.pushButton_148)
        self.horizontalLayout_50.addLayout(self.horizontalLayout_53)
        self.verticalLayout_11.addLayout(self.horizontalLayout_50)
        self.horizontalLayout_54 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_54.setObjectName("horizontalLayout_54")
        self.label_196 = QtWidgets.QLabel(self.widget_8)
        self.label_196.setMinimumSize(QtCore.QSize(60, 60))
        self.label_196.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.label_196.setFont(font)
        self.label_196.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.label_196.setObjectName("label_196")
        self.horizontalLayout_54.addWidget(self.label_196)
        spacerItem85 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_54.addItem(spacerItem85)
        self.label_197 = QtWidgets.QLabel(self.widget_8)
        self.label_197.setMinimumSize(QtCore.QSize(825, 50))
        self.label_197.setMaximumSize(QtCore.QSize(825, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        self.label_197.setFont(font)
        self.label_197.setObjectName("label_197")
        self.horizontalLayout_54.addWidget(self.label_197)
        spacerItem86 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_54.addItem(spacerItem86)
        self.horizontalLayout_55 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_55.setSizeConstraint(QtWidgets.QLayout.SetFixedSize)
        self.horizontalLayout_55.setSpacing(20)
        self.horizontalLayout_55.setObjectName("horizontalLayout_55")
        self.pushButton_149 = QtWidgets.QPushButton(self.widget_8)
        self.pushButton_149.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_149.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_149.setCheckable(True)
        self.pushButton_149.setAutoExclusive(True)
        self.pushButton_149.setObjectName("pushButton_149")
        self.horizontalLayout_55.addWidget(self.pushButton_149)
        self.pushButton_150 = QtWidgets.QPushButton(self.widget_8)
        self.pushButton_150.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_150.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_150.setCheckable(True)
        self.pushButton_150.setAutoExclusive(True)
        self.pushButton_150.setObjectName("pushButton_150")
        self.horizontalLayout_55.addWidget(self.pushButton_150)
        self.pushButton_151 = QtWidgets.QPushButton(self.widget_8)
        self.pushButton_151.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_151.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_151.setCheckable(True)
        self.pushButton_151.setAutoExclusive(True)
        self.pushButton_151.setObjectName("pushButton_151")
        self.horizontalLayout_55.addWidget(self.pushButton_151)
        self.pushButton_152 = QtWidgets.QPushButton(self.widget_8)
        self.pushButton_152.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_152.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_152.setCheckable(True)
        self.pushButton_152.setAutoExclusive(True)
        self.pushButton_152.setObjectName("pushButton_152")
        self.horizontalLayout_55.addWidget(self.pushButton_152)
        self.pushButton_153 = QtWidgets.QPushButton(self.widget_8)
        self.pushButton_153.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_153.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_153.setCheckable(True)
        self.pushButton_153.setAutoExclusive(True)
        self.pushButton_153.setObjectName("pushButton_153")
        self.horizontalLayout_55.addWidget(self.pushButton_153)
        self.horizontalLayout_54.addLayout(self.horizontalLayout_55)
        self.verticalLayout_11.addLayout(self.horizontalLayout_54)
        self.horizontalLayout_56 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_56.setObjectName("horizontalLayout_56")
        self.label_198 = QtWidgets.QLabel(self.widget_8)
        self.label_198.setMinimumSize(QtCore.QSize(60, 60))
        self.label_198.setMaximumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(14)
        self.label_198.setFont(font)
        self.label_198.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 10px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.label_198.setObjectName("label_198")
        self.horizontalLayout_56.addWidget(self.label_198)
        spacerItem87 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_56.addItem(spacerItem87)
        self.label_199 = QtWidgets.QLabel(self.widget_8)
        self.label_199.setMinimumSize(QtCore.QSize(825, 50))
        self.label_199.setMaximumSize(QtCore.QSize(825, 50))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(15)
        self.label_199.setFont(font)
        self.label_199.setObjectName("label_199")
        self.horizontalLayout_56.addWidget(self.label_199)
        spacerItem88 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_56.addItem(spacerItem88)
        self.horizontalLayout_64 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_64.setSizeConstraint(QtWidgets.QLayout.SetFixedSize)
        self.horizontalLayout_64.setSpacing(20)
        self.horizontalLayout_64.setObjectName("horizontalLayout_64")
        self.pushButton_154 = QtWidgets.QPushButton(self.widget_8)
        self.pushButton_154.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_154.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_154.setCheckable(True)
        self.pushButton_154.setAutoExclusive(True)
        self.pushButton_154.setObjectName("pushButton_154")
        self.horizontalLayout_64.addWidget(self.pushButton_154)
        self.pushButton_155 = QtWidgets.QPushButton(self.widget_8)
        self.pushButton_155.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_155.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_155.setCheckable(True)
        self.pushButton_155.setAutoExclusive(True)
        self.pushButton_155.setObjectName("pushButton_155")
        self.horizontalLayout_64.addWidget(self.pushButton_155)
        self.pushButton_156 = QtWidgets.QPushButton(self.widget_8)
        self.pushButton_156.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_156.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_156.setCheckable(True)
        self.pushButton_156.setAutoExclusive(True)
        self.pushButton_156.setObjectName("pushButton_156")
        self.horizontalLayout_64.addWidget(self.pushButton_156)
        self.pushButton_157 = QtWidgets.QPushButton(self.widget_8)
        self.pushButton_157.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_157.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_157.setCheckable(True)
        self.pushButton_157.setAutoExclusive(True)
        self.pushButton_157.setObjectName("pushButton_157")
        self.horizontalLayout_64.addWidget(self.pushButton_157)
        self.pushButton_158 = QtWidgets.QPushButton(self.widget_8)
        self.pushButton_158.setMinimumSize(QtCore.QSize(60, 55))
        self.pushButton_158.setMaximumSize(QtCore.QSize(60, 55))
        self.pushButton_158.setCheckable(True)
        self.pushButton_158.setAutoExclusive(True)
        self.pushButton_158.setObjectName("pushButton_158")
        self.horizontalLayout_64.addWidget(self.pushButton_158)
        self.horizontalLayout_56.addLayout(self.horizontalLayout_64)
        self.verticalLayout_11.addLayout(self.horizontalLayout_56)
        self.gridLayout_11.addWidget(self.widget_8, 0, 0, 1, 1)
        self.tabWidget_3.addTab(self.SE_Tab_Page_5, "")
        self.gridLayout_16.addWidget(self.tabWidget_3, 0, 0, 1, 1)
        self.stackedWidget.addWidget(self.Stress_Page)
        self.General_Page = QtWidgets.QWidget()
        self.General_Page.setObjectName("General_Page")
        self.gridLayout_14 = QtWidgets.QGridLayout(self.General_Page)
        self.gridLayout_14.setObjectName("gridLayout_14")
        self.widget_10 = QtWidgets.QWidget(self.General_Page)
        self.widget_10.setObjectName("widget_10")
        self.gridLayout_15 = QtWidgets.QGridLayout(self.widget_10)
        self.gridLayout_15.setContentsMargins(0, -1, -1, -1)
        self.gridLayout_15.setSpacing(100)
        self.gridLayout_15.setObjectName("gridLayout_15")
        self.gridLayout_13 = QtWidgets.QGridLayout()
        self.gridLayout_13.setObjectName("gridLayout_13")
        self.label_5 = QtWidgets.QLabel(self.widget_10)
        self.label_5.setMinimumSize(QtCore.QSize(240, 80))
        self.label_5.setMaximumSize(QtCore.QSize(240, 70))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.label_5.setFont(font)
        self.label_5.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 25px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.label_5.setObjectName("label_5")
        self.gridLayout_13.addWidget(self.label_5, 0, 0, 1, 1)
        self.lineEdit = QtWidgets.QLineEdit(self.widget_10)
        self.lineEdit.setMinimumSize(QtCore.QSize(400, 60))
        self.lineEdit.setMaximumSize(QtCore.QSize(400, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(-1)
        self.lineEdit.setFont(font)
        self.lineEdit.setStyleSheet("QLineEdit {\n"
"    /* General styling */\n"
"    background-color: white; /* Background color of the line edit */\n"
"    color: black; /* Text color */\n"
"    border: 3px solid rgb(31, 149, 239); /* Border color and width */\n"
"    border-radius: 25px; /* Rounded corners */\n"
"    padding: 5px; /* Space between the text and the border */\n"
"    font-size: 16px; /* Font size */\n"
"}\n"
"\n"
"QLineEdit:focus {\n"
"    /* Styling when the line edit has focus */\n"
"    border-color: rgb(41, 159, 249); /* Change border color */\n"
"}\n"
"\n"
"QLineEdit:disabled {\n"
"    /* Styling when the line edit is disabled */\n"
"    background-color: rgb(220, 220, 220); /* Lighter background */\n"
"    color: rgb(150, 150, 150); /* Lighter text color */\n"
"}\n"
"")
        self.lineEdit.setObjectName("lineEdit")
        self.gridLayout_13.addWidget(self.lineEdit, 0, 1, 1, 1)
        self.label_6 = QtWidgets.QLabel(self.widget_10)
        self.label_6.setMinimumSize(QtCore.QSize(240, 60))
        self.label_6.setMaximumSize(QtCore.QSize(240, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.label_6.setFont(font)
        self.label_6.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 25px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.label_6.setObjectName("label_6")
        self.gridLayout_13.addWidget(self.label_6, 1, 0, 1, 1)
        self.lineEdit_2 = QtWidgets.QLineEdit(self.widget_10)
        self.lineEdit_2.setMinimumSize(QtCore.QSize(400, 60))
        self.lineEdit_2.setMaximumSize(QtCore.QSize(400, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(-1)
        self.lineEdit_2.setFont(font)
        self.lineEdit_2.setStyleSheet("QLineEdit {\n"
"    /* General styling */\n"
"    background-color: white; /* Background color of the line edit */\n"
"    color: black; /* Text color */\n"
"    border: 3px solid rgb(31, 149, 239); /* Border color and width */\n"
"    border-radius: 25px; /* Rounded corners */\n"
"    padding: 5px; /* Space between the text and the border */\n"
"    font-size: 16px; /* Font size */\n"
"}\n"
"\n"
"QLineEdit:focus {\n"
"    /* Styling when the line edit has focus */\n"
"    border-color: rgb(41, 159, 249); /* Change border color */\n"
"}\n"
"\n"
"QLineEdit:disabled {\n"
"    /* Styling when the line edit is disabled */\n"
"    background-color: rgb(220, 220, 220); /* Lighter background */\n"
"    color: rgb(150, 150, 150); /* Lighter text color */\n"
"}\n"
"")
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.gridLayout_13.addWidget(self.lineEdit_2, 1, 1, 1, 1)
        self.label_7 = QtWidgets.QLabel(self.widget_10)
        self.label_7.setMinimumSize(QtCore.QSize(240, 60))
        self.label_7.setMaximumSize(QtCore.QSize(240, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.label_7.setFont(font)
        self.label_7.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 25px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.label_7.setObjectName("label_7")
        self.gridLayout_13.addWidget(self.label_7, 2, 0, 1, 1)
        self.widget_9 = QtWidgets.QWidget(self.widget_10)
        self.widget_9.setMinimumSize(QtCore.QSize(400, 75))
        self.widget_9.setMaximumSize(QtCore.QSize(400, 75))
        self.widget_9.setStyleSheet("QRadioButton {\n"
"    /* General styling for the radio button */\n"
"    color: black;\n"
"; /* Text color */\n"
"    font-size: 16px; /* Font size */\n"
"    spacing: 5px; /* Space between the indicator and the text */\n"
"}\n"
"\n"
"QRadioButton::indicator {\n"
"    /* Styling for the indicator (the circular part) */\n"
"    width: 20px; /* Width of the indicator */\n"
"    height: 20px; /* Height of the indicator */\n"
"}\n"
"\n"
"QRadioButton::indicator::unchecked {\n"
"    /* Styling for the indicator when the radio button is unchecked */\n"
"    background-color: white; /* Background color */\n"
"    border: 2px solid rgb(31, 149, 239); /* Border color and width */\n"
"    border-radius: 10px; /* Makes the indicator circular */\n"
"}\n"
"\n"
"QRadioButton::indicator::checked {\n"
"    /* Styling for the indicator when the radio button is checked */\n"
"    background-color: rgb(31, 149, 239); /* Background color */\n"
"    border: 2px solid rgb(31, 149, 239); /* Border color and width */\n"
"    border-radius: 10px; /* Makes the indicator circular */\n"
"}\n"
"\n"
"QWidget {\n"
"    background-color: rgb(245, 250, 254); /* Set the background color */\n"
"\n"
"\n"
"\n"
"    border: 2px solid rgb(0, 0, 0); /* Set the border color and width */\n"
"    border-radius: 20px; /* Set the border radius for rounded corners */\n"
"    padding: 10px; /* Set the padding inside the widget */\n"
"    margin: 5px; /* Set the margin outside the widget */\n"
"}\n"
"\n"
"")
        self.widget_9.setObjectName("widget_9")
        self.gridLayout_12 = QtWidgets.QGridLayout(self.widget_9)
        self.gridLayout_12.setObjectName("gridLayout_12")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.radioButton = QtWidgets.QRadioButton(self.widget_9)
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(-1)
        font.setBold(True)
        font.setWeight(75)
        self.radioButton.setFont(font)
        self.radioButton.setStyleSheet("QRadioButton {\n"
"    /* General styling for the radio button */\n"
"    color: black;\n"
"; /* Text color */\n"
"    font-size: 16px; /* Font size */\n"
"    spacing: 5px; /* Space between the indicator and the text */\n"
"}\n"
"\n"
"QRadioButton::indicator {\n"
"    /* Styling for the indicator (the circular part) */\n"
"    width: 20px; /* Width of the indicator */\n"
"    height: 20px; /* Height of the indicator */\n"
"}\n"
"\n"
"QRadioButton::indicator::unchecked {\n"
"    /* Styling for the indicator when the radio button is unchecked */\n"
"    background-color: white; /* Background color */\n"
"    border: 2px solid rgb(31, 149, 239); /* Border color and width */\n"
"    border-radius: 10px; /* Makes the indicator circular */\n"
"}\n"
"\n"
"QRadioButton::indicator::checked {\n"
"    /* Styling for the indicator when the radio button is checked */\n"
"    background-color: rgb(31, 149, 239); /* Background color */\n"
"    border: 2px solid rgb(31, 149, 239); /* Border color and width */\n"
"    border-radius: 10px; /* Makes the indicator circular */\n"
"}\n"
"\n"
"QWidget {\n"
"    background-color: rgb(245, 250, 254);; /* Set the background color */\n"
"    border: 2px solid rgb(0, 0, 0); /* Set the border color and width */\n"
"    border-radius: 10px; /* Set the border radius for rounded corners */\n"
"    padding: 10px; /* Set the padding inside the widget */\n"
"    margin: 5px; /* Set the margin outside the widget */\n"
"}\n"
"\n"
"")
        self.radioButton.setObjectName("radioButton")
        self.horizontalLayout_4.addWidget(self.radioButton)
        self.radioButton_2 = QtWidgets.QRadioButton(self.widget_9)
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(-1)
        font.setBold(True)
        font.setWeight(75)
        self.radioButton_2.setFont(font)
        self.radioButton_2.setStyleSheet("QRadioButton {\n"
"    /* General styling for the radio button */\n"
"    color: black;\n"
"; /* Text color */\n"
"    font-size: 16px; /* Font size */\n"
"    spacing: 5px; /* Space between the indicator and the text */\n"
"}\n"
"\n"
"QRadioButton::indicator {\n"
"    /* Styling for the indicator (the circular part) */\n"
"    width: 20px; /* Width of the indicator */\n"
"    height: 20px; /* Height of the indicator */\n"
"}\n"
"\n"
"QRadioButton::indicator::unchecked {\n"
"    /* Styling for the indicator when the radio button is unchecked */\n"
"    background-color: white; /* Background color */\n"
"    border: 2px solid rgb(31, 149, 239); /* Border color and width */\n"
"    border-radius: 10px; /* Makes the indicator circular */\n"
"}\n"
"\n"
"QRadioButton::indicator::checked {\n"
"    /* Styling for the indicator when the radio button is checked */\n"
"    background-color: rgb(31, 149, 239); /* Background color */\n"
"    border: 2px solid rgb(31, 149, 239); /* Border color and width */\n"
"    border-radius: 10px; /* Makes the indicator circular */\n"
"}\n"
"\n"
"QWidget {\n"
"   background-color: rgb(245, 250, 254); /* Set the background color */\n"
"    border: 2px solid rgb(0, 0, 0); /* Set the border color and width */\n"
"    border-radius: 10px; /* Set the border radius for rounded corners */\n"
"    padding: 10px; /* Set the padding inside the widget */\n"
"    margin: 5px; /* Set the margin outside the widget */\n"
"}\n"
"\n"
"")
        self.radioButton_2.setObjectName("radioButton_2")
        self.horizontalLayout_4.addWidget(self.radioButton_2)
        self.gridLayout_12.addLayout(self.horizontalLayout_4, 0, 0, 1, 1)
        self.gridLayout_13.addWidget(self.widget_9, 2, 1, 1, 1)
        self.label_33 = QtWidgets.QLabel(self.widget_10)
        self.label_33.setMinimumSize(QtCore.QSize(240, 60))
        self.label_33.setMaximumSize(QtCore.QSize(240, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.label_33.setFont(font)
        self.label_33.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 25px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.label_33.setObjectName("label_33")
        self.gridLayout_13.addWidget(self.label_33, 3, 0, 1, 1)
        self.lineEdit_3 = QtWidgets.QLineEdit(self.widget_10)
        self.lineEdit_3.setMinimumSize(QtCore.QSize(400, 60))
        self.lineEdit_3.setMaximumSize(QtCore.QSize(400, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(-1)
        self.lineEdit_3.setFont(font)
        self.lineEdit_3.setStyleSheet("QLineEdit {\n"
"    /* General styling */\n"
"    background-color: white; /* Background color of the line edit */\n"
"    color: black; /* Text color */\n"
"    border: 3px solid rgb(31, 149, 239); /* Border color and width */\n"
"    border-radius: 25px; /* Rounded corners */\n"
"    padding: 5px; /* Space between the text and the border */\n"
"    font-size: 16px; /* Font size */\n"
"}\n"
"\n"
"QLineEdit:focus {\n"
"    /* Styling when the line edit has focus */\n"
"    border-color: rgb(41, 159, 249); /* Change border color */\n"
"}\n"
"\n"
"QLineEdit:disabled {\n"
"    /* Styling when the line edit is disabled */\n"
"    background-color: rgb(220, 220, 220); /* Lighter background */\n"
"    color: rgb(150, 150, 150); /* Lighter text color */\n"
"}\n"
"")
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.gridLayout_13.addWidget(self.lineEdit_3, 3, 1, 1, 1)
        self.label_34 = QtWidgets.QLabel(self.widget_10)
        self.label_34.setMinimumSize(QtCore.QSize(240, 60))
        self.label_34.setMaximumSize(QtCore.QSize(240, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.label_34.setFont(font)
        self.label_34.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 25px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.label_34.setObjectName("label_34")
        self.gridLayout_13.addWidget(self.label_34, 4, 0, 1, 1)
        self.dateEdit = QtWidgets.QDateEdit(self.widget_10)
        self.dateEdit.setMinimumSize(QtCore.QSize(400, 60))
        self.dateEdit.setMaximumSize(QtCore.QSize(400, 60))
        self.dateEdit.setStyleSheet("QDateEdit {\n"
"    background-color: white;\n"
"    color: black;\n"
"    border: 2px solid black;\n"
"    border-radius: 15px;\n"
"    padding-left: 20px; /* Adjust left padding to center text */\n"
"    margin: 2px;\n"
"}\n"
"\n"
"QDateEdit::up-button, QDateEdit::down-button {\n"
"    subcontrol-origin: border;\n"
"    width: 15px;\n"
"    border-left: 1px solid black;\n"
"}\n"
"\n"
"QDateEdit::up-button {\n"
"    subcontrol-position: top right;\n"
"    border-bottom: 1px solid black; /* Add border between the up-button and down-button */\n"
"}\n"
"\n"
"QDateEdit::down-button {\n"
"    subcontrol-position: bottom right;\n"
"}\n"
"\n"
"QDateEdit::up-arrow, QDateEdit::down-arrow {\n"
"    width: 7px;\n"
"    height: 7px;\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"QDateEdit::up-button:pressed, QDateEdit::down-button:pressed {\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QDateEdit::up-button:hover, QDateEdit::down-button:hover {\n"
"    background-color: #e0e0e0;\n"
"}\n"
"")
        self.dateEdit.setObjectName("dateEdit")
        self.gridLayout_13.addWidget(self.dateEdit, 4, 1, 1, 1)
        self.gridLayout_15.addLayout(self.gridLayout_13, 0, 0, 1, 1)
        self.gridLayout_14.addWidget(self.widget_10, 0, 0, 1, 1)
        self.stackedWidget.addWidget(self.General_Page)
        self.page = QtWidgets.QWidget()
        self.page.setObjectName("page")
        self.gridLayout_17 = QtWidgets.QGridLayout(self.page)
        self.gridLayout_17.setObjectName("gridLayout_17")
        self.widget_11 = QtWidgets.QWidget(self.page)
        self.widget_11.setObjectName("widget_11")
        self.gridLayout_18 = QtWidgets.QGridLayout(self.widget_11)
        self.gridLayout_18.setObjectName("gridLayout_18")
        self.label_14 = QtWidgets.QLabel(self.widget_11)
        self.label_14.setMinimumSize(QtCore.QSize(240, 80))
        self.label_14.setMaximumSize(QtCore.QSize(240, 70))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.label_14.setFont(font)
        self.label_14.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 25px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.label_14.setObjectName("label_14")
        self.gridLayout_18.addWidget(self.label_14, 0, 0, 1, 1)
        self.lineEdit_7 = QtWidgets.QLineEdit(self.widget_11)
        self.lineEdit_7.setMinimumSize(QtCore.QSize(400, 60))
        self.lineEdit_7.setMaximumSize(QtCore.QSize(400, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(-1)
        self.lineEdit_7.setFont(font)
        self.lineEdit_7.setStyleSheet("QLineEdit {\n"
"    /* General styling */\n"
"    background-color: white; /* Background color of the line edit */\n"
"    color: black; /* Text color */\n"
"    border: 3px solid rgb(31, 149, 239); /* Border color and width */\n"
"    border-radius: 25px; /* Rounded corners */\n"
"    padding: 5px; /* Space between the text and the border */\n"
"    font-size: 16px; /* Font size */\n"
"}\n"
"\n"
"QLineEdit:focus {\n"
"    /* Styling when the line edit has focus */\n"
"    border-color: rgb(41, 159, 249); /* Change border color */\n"
"}\n"
"\n"
"QLineEdit:disabled {\n"
"    /* Styling when the line edit is disabled */\n"
"    background-color: rgb(220, 220, 220); /* Lighter background */\n"
"    color: rgb(150, 150, 150); /* Lighter text color */\n"
"}\n"
"")
        self.lineEdit_7.setObjectName("lineEdit_7")
        self.gridLayout_18.addWidget(self.lineEdit_7, 0, 1, 1, 1)
        self.label_13 = QtWidgets.QLabel(self.widget_11)
        self.label_13.setMinimumSize(QtCore.QSize(240, 60))
        self.label_13.setMaximumSize(QtCore.QSize(240, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.label_13.setFont(font)
        self.label_13.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 25px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.label_13.setObjectName("label_13")
        self.gridLayout_18.addWidget(self.label_13, 1, 0, 1, 1)
        self.spinBox_49 = QtWidgets.QSpinBox(self.widget_11)
        self.spinBox_49.setMinimumSize(QtCore.QSize(90, 60))
        self.spinBox_49.setMaximumSize(QtCore.QSize(90, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(20)
        self.spinBox_49.setFont(font)
        self.spinBox_49.setStyleSheet("QSpinBox {\n"
"    background-color: white;\n"
"    color: black;\n"
"    border: 2px solid black;\n"
"    border-radius: 5px;\n"
"\n"
"    padding-left: 20px; /* Adjust left padding to center text */\n"
"  \n"
"    margin: 2px;\n"
"}\n"
"\n"
"QSpinBox::up-button {\n"
"    /* Styling for the up-button */\n"
"    subcontrol-origin: border; /* Position within the border */\n"
"    subcontrol-position: top right; /* Position at the top right */\n"
"    width: 15px; /* Width of the up-button */\n"
"    border-left: 1px solid black; /* Border between the up-button and the spin box */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    /* Styling for the down-button */\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"    border-left: 1px solid black;\n"
"}\n"
"\n"
"QSpinBox::up-arrow {\n"
"    /* Arrow styling within the up-button */\n"
"    width: 7px; /* Width of the arrow */\n"
"    height: 7px; /* Height of the arrow */\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"QSpinBox::down-arrow {\n"
"    /* Arrow styling within the down-button */\n"
"    width: 7px;\n"
"    height: 7px;\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: top right;\n"
"    width: 15px;\n"
"    border-bottom: 1px solid black; /* Add border between the up-button and down-button */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button:pressed {\n"
"    /* Styling for the up-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::down-button:pressed {\n"
"    /* Styling for the down-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::up-button:hover, QSpinBox::down-button:hover {\n"
"    /* Styling for the buttons when hovered */\n"
"    background-color: #e0e0e0;\n"
"}")
        self.spinBox_49.setButtonSymbols(QtWidgets.QAbstractSpinBox.UpDownArrows)
        self.spinBox_49.setMaximum(20)
        self.spinBox_49.setObjectName("spinBox_49")
        self.gridLayout_18.addWidget(self.spinBox_49, 1, 1, 1, 1)
        self.label_12 = QtWidgets.QLabel(self.widget_11)
        self.label_12.setMinimumSize(QtCore.QSize(240, 60))
        self.label_12.setMaximumSize(QtCore.QSize(240, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.label_12.setFont(font)
        self.label_12.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 25px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.label_12.setObjectName("label_12")
        self.gridLayout_18.addWidget(self.label_12, 2, 0, 1, 1)
        self.lineEdit_6 = QtWidgets.QLineEdit(self.widget_11)
        self.lineEdit_6.setMinimumSize(QtCore.QSize(200, 60))
        self.lineEdit_6.setMaximumSize(QtCore.QSize(200, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(-1)
        self.lineEdit_6.setFont(font)
        self.lineEdit_6.setStyleSheet("QLineEdit {\n"
"    /* General styling */\n"
"    background-color: white; /* Background color of the line edit */\n"
"    color: black; /* Text color */\n"
"    border: 3px solid rgb(31, 149, 239); /* Border color and width */\n"
"    border-radius: 25px; /* Rounded corners */\n"
"    padding: 5px; /* Space between the text and the border */\n"
"    font-size: 16px; /* Font size */\n"
"}\n"
"\n"
"QLineEdit:focus {\n"
"    /* Styling when the line edit has focus */\n"
"    border-color: rgb(41, 159, 249); /* Change border color */\n"
"}\n"
"\n"
"QLineEdit:disabled {\n"
"    /* Styling when the line edit is disabled */\n"
"    background-color: rgb(220, 220, 220); /* Lighter background */\n"
"    color: rgb(150, 150, 150); /* Lighter text color */\n"
"}\n"
"")
        self.lineEdit_6.setObjectName("lineEdit_6")
        self.gridLayout_18.addWidget(self.lineEdit_6, 2, 1, 1, 1)
        self.label_35 = QtWidgets.QLabel(self.widget_11)
        self.label_35.setMinimumSize(QtCore.QSize(240, 60))
        self.label_35.setMaximumSize(QtCore.QSize(240, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.label_35.setFont(font)
        self.label_35.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 25px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.label_35.setObjectName("label_35")
        self.gridLayout_18.addWidget(self.label_35, 3, 0, 1, 1)
        self.lineEdit_5 = QtWidgets.QLineEdit(self.widget_11)
        self.lineEdit_5.setMinimumSize(QtCore.QSize(400, 60))
        self.lineEdit_5.setMaximumSize(QtCore.QSize(400, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(-1)
        self.lineEdit_5.setFont(font)
        self.lineEdit_5.setStyleSheet("QLineEdit {\n"
"    /* General styling */\n"
"    background-color: white; /* Background color of the line edit */\n"
"    color: black; /* Text color */\n"
"    border: 3px solid rgb(31, 149, 239); /* Border color and width */\n"
"    border-radius: 25px; /* Rounded corners */\n"
"    padding: 5px; /* Space between the text and the border */\n"
"    font-size: 16px; /* Font size */\n"
"}\n"
"\n"
"QLineEdit:focus {\n"
"    /* Styling when the line edit has focus */\n"
"    border-color: rgb(41, 159, 249); /* Change border color */\n"
"}\n"
"\n"
"QLineEdit:disabled {\n"
"    /* Styling when the line edit is disabled */\n"
"    background-color: rgb(220, 220, 220); /* Lighter background */\n"
"    color: rgb(150, 150, 150); /* Lighter text color */\n"
"}\n"
"")
        self.lineEdit_5.setObjectName("lineEdit_5")
        self.gridLayout_18.addWidget(self.lineEdit_5, 3, 1, 1, 1)
        self.label_36 = QtWidgets.QLabel(self.widget_11)
        self.label_36.setMinimumSize(QtCore.QSize(240, 60))
        self.label_36.setMaximumSize(QtCore.QSize(240, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.label_36.setFont(font)
        self.label_36.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 25px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.label_36.setObjectName("label_36")
        self.gridLayout_18.addWidget(self.label_36, 4, 0, 1, 1)
        self.lineEdit_4 = QtWidgets.QLineEdit(self.widget_11)
        self.lineEdit_4.setMinimumSize(QtCore.QSize(200, 60))
        self.lineEdit_4.setMaximumSize(QtCore.QSize(200, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(-1)
        self.lineEdit_4.setFont(font)
        self.lineEdit_4.setStyleSheet("QLineEdit {\n"
"    /* General styling */\n"
"    background-color: white; /* Background color of the line edit */\n"
"    color: black; /* Text color */\n"
"    border: 3px solid rgb(31, 149, 239); /* Border color and width */\n"
"    border-radius: 25px; /* Rounded corners */\n"
"    padding: 5px; /* Space between the text and the border */\n"
"    font-size: 16px; /* Font size */\n"
"}\n"
"\n"
"QLineEdit:focus {\n"
"    /* Styling when the line edit has focus */\n"
"    border-color: rgb(41, 159, 249); /* Change border color */\n"
"}\n"
"\n"
"QLineEdit:disabled {\n"
"    /* Styling when the line edit is disabled */\n"
"    background-color: rgb(220, 220, 220); /* Lighter background */\n"
"    color: rgb(150, 150, 150); /* Lighter text color */\n"
"}\n"
"")
        self.lineEdit_4.setObjectName("lineEdit_4")
        self.gridLayout_18.addWidget(self.lineEdit_4, 4, 1, 1, 1)
        self.label_15 = QtWidgets.QLabel(self.widget_11)
        self.label_15.setMinimumSize(QtCore.QSize(240, 80))
        self.label_15.setMaximumSize(QtCore.QSize(240, 70))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.label_15.setFont(font)
        self.label_15.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 25px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.label_15.setObjectName("label_15")
        self.gridLayout_18.addWidget(self.label_15, 5, 0, 1, 1)
        self.spinBox_50 = QtWidgets.QSpinBox(self.widget_11)
        self.spinBox_50.setMinimumSize(QtCore.QSize(90, 60))
        self.spinBox_50.setMaximumSize(QtCore.QSize(90, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(20)
        self.spinBox_50.setFont(font)
        self.spinBox_50.setStyleSheet("QSpinBox {\n"
"    background-color: white;\n"
"    color: black;\n"
"    border: 2px solid black;\n"
"    border-radius: 5px;\n"
"\n"
"    padding-left: 20px; /* Adjust left padding to center text */\n"
"  \n"
"    margin: 2px;\n"
"}\n"
"\n"
"QSpinBox::up-button {\n"
"    /* Styling for the up-button */\n"
"    subcontrol-origin: border; /* Position within the border */\n"
"    subcontrol-position: top right; /* Position at the top right */\n"
"    width: 15px; /* Width of the up-button */\n"
"    border-left: 1px solid black; /* Border between the up-button and the spin box */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    /* Styling for the down-button */\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"    border-left: 1px solid black;\n"
"}\n"
"\n"
"QSpinBox::up-arrow {\n"
"    /* Arrow styling within the up-button */\n"
"    width: 7px; /* Width of the arrow */\n"
"    height: 7px; /* Height of the arrow */\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"QSpinBox::down-arrow {\n"
"    /* Arrow styling within the down-button */\n"
"    width: 7px;\n"
"    height: 7px;\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: top right;\n"
"    width: 15px;\n"
"    border-bottom: 1px solid black; /* Add border between the up-button and down-button */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button:pressed {\n"
"    /* Styling for the up-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::down-button:pressed {\n"
"    /* Styling for the down-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::up-button:hover, QSpinBox::down-button:hover {\n"
"    /* Styling for the buttons when hovered */\n"
"    background-color: #e0e0e0;\n"
"}")
        self.spinBox_50.setButtonSymbols(QtWidgets.QAbstractSpinBox.UpDownArrows)
        self.spinBox_50.setMaximum(20)
        self.spinBox_50.setObjectName("spinBox_50")
        self.gridLayout_18.addWidget(self.spinBox_50, 5, 1, 1, 1)
        self.label_16 = QtWidgets.QLabel(self.widget_11)
        self.label_16.setMinimumSize(QtCore.QSize(240, 80))
        self.label_16.setMaximumSize(QtCore.QSize(240, 70))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(17)
        font.setBold(True)
        font.setWeight(75)
        self.label_16.setFont(font)
        self.label_16.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 25px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.label_16.setObjectName("label_16")
        self.gridLayout_18.addWidget(self.label_16, 6, 0, 1, 1)
        self.spinBox_51 = QtWidgets.QSpinBox(self.widget_11)
        self.spinBox_51.setMinimumSize(QtCore.QSize(90, 60))
        self.spinBox_51.setMaximumSize(QtCore.QSize(90, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(20)
        self.spinBox_51.setFont(font)
        self.spinBox_51.setStyleSheet("QSpinBox {\n"
"    background-color: white;\n"
"    color: black;\n"
"    border: 2px solid black;\n"
"    border-radius: 5px;\n"
"\n"
"    padding-left: 20px; /* Adjust left padding to center text */\n"
"  \n"
"    margin: 2px;\n"
"}\n"
"\n"
"QSpinBox::up-button {\n"
"    /* Styling for the up-button */\n"
"    subcontrol-origin: border; /* Position within the border */\n"
"    subcontrol-position: top right; /* Position at the top right */\n"
"    width: 15px; /* Width of the up-button */\n"
"    border-left: 1px solid black; /* Border between the up-button and the spin box */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    /* Styling for the down-button */\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"    border-left: 1px solid black;\n"
"}\n"
"\n"
"QSpinBox::up-arrow {\n"
"    /* Arrow styling within the up-button */\n"
"    width: 7px; /* Width of the arrow */\n"
"    height: 7px; /* Height of the arrow */\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"QSpinBox::down-arrow {\n"
"    /* Arrow styling within the down-button */\n"
"    width: 7px;\n"
"    height: 7px;\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: top right;\n"
"    width: 15px;\n"
"    border-bottom: 1px solid black; /* Add border between the up-button and down-button */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button:pressed {\n"
"    /* Styling for the up-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::down-button:pressed {\n"
"    /* Styling for the down-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::up-button:hover, QSpinBox::down-button:hover {\n"
"    /* Styling for the buttons when hovered */\n"
"    background-color: #e0e0e0;\n"
"}")
        self.spinBox_51.setButtonSymbols(QtWidgets.QAbstractSpinBox.UpDownArrows)
        self.spinBox_51.setMaximum(20)
        self.spinBox_51.setObjectName("spinBox_51")
        self.gridLayout_18.addWidget(self.spinBox_51, 6, 1, 1, 1)
        self.label_17 = QtWidgets.QLabel(self.widget_11)
        self.label_17.setMinimumSize(QtCore.QSize(240, 80))
        self.label_17.setMaximumSize(QtCore.QSize(240, 70))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.label_17.setFont(font)
        self.label_17.setStyleSheet("QLabel {\n"
"     color: rgb(31, 149, 239);\n"
"    qproperty-alignment: AlignCenter;\n"
"   \n"
"    border: 3px solid rgb(31, 149, 239); /* This adds a 1px solid white border around the QLabel */\n"
"    border-radius: 25px; /* Optional: if you want rounded corners */\n"
"}\n"
"")
        self.label_17.setObjectName("label_17")
        self.gridLayout_18.addWidget(self.label_17, 7, 0, 1, 1)
        self.spinBox_54 = QtWidgets.QSpinBox(self.widget_11)
        self.spinBox_54.setMinimumSize(QtCore.QSize(90, 60))
        self.spinBox_54.setMaximumSize(QtCore.QSize(90, 60))
        font = QtGui.QFont()
        font.setFamily("Roboto Bk")
        font.setPointSize(20)
        self.spinBox_54.setFont(font)
        self.spinBox_54.setStyleSheet("QSpinBox {\n"
"    background-color: white;\n"
"    color: black;\n"
"    border: 2px solid black;\n"
"    border-radius: 5px;\n"
"\n"
"    padding-left: 20px; /* Adjust left padding to center text */\n"
"  \n"
"    margin: 2px;\n"
"}\n"
"\n"
"QSpinBox::up-button {\n"
"    /* Styling for the up-button */\n"
"    subcontrol-origin: border; /* Position within the border */\n"
"    subcontrol-position: top right; /* Position at the top right */\n"
"    width: 15px; /* Width of the up-button */\n"
"    border-left: 1px solid black; /* Border between the up-button and the spin box */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    /* Styling for the down-button */\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"    border-left: 1px solid black;\n"
"}\n"
"\n"
"QSpinBox::up-arrow {\n"
"    /* Arrow styling within the up-button */\n"
"    width: 7px; /* Width of the arrow */\n"
"    height: 7px; /* Height of the arrow */\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"QSpinBox::down-arrow {\n"
"    /* Arrow styling within the down-button */\n"
"    width: 7px;\n"
"    height: 7px;\n"
"    image: url(:/icon/icon/menu-4-32.ico);\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: top right;\n"
"    width: 15px;\n"
"    border-bottom: 1px solid black; /* Add border between the up-button and down-button */\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    subcontrol-origin: border;\n"
"    subcontrol-position: bottom right;\n"
"    width: 15px;\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button:pressed {\n"
"    /* Styling for the up-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::down-button:pressed {\n"
"    /* Styling for the down-button when pressed */\n"
"    background-color: lightgray;\n"
"}\n"
"\n"
"QSpinBox::up-button:hover, QSpinBox::down-button:hover {\n"
"    /* Styling for the buttons when hovered */\n"
"    background-color: #e0e0e0;\n"
"}")
        self.spinBox_54.setButtonSymbols(QtWidgets.QAbstractSpinBox.UpDownArrows)
        self.spinBox_54.setMaximum(20)
        self.spinBox_54.setObjectName("spinBox_54")
        self.gridLayout_18.addWidget(self.spinBox_54, 7, 1, 1, 1)
        self.gridLayout_17.addWidget(self.widget_11, 0, 0, 1, 1)
        self.stackedWidget.addWidget(self.page)
        self.verticalLayout_5.addWidget(self.stackedWidget)
        self.verticalLayout_3.addWidget(self.widget_3)
        self.gridLayout_2.addWidget(self.MainWindow_2, 0, 2, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 2059, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        self.stackedWidget.setCurrentIndex(4)
        self.tabWidget.setCurrentIndex(1)
        self.tabWidget_2.setCurrentIndex(1)
        self.tabWidget_3.setCurrentIndex(0)
        self.pushButton_15.toggled['bool'].connect(self.widget.setHidden) # type: ignore
        self.pushButton_15.toggled['bool'].connect(self.widget_2.setVisible) # type: ignore
        self.pushButton.toggled['bool'].connect(self.pushButton_8.setChecked) # type: ignore
        self.pushButton_2.toggled['bool'].connect(self.pushButton_11.setChecked) # type: ignore
        self.pushButton_8.toggled['bool'].connect(self.pushButton.setChecked) # type: ignore
        self.pushButton_11.toggled['bool'].connect(self.pushButton_2.setChecked) # type: ignore
        self.pushButton_3.toggled['bool'].connect(self.pushButton_7.setChecked) # type: ignore
        self.pushButton_7.toggled['bool'].connect(self.pushButton_3.setChecked) # type: ignore
        self.pushButton_4.toggled['bool'].connect(self.pushButton_10.setChecked) # type: ignore
        self.pushButton_10.toggled['bool'].connect(self.pushButton_4.setChecked) # type: ignore
        self.pushButton_5.toggled['bool'].connect(self.pushButton_9.setChecked) # type: ignore
        self.pushButton_9.toggled['bool'].connect(self.pushButton_5.setChecked) # type: ignore
        self.pushButton_13.toggled['bool'].connect(self.pushButton_14.setChecked) # type: ignore
        self.pushButton_14.toggled['bool'].connect(self.pushButton_13.setChecked) # type: ignore
        self.pushButton_6.toggled['bool'].connect(self.pushButton_12.setChecked) # type: ignore
        self.pushButton_12.toggled['bool'].connect(self.pushButton_6.setChecked) # type: ignore
        self.horizontalSlider_46.sliderMoved['int'].connect(self.spinBox_48.setValue) # type: ignore
        self.spinBox_48.valueChanged['int'].connect(self.horizontalSlider_46.setValue) # type: ignore
        self.horizontalSlider_46.valueChanged['int'].connect(self.spinBox_48.setValue) # type: ignore
        self.horizontalSlider_50.sliderMoved['int'].connect(self.spinBox_52.setValue) # type: ignore
        self.spinBox_52.valueChanged['int'].connect(self.horizontalSlider_50.setValue) # type: ignore
        self.horizontalSlider_50.valueChanged['int'].connect(self.spinBox_52.setValue) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label_2.setText(_translate("MainWindow", "PsycheEval"))
        self.pushButton_8.setText(_translate("MainWindow", "   General"))
        self.pushButton_11.setText(_translate("MainWindow", "   Stress "))
        self.pushButton_7.setText(_translate("MainWindow", "   Depression"))
        self.pushButton_10.setText(_translate("MainWindow", "   Self-Esteem"))
        self.pushButton_9.setText(_translate("MainWindow", "   Preview"))
        self.pushButton_14.setText(_translate("MainWindow", "   Database"))
        self.pushButton_12.setText(_translate("MainWindow", "   Exit"))
        self.label.setText(_translate("MainWindow", "1"))
        self.label_8.setText(_translate("MainWindow", "I am a good and worthwhile person."))
        self.label_4.setText(_translate("MainWindow", "2"))
        self.label_9.setText(_translate("MainWindow", "I am as valuable a person as anyone else."))
        self.label_10.setText(_translate("MainWindow", "3"))
        self.label_11.setText(_translate("MainWindow", "I have good values that guide me in my life."))
        self.label_18.setText(_translate("MainWindow", "4"))
        self.label_19.setText(_translate("MainWindow", "When I look at my eyes in the mirror, I feel good about myself."))
        self.label_20.setText(_translate("MainWindow", "5"))
        self.label_21.setText(_translate("MainWindow", "I feel like I have done well in my life."))
        self.label_22.setText(_translate("MainWindow", "6"))
        self.label_23.setText(_translate("MainWindow", "I can laugh at myself."))
        self.label_57.setText(_translate("MainWindow", "7"))
        self.label_58.setText(_translate("MainWindow", "I like being me."))
        self.label_73.setText(_translate("MainWindow", "8"))
        self.label_74.setText(_translate("MainWindow", "I like myself, even when others reject me."))
        self.label_75.setText(_translate("MainWindow", "9"))
        self.label_76.setText(_translate("MainWindow", "Overall, I am pleased with how I am developing as a person."))
        self.label_77.setText(_translate("MainWindow", "10"))
        self.label_78.setText(_translate("MainWindow", "I love and support myself, regardless of what happens."))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.SE_Tab_Page_1), _translate("MainWindow", "Page 1"))
        self.label_79.setText(_translate("MainWindow", "11"))
        self.label_80.setText(_translate("MainWindow", "I would rather be me than someone else."))
        self.label_87.setText(_translate("MainWindow", "12"))
        self.label_88.setText(_translate("MainWindow", "I respect myself."))
        self.label_89.setText(_translate("MainWindow", "13"))
        self.label_90.setText(_translate("MainWindow", "I continue to grow personally."))
        self.label_97.setText(_translate("MainWindow", "14"))
        self.label_98.setText(_translate("MainWindow", "I feel confident about my abilities."))
        self.label_99.setText(_translate("MainWindow", "15"))
        self.label_100.setText(_translate("MainWindow", "I have pride in who I am and what I do."))
        self.label_101.setText(_translate("MainWindow", "16"))
        self.label_102.setText(_translate("MainWindow", "I am comfortable in expressing my thoughts and feelings."))
        self.label_103.setText(_translate("MainWindow", "17"))
        self.label_104.setText(_translate("MainWindow", "I like my body."))
        self.label_105.setText(_translate("MainWindow", "18"))
        self.label_106.setText(_translate("MainWindow", "I handle difficult situations well."))
        self.label_107.setText(_translate("MainWindow", "19"))
        self.label_108.setText(_translate("MainWindow", "Overall, I make good decisions."))
        self.label_109.setText(_translate("MainWindow", "20"))
        self.label_110.setText(_translate("MainWindow", "I am a good friend and people like to be with me."))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.SE_Tab_Page_2), _translate("MainWindow", "Page 2"))
        self.label_132.setText(_translate("MainWindow", "1"))
        self.label_133.setText(_translate("MainWindow", "Low energy"))
        self.pushButton_39.setText(_translate("MainWindow", "1"))
        self.pushButton_40.setText(_translate("MainWindow", "2"))
        self.pushButton_41.setText(_translate("MainWindow", "3"))
        self.pushButton_42.setText(_translate("MainWindow", "4"))
        self.pushButton_43.setText(_translate("MainWindow", "5"))
        self.label_134.setText(_translate("MainWindow", "High Energy"))
        self.label_117.setText(_translate("MainWindow", "2"))
        self.label_118.setText(_translate("MainWindow", "Difficulty sleeping or sleep all the time"))
        self.pushButton_19.setText(_translate("MainWindow", "1"))
        self.pushButton_20.setText(_translate("MainWindow", "2"))
        self.pushButton_21.setText(_translate("MainWindow", "3"))
        self.pushButton_23.setText(_translate("MainWindow", "4"))
        self.pushButton_25.setText(_translate("MainWindow", "5"))
        self.label_119.setText(_translate("MainWindow", "Uninterrupted sleeping patterns"))
        self.label_136.setText(_translate("MainWindow", "3"))
        self.label_137.setText(_translate("MainWindow", "No desire to be involved in activities"))
        self.pushButton_49.setText(_translate("MainWindow", "1"))
        self.pushButton_50.setText(_translate("MainWindow", "2"))
        self.pushButton_51.setText(_translate("MainWindow", "3"))
        self.pushButton_52.setText(_translate("MainWindow", "4"))
        self.pushButton_53.setText(_translate("MainWindow", "5"))
        self.label_142.setText(_translate("MainWindow", "Very involved in activities"))
        self.label_143.setText(_translate("MainWindow", "4"))
        self.label_146.setText(_translate("MainWindow", "No desire for sex"))
        self.pushButton_54.setText(_translate("MainWindow", "1"))
        self.pushButton_55.setText(_translate("MainWindow", "2"))
        self.pushButton_56.setText(_translate("MainWindow", "3"))
        self.pushButton_57.setText(_translate("MainWindow", "4"))
        self.pushButton_58.setText(_translate("MainWindow", "5"))
        self.label_147.setText(_translate("MainWindow", "Healthy sex drive"))
        self.label_148.setText(_translate("MainWindow", "5"))
        self.label_149.setText(_translate("MainWindow", "Aches and pain"))
        self.pushButton_59.setText(_translate("MainWindow", "1"))
        self.pushButton_60.setText(_translate("MainWindow", "2"))
        self.pushButton_61.setText(_translate("MainWindow", "3"))
        self.pushButton_62.setText(_translate("MainWindow", "4"))
        self.pushButton_63.setText(_translate("MainWindow", "5"))
        self.label_150.setText(_translate("MainWindow", "Feel great"))
        self.label_151.setText(_translate("MainWindow", "6"))
        self.label_152.setText(_translate("MainWindow", "Loss of appetite"))
        self.pushButton_64.setText(_translate("MainWindow", "1"))
        self.pushButton_65.setText(_translate("MainWindow", "2"))
        self.pushButton_66.setText(_translate("MainWindow", "3"))
        self.pushButton_67.setText(_translate("MainWindow", "4"))
        self.pushButton_68.setText(_translate("MainWindow", "5"))
        self.label_153.setText(_translate("MainWindow", "Enjoy eating"))
        self.label_154.setText(_translate("MainWindow", "7"))
        self.label_155.setText(_translate("MainWindow", "Sad (tearful)"))
        self.pushButton_69.setText(_translate("MainWindow", "1"))
        self.pushButton_70.setText(_translate("MainWindow", "2"))
        self.pushButton_71.setText(_translate("MainWindow", "3"))
        self.pushButton_72.setText(_translate("MainWindow", "4"))
        self.pushButton_73.setText(_translate("MainWindow", "5"))
        self.label_156.setText(_translate("MainWindow", "Joyful"))
        self.label_157.setText(_translate("MainWindow", "8"))
        self.label_158.setText(_translate("MainWindow", "Despairing and hopeless"))
        self.pushButton_74.setText(_translate("MainWindow", "1"))
        self.pushButton_75.setText(_translate("MainWindow", "2"))
        self.pushButton_76.setText(_translate("MainWindow", "3"))
        self.pushButton_77.setText(_translate("MainWindow", "4"))
        self.pushButton_78.setText(_translate("MainWindow", "5"))
        self.label_159.setText(_translate("MainWindow", "Despairing and hopeless"))
        self.label_160.setText(_translate("MainWindow", "9"))
        self.label_161.setText(_translate("MainWindow", "Irritable (low frustration tolerance) "))
        self.pushButton_79.setText(_translate("MainWindow", "1"))
        self.pushButton_80.setText(_translate("MainWindow", "2"))
        self.pushButton_81.setText(_translate("MainWindow", "3"))
        self.pushButton_82.setText(_translate("MainWindow", "4"))
        self.pushButton_83.setText(_translate("MainWindow", "5"))
        self.label_162.setText(_translate("MainWindow", "Patient-high frustration tolerance"))
        self.label_163.setText(_translate("MainWindow", "10"))
        self.label_164.setText(_translate("MainWindow", "Withdrawn"))
        self.pushButton_84.setText(_translate("MainWindow", "1"))
        self.pushButton_85.setText(_translate("MainWindow", "2"))
        self.pushButton_86.setText(_translate("MainWindow", "3"))
        self.pushButton_87.setText(_translate("MainWindow", "4"))
        self.pushButton_88.setText(_translate("MainWindow", "5"))
        self.label_165.setText(_translate("MainWindow", " Involved"))
        self.tabWidget_2.setTabText(self.tabWidget_2.indexOf(self.SE_Tab_Page_3), _translate("MainWindow", "Page 1"))
        self.label_166.setText(_translate("MainWindow", "11"))
        self.label_167.setText(_translate("MainWindow", "Mental anguish"))
        self.pushButton_89.setText(_translate("MainWindow", "1"))
        self.pushButton_90.setText(_translate("MainWindow", "2"))
        self.pushButton_91.setText(_translate("MainWindow", "3"))
        self.pushButton_92.setText(_translate("MainWindow", "4"))
        self.pushButton_93.setText(_translate("MainWindow", "5"))
        self.label_168.setText(_translate("MainWindow", "Peace of mind"))
        self.label_169.setText(_translate("MainWindow", "12"))
        self.label_170.setText(_translate("MainWindow", "Low sense of self-worth"))
        self.pushButton_94.setText(_translate("MainWindow", "1"))
        self.pushButton_95.setText(_translate("MainWindow", "2"))
        self.pushButton_96.setText(_translate("MainWindow", "3"))
        self.pushButton_97.setText(_translate("MainWindow", "4"))
        self.pushButton_98.setText(_translate("MainWindow", "5"))
        self.label_171.setText(_translate("MainWindow", "High sense of self-worth"))
        self.label_172.setText(_translate("MainWindow", "13"))
        self.label_173.setText(_translate("MainWindow", "Pessimistic about the future"))
        self.pushButton_99.setText(_translate("MainWindow", "1"))
        self.pushButton_100.setText(_translate("MainWindow", "2"))
        self.pushButton_101.setText(_translate("MainWindow", "3"))
        self.pushButton_102.setText(_translate("MainWindow", "4"))
        self.pushButton_103.setText(_translate("MainWindow", "5"))
        self.label_174.setText(_translate("MainWindow", "Optimistic about the future"))
        self.label_135.setText(_translate("MainWindow", "14"))
        self.label_138.setText(_translate("MainWindow", "Perceive most circumstances as"))
        self.label_139.setText(_translate("MainWindow", "negative and harmful to self"))
        self.pushButton_44.setText(_translate("MainWindow", "1"))
        self.pushButton_45.setText(_translate("MainWindow", "2"))
        self.pushButton_46.setText(_translate("MainWindow", "3"))
        self.pushButton_47.setText(_translate("MainWindow", "4"))
        self.pushButton_48.setText(_translate("MainWindow", "5"))
        self.label_144.setText(_translate("MainWindow", "Perceive most circumstances "))
        self.label_145.setText(_translate("MainWindow", "as opportunities for growth"))
        self.label_175.setText(_translate("MainWindow", "15"))
        self.label_176.setText(_translate("MainWindow", "Self-destructive (I and others would"))
        self.label_177.setText(_translate("MainWindow", "be better off if I weren’t here"))
        self.pushButton_104.setText(_translate("MainWindow", "1"))
        self.pushButton_105.setText(_translate("MainWindow", "2"))
        self.pushButton_106.setText(_translate("MainWindow", "3"))
        self.pushButton_107.setText(_translate("MainWindow", "4"))
        self.pushButton_108.setText(_translate("MainWindow", "5"))
        self.label_178.setText(_translate("MainWindow", "Self-preserving (I’m glad "))
        self.label_179.setText(_translate("MainWindow", "I’m here)"))
        self.tabWidget_2.setTabText(self.tabWidget_2.indexOf(self.SE_Tab_Page_4), _translate("MainWindow", "Page 2"))
        self.label_180.setText(_translate("MainWindow", "1"))
        self.label_181.setText(_translate("MainWindow", "Been upset because of something that happened unexpectedly?"))
        self.pushButton_109.setText(_translate("MainWindow", "1"))
        self.pushButton_110.setText(_translate("MainWindow", "2"))
        self.pushButton_111.setText(_translate("MainWindow", "3"))
        self.pushButton_112.setText(_translate("MainWindow", "4"))
        self.pushButton_113.setText(_translate("MainWindow", "5"))
        self.label_182.setText(_translate("MainWindow", "2"))
        self.label_183.setText(_translate("MainWindow", "Felt that you were unable to control the important things in your life?"))
        self.pushButton_114.setText(_translate("MainWindow", "1"))
        self.pushButton_115.setText(_translate("MainWindow", "2"))
        self.pushButton_116.setText(_translate("MainWindow", "3"))
        self.pushButton_117.setText(_translate("MainWindow", "4"))
        self.pushButton_118.setText(_translate("MainWindow", "5"))
        self.label_184.setText(_translate("MainWindow", "3"))
        self.label_185.setText(_translate("MainWindow", "Felt nervous and \"stressed\"?"))
        self.pushButton_119.setText(_translate("MainWindow", "1"))
        self.pushButton_120.setText(_translate("MainWindow", "2"))
        self.pushButton_121.setText(_translate("MainWindow", "3"))
        self.pushButton_122.setText(_translate("MainWindow", "4"))
        self.pushButton_123.setText(_translate("MainWindow", "5"))
        self.label_186.setText(_translate("MainWindow", "4"))
        self.label_187.setText(_translate("MainWindow", "Felt unsure about your ability to handle your personal problems?"))
        self.pushButton_124.setText(_translate("MainWindow", "1"))
        self.pushButton_125.setText(_translate("MainWindow", "2"))
        self.pushButton_126.setText(_translate("MainWindow", "3"))
        self.pushButton_127.setText(_translate("MainWindow", "4"))
        self.pushButton_128.setText(_translate("MainWindow", "5"))
        self.label_188.setText(_translate("MainWindow", "5"))
        self.label_189.setText(_translate("MainWindow", "Felt that things weren\'t going your way?"))
        self.pushButton_129.setText(_translate("MainWindow", "1"))
        self.pushButton_130.setText(_translate("MainWindow", "2"))
        self.pushButton_131.setText(_translate("MainWindow", "3"))
        self.pushButton_132.setText(_translate("MainWindow", "4"))
        self.pushButton_133.setText(_translate("MainWindow", "5"))
        self.label_190.setText(_translate("MainWindow", "6"))
        self.label_191.setText(_translate("MainWindow", "Found that you could not cope with all the things that you had to do?"))
        self.pushButton_134.setText(_translate("MainWindow", "1"))
        self.pushButton_135.setText(_translate("MainWindow", "2"))
        self.pushButton_136.setText(_translate("MainWindow", "3"))
        self.pushButton_137.setText(_translate("MainWindow", "4"))
        self.pushButton_138.setText(_translate("MainWindow", "5"))
        self.label_192.setText(_translate("MainWindow", "7"))
        self.label_193.setText(_translate("MainWindow", "Been unable to control irritations in your life?"))
        self.pushButton_139.setText(_translate("MainWindow", "1"))
        self.pushButton_140.setText(_translate("MainWindow", "2"))
        self.pushButton_141.setText(_translate("MainWindow", "3"))
        self.pushButton_142.setText(_translate("MainWindow", "4"))
        self.pushButton_143.setText(_translate("MainWindow", "5"))
        self.label_194.setText(_translate("MainWindow", "8"))
        self.label_195.setText(_translate("MainWindow", "Felt that you weren\'t on top of things?"))
        self.pushButton_144.setText(_translate("MainWindow", "1"))
        self.pushButton_145.setText(_translate("MainWindow", "2"))
        self.pushButton_146.setText(_translate("MainWindow", "3"))
        self.pushButton_147.setText(_translate("MainWindow", "4"))
        self.pushButton_148.setText(_translate("MainWindow", "5"))
        self.label_196.setText(_translate("MainWindow", "9"))
        self.label_197.setText(_translate("MainWindow", "Been angered because of things that were outside of your control?"))
        self.pushButton_149.setText(_translate("MainWindow", "1"))
        self.pushButton_150.setText(_translate("MainWindow", "2"))
        self.pushButton_151.setText(_translate("MainWindow", "3"))
        self.pushButton_152.setText(_translate("MainWindow", "4"))
        self.pushButton_153.setText(_translate("MainWindow", "5"))
        self.label_198.setText(_translate("MainWindow", "10"))
        self.label_199.setText(_translate("MainWindow", "Felt difficulties were piling up so high that you could not overcome them?"))
        self.pushButton_154.setText(_translate("MainWindow", "1"))
        self.pushButton_155.setText(_translate("MainWindow", "2"))
        self.pushButton_156.setText(_translate("MainWindow", "3"))
        self.pushButton_157.setText(_translate("MainWindow", "4"))
        self.pushButton_158.setText(_translate("MainWindow", "5"))
        self.tabWidget_3.setTabText(self.tabWidget_3.indexOf(self.SE_Tab_Page_5), _translate("MainWindow", "Page 1"))
        self.label_5.setText(_translate("MainWindow", "Student Name:"))
        self.label_6.setText(_translate("MainWindow", " Age:"))
        self.label_7.setText(_translate("MainWindow", "Sex:"))
        self.radioButton.setText(_translate("MainWindow", "Male"))
        self.radioButton_2.setText(_translate("MainWindow", "Female"))
        self.label_33.setText(_translate("MainWindow", "School:"))
        self.label_34.setText(_translate("MainWindow", "Date:"))
        self.label_14.setText(_translate("MainWindow", "Student Name:"))
        self.label_13.setText(_translate("MainWindow", " Age:"))
        self.label_12.setText(_translate("MainWindow", "Sex:"))
        self.label_35.setText(_translate("MainWindow", "School:"))
        self.label_36.setText(_translate("MainWindow", "Date:"))
        self.label_15.setText(_translate("MainWindow", "Stress Test"))
        self.label_16.setText(_translate("MainWindow", "Depression Test"))
        self.label_17.setText(_translate("MainWindow", "Self-Esteem Test"))
import resource_rc


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
